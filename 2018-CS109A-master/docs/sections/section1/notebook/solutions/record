{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <img style=\"float: left; padding-right: 10px; width: 45px\" src=\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/iacs.png\"> CS109A Introduction to Data Science\n",
    "\n",
    "## Standard Section 1: Introduction to Web Scraping\n",
    "\n",
    "**Harvard University**<br/>\n",
    "**Fall 2018**<br/>\n",
    "**Instructors**: Pavlos Protopapas and Kevin Rader<br/>\n",
    "**Section Leaders**: Cecilia Garraffo, Mehul Smriti Raje, Ken Arnold, Karan Motwani<br/>\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       "blockquote { background: #AEDE94; }\n",
       "h1 { \n",
       "    padding-top: 25px;\n",
       "    padding-bottom: 25px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "h2 { \n",
       "    padding-top: 10px;\n",
       "    padding-bottom: 10px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "\n",
       "div.exercise {\n",
       "\tbackground-color: #ffcccc;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "}\n",
       "div.theme {\n",
       "\tbackground-color: #DDDDDD;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "\tfont-size: 18pt;\n",
       "}\n",
       "div.gc { \n",
       "\tbackground-color: #AEDE94;\n",
       "\tborder-color: #E9967A; \t \n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "\tfont-size: 12pt;\n",
       "}\n",
       "p.q1 { \n",
       "    padding-top: 5px;\n",
       "    padding-bottom: 5px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "header {\n",
       "   padding-top: 35px;\n",
       "    padding-bottom: 35px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "</style>\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#RUN THIS CELL \n",
    "import requests\n",
    "from IPython.core.display import HTML\n",
    "styles = requests.get(\"http://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/cs109.css\").text\n",
    "HTML(styles)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When we're done today, you will approach messy real-world data with confidence that you can get it into a format that you can manipulate.\n",
    "\n",
    "Specifically, our learning objectives are:\n",
    "* Understand the structure of an HTML document and use that structure to extract desired information\n",
    "* Use Python data structures such as lists, dictionaries, and Pandas DataFrames to store and manipulate information\n",
    "* Identify some other (semi-)structured formats commonly used for storing and transferring data, such as JSON and CSV\n",
    "* Practice using [Python](https://docs.python.org/3.6/) packages such as [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) and [Pandas](https://pandas.pydata.org/pandas-docs/stable/), including how to navigate their documentation to find functionality."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "sns.set_style(\"whitegrid\")\n",
    "sns.set_context(\"notebook\")\n",
    "import json\n",
    "\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "from IPython.display import HTML"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Setting up 'requests' to make HTTPS requests properly takes some extra steps... we'll skip them for now.\n",
    "requests.packages.urllib3.disable_warnings()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Goals"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Is science becoming more collaborative over time? How about literature? Are there a few \"geniuses\" or lots of hard workers? One way we might answer those questions is by looking at Nobel Prizes. We could ask questions like:\n",
    "\n",
    "* How has the number of recipients per award changed over time?\n",
    "* Has anyone won a prize more than once?\n",
    "\n",
    "To answer these questions, we'll need data: *who* received *what* award *when*. \n",
    "\n",
    "Before we dive into acquiring this data the way we've been teaching in class, let's pause to ask: **what are 5 different approaches we could take to acquiring Nobel Prize data**?\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Ingesting data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Turns out that https://www.nobelprize.org/prizes/lists/all-nobel-prizes/ has the data we want. But the `nobelprize.org` server is a little slow sometimes. Fortunately, the Internet Archive periodically crawls most of the Internet and saves what it finds. (That's a lot of data!) So let's grab the data from the Archive's \"Wayback Machine\" (great name!).\n",
    "\n",
    "We'll just give you the direct URL, but at the very end you'll see how we can get it out of a JSON response from the Wayback Machine API."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "snapshot_url = 'http://web.archive.org/web/20180820111639/https://www.nobelprize.org/prizes/lists/all-nobel-prizes/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "snapshot = requests.get(snapshot_url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Always remember to “not to be evil” when scraping with requests! If downloading multiple pages (like you will be on HW1), always put a delay between requests (e.g, `time.sleep(1)`, with the `time` library) so you don’t unwittingly hammer someone’s webserver and/or get blocked."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t<!DOCTYPE html>\n",
      "\n",
      "\t<html lang=\"en-US\" prefix=\"og: http://ogp.me/ns#\" class=\"no-js\">\n",
      "\n",
      "\t<head><script src=\"//archive.org/includes/analytics.js?v=cf34f82\" type=\"text/javascript\"></script>\n",
      "<script type=\"text/javascript\">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app42.us.archive.org';v.server_ms=562;archive_analytics.send_pageview({});});</script>\n",
      "<script type=\"text/javascript\" src=\"/static/js/ait-client-rewrite.js?v=154949\n"
     ]
    }
   ],
   "source": [
    "raw_html = snapshot.text\n",
    "print(raw_html[:500])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we have all our data in the notebook. Unfortunately, it is the form of one really long string, which is hard to work with directly. This is where BeautifulSoup comes in.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parse the HTML with BeautifulSoup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "soup = BeautifulSoup(raw_html, 'html.parser')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Key BeautifulSoup functions we’ll be using in this section:\n",
    "- **`node.prettify()`**: Returns cleaned-up version of raw HTML, useful for printing\n",
    "- **`node.select(selector)`**: Return a list of nodes matching a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Simple_selectors)\n",
    "- **`node.select_one(selector)`**: Return the first node matching a CSS selector\n",
    "- **`node.text/soup.get_text()`**: Returns visible text of a node (e.g.,\"`<p>Some text</p>`\" -> \"Some text\")\n",
    "- **`node.contents`**: A list of the immediate children of this node\n",
    "\n",
    "You can also use these functions to find nodes.\n",
    "- **`node.find_all(tag_name, attrs=attributes_dict)`**: Returns a list of matching nodes\n",
    "- **`node.find(tag_name, attrs=attributes_dict)`**: Returns first matching node\n",
    "\n",
    "BeautifulSoup is a very powerful library -- much more info here: https://www.crummy.com/software/BeautifulSoup/bs4/doc/"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Let's practice some BeautifulSoup commands..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Print a cleaned-up version of the raw HTML**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<!DOCTYPE html>\n",
      "<html class=\"no-js\" lang=\"en-US\" prefix=\"og: http://ogp.me/ns#\">\n",
      " <head>\n",
      "  <script src=\"//archive.org/includes/analytics.js?v=cf34f82\" type=\"text/javascript\">\n",
      "  </script>\n",
      "  <script type=\"text/javascript\">\n",
      "   window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app42.us.archive.org';v.server_ms=562;archive_analytics.send_pageview({});});\n",
      "  </script>\n",
      "  <script charset=\"utf-8\" src=\"/static/js/ait-client-rewrite.js?v=\n"
     ]
    }
   ],
   "source": [
    "# Your code here\n",
    "print(soup.prettify()[:500])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Find the first “title” object ** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<title>All Nobel Prizes</title>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "soup.select_one('title')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Extract the text of first “title” object ** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'All Nobel Prizes'"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "soup.select_one('title').text"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extracting award data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's use the structure of the HTML document to extract the data we want.\n",
    "\n",
    "From inspecting the page in DevTools, we found that each award is in a `div` with a `by_year` class. Let's get all of them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "640"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "award_nodes = soup.select('.by_year')\n",
    "len(award_nodes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's pull out an example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "award_node = award_nodes[200]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div class=\"by_year\">\n",
       " <h3>\n",
       "  <a href=\"http://web.archive.org/web/20180820111639/https://www.nobelprize.org/nobel_prizes/medicine/laureates/1985/\">\n",
       "   The Nobel Prize in Physiology or Medicine 1985\n",
       "  </a>\n",
       " </h3>\n",
       " <h6>\n",
       "  <a href=\"http://web.archive.org/web/20180820111639/https://www.nobelprize.org/nobel_prizes/medicine/laureates/1985/brown-facts.html\">\n",
       "   Michael S. Brown\n",
       "  </a>\n",
       "  and\n",
       "  <a href=\"http://web.archive.org/web/20180820111639/https://www.nobelprize.org/nobel_prizes/medicine/laureates/1985/goldstein-facts.html\">\n",
       "   Joseph L. Goldstein\n",
       "  </a>\n",
       " </h6>\n",
       " <p>\n",
       "  “for their discoveries concerning the regulation of cholesterol metabolism”\n",
       " </p>\n",
       "</div>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "HTML(award_node.prettify())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Let's practice getting data out of a BS Node"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The prize title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The Nobel Prize in Physiology or Medicine 1985'"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "award_node.select_one('h3').text"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**How do we separate the title from the year?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The Nobel Prize in Physiology or Medicine'"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "award_node.select_one('h3').text[:-5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_award_title(award_node):\n",
    "    return award_node.select_one('h3').text[:-4].strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_award_year(award_node):\n",
    "    return int(award_node.select_one('h3').text[-4:])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Make a list of titles for all awards**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize',\n",
       " 'The Nobel Prize in Physics',\n",
       " 'The Nobel Prize in Chemistry',\n",
       " 'The Nobel Prize in Physiology or Medicine',\n",
       " 'The Nobel Prize in Literature',\n",
       " 'The Nobel Peace Prize']"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[get_award_title(award_node) for award_node in award_nodes]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Make a list of dictionaries of the title and year for all awards.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'title': 'The Nobel Prize in Physics', 'year': 2018},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2018},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2018},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2018},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2018},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2018},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2017},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2017},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2017},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2017},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2017},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2017},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2016},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2016},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2016},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2016},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2016},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2016},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2015},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2015},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2015},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2015},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2015},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2015},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2014},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2014},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2014},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2014},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2014},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2014},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2013},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2013},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2013},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2013},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2013},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2013},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2012},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2012},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2012},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2012},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2012},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2012},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2011},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2011},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2011},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2011},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2011},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2011},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2010},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2010},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2010},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2010},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2010},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2010},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2009},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2009},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2009},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2009},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2009},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2009},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2008},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2008},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2008},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2008},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2008},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2008},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2007},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2007},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2007},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2007},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2007},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2007},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2006},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2006},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2006},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2006},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2006},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2006},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2005},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2005},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2005},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2005},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2005},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2005},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2004},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2004},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2004},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2004},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2004},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2004},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2003},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2003},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2003},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2003},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2003},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2003},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2002},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2002},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2002},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2002},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2002},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2002},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2001},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2001},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2001},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2001},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2001},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2001},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 2000},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 2000},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 2000},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 2000},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 2000},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 2000},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1999},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1999},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1999},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1999},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1999},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1999},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1998},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1998},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1998},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1998},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1998},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1998},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1997},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1997},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1997},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1997},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1997},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1997},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1996},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1996},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1996},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1996},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1996},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1996},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1995},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1995},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1995},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1995},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1995},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1995},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1994},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1994},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1994},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1994},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1994},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1994},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1993},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1993},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1993},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1993},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1993},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1993},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1992},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1992},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1992},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1992},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1992},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1992},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1991},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1991},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1991},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1991},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1991},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1991},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1990},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1990},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1990},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1990},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1990},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1990},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1989},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1989},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1989},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1989},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1989},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1989},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1988},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1988},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1988},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1988},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1988},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1988},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1987},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1987},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1987},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1987},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1987},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1987},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1986},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1986},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1986},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1986},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1986},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1986},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1985},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1985},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1985},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1985},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1985},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1985},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1984},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1984},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1984},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1984},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1984},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1984},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1983},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1983},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1983},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1983},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1983},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1983},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1982},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1982},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1982},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1982},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1982},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1982},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1981},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1981},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1981},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1981},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1981},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1981},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1980},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1980},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1980},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1980},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1980},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1980},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1979},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1979},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1979},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1979},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1979},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1979},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1978},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1978},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1978},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1978},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1978},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1978},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1977},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1977},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1977},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1977},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1977},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1977},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1976},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1976},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1976},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1976},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1976},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1976},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1975},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1975},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1975},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1975},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1975},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1975},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1974},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1974},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1974},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1974},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1974},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1974},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1973},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1973},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1973},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1973},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1973},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1973},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1972},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1972},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1972},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1972},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1972},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1972},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1971},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1971},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1971},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1971},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1971},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1971},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1970},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1970},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1970},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1970},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1970},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1970},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1969},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1969},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1969},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1969},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1969},\n",
       " {'title': 'The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel',\n",
       "  'year': 1969},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1968},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1968},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1968},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1968},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1968},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1967},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1967},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1967},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1967},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1967},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1966},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1966},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1966},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1966},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1966},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1965},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1965},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1965},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1965},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1965},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1964},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1964},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1964},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1964},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1964},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1963},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1963},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1963},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1963},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1963},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1962},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1962},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1962},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1962},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1962},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1961},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1961},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1961},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1961},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1961},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1960},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1960},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1960},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1960},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1960},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1959},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1959},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1959},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1959},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1959},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1958},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1958},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1958},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1958},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1958},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1957},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1957},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1957},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1957},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1957},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1956},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1956},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1956},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1956},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1956},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1955},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1955},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1955},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1955},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1955},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1954},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1954},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1954},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1954},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1954},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1953},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1953},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1953},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1953},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1953},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1952},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1952},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1952},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1952},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1952},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1951},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1951},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1951},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1951},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1951},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1950},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1950},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1950},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1950},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1950},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1949},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1949},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1949},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1949},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1949},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1948},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1948},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1948},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1948},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1948},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1947},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1947},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1947},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1947},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1947},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1946},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1946},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1946},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1946},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1946},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1945},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1945},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1945},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1945},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1945},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1944},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1944},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1944},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1944},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1944},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1943},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1943},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1943},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1943},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1943},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1942},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1942},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1942},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1942},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1942},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1941},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1941},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1941},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1941},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1941},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1940},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1940},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1940},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1940},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1940},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1939},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1939},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1939},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1939},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1939},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1938},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1938},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1938},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1938},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1938},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1937},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1937},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1937},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1937},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1937},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1936},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1936},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1936},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1936},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1936},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1935},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1935},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1935},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1935},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1935},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1934},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1934},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1934},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1934},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1934},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1933},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1933},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1933},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1933},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1933},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1932},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1932},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1932},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1932},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1932},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1931},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1931},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1931},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1931},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1931},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1930},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1930},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1930},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1930},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1930},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1929},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1929},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1929},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1929},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1929},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1928},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1928},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1928},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1928},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1928},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1927},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1927},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1927},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1927},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1927},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1926},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1926},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1926},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1926},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1926},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1925},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1925},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1925},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1925},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1925},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1924},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1924},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1924},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1924},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1924},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1923},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1923},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1923},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1923},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1923},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1922},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1922},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1922},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1922},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1922},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1921},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1921},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1921},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1921},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1921},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1920},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1920},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1920},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1920},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1920},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1919},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1919},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1919},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1919},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1919},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1918},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1918},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1918},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1918},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1918},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1917},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1917},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1917},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1917},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1917},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1916},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1916},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1916},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1916},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1916},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1915},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1915},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1915},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1915},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1915},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1914},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1914},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1914},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1914},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1914},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1913},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1913},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1913},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1913},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1913},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1912},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1912},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1912},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1912},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1912},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1911},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1911},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1911},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1911},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1911},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1910},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1910},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1910},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1910},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1910},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1909},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1909},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1909},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1909},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1909},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1908},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1908},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1908},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1908},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1908},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1907},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1907},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1907},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1907},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1907},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1906},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1906},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1906},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1906},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1906},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1905},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1905},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1905},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1905},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1905},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1904},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1904},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1904},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1904},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1904},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1903},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1903},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1903},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1903},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1903},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1902},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1902},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1902},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1902},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1902},\n",
       " {'title': 'The Nobel Prize in Physics', 'year': 1901},\n",
       " {'title': 'The Nobel Prize in Chemistry', 'year': 1901},\n",
       " {'title': 'The Nobel Prize in Physiology or Medicine', 'year': 1901},\n",
       " {'title': 'The Nobel Prize in Literature', 'year': 1901},\n",
       " {'title': 'The Nobel Peace Prize', 'year': 1901}]"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[\n",
    "    dict(\n",
    "        title=get_award_title(award_node),\n",
    "        year=get_award_year(award_node))\n",
    "    for award_node in award_nodes\n",
    "]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The recipients\n",
    "**how do we handle there being more than one?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Michael S. Brown', 'Joseph L. Goldstein']"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[node.text for node in award_node.select('h6 a')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll leave them as a list for now, to return to this later."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The prize \"motivation\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'“for their discoveries concerning the regulation of cholesterol metabolism”'"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "award_node.select_one('p').text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_award_motivation(award_node):\n",
    "    award_node = award_node.select_one('p')\n",
    "    if not award_node:\n",
    "        return None\n",
    "    return award_node.text #.lstrip('\\u201c').rstrip('\\u201d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_recipients(award_node):\n",
    "    return [node.text for node in award_node.select('h6 a')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's get all of the awards."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "awards = []\n",
    "for award_node in soup.select('.by_year'):\n",
    "    recipients = get_recipients(award_node)\n",
    "    award = {}\n",
    "    award['title'] = get_award_title(award_node)\n",
    "    award['year'] = get_award_year(award_node)\n",
    "    award['recipients'] = recipients\n",
    "    award['num_recipients'] = len(recipients)\n",
    "    award['motivation'] = get_award_motivation(award_node)    \n",
    "    awards.append(award)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_awards_raw = pd.DataFrame(awards)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Some quick EDA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 640 entries, 0 to 639\n",
      "Data columns (total 5 columns):\n",
      "motivation        571 non-null object\n",
      "num_recipients    640 non-null int64\n",
      "recipients        640 non-null object\n",
      "title             640 non-null object\n",
      "year              640 non-null int64\n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 25.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df_awards_raw.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1901"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_raw.year.min()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Hm, that's suspiciously close to a round number. Are we missing some?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**How about recipients?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    347\n",
       "2    138\n",
       "3    100\n",
       "0     55\n",
       "Name: num_recipients, dtype: int64"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_raw.num_recipients.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Why do some have no recipients?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>motivation</th>\n",
       "      <th>num_recipients</th>\n",
       "      <th>recipients</th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The 2018 Nobel Prize in Physics has not been a...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The 2018 Nobel Prize in Chemistry has not been...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>The 2018 Nobel Prize in Physiology or Medicine...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>The 2018 Nobel Prize in Literature has been po...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>The 2018 Nobel Peace Prize has not been awarde...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>The 2018 Prize in Economic Sciences has not be...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Sveriges Riksbank Prize in Economic Scienc...</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>314</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>364</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>428</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>430</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>432</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>433</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>436</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>437</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>438</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>439</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>440</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>441</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>484</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>485</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>517</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>521</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>524</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>546</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>552</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>560</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>562</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>567</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>569</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>573</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>574</th>\n",
       "      <td>No Nobel Prize was awarded this year. The priz...</td>\n",
       "      <td>0</td>\n",
       "      <td>[]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1914</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            motivation  num_recipients  \\\n",
       "0    The 2018 Nobel Prize in Physics has not been a...               0   \n",
       "1    The 2018 Nobel Prize in Chemistry has not been...               0   \n",
       "2    The 2018 Nobel Prize in Physiology or Medicine...               0   \n",
       "3    The 2018 Nobel Prize in Literature has been po...               0   \n",
       "4    The 2018 Nobel Peace Prize has not been awarde...               0   \n",
       "5    The 2018 Prize in Economic Sciences has not be...               0   \n",
       "280  No Nobel Prize was awarded this year. The priz...               0   \n",
       "309  No Nobel Prize was awarded this year. The priz...               0   \n",
       "314  No Nobel Prize was awarded this year. The priz...               0   \n",
       "364  No Nobel Prize was awarded this year. The priz...               0   \n",
       "369  No Nobel Prize was awarded this year. The priz...               0   \n",
       "404  No Nobel Prize was awarded this year. The priz...               0   \n",
       "428  No Nobel Prize was awarded this year. The priz...               0   \n",
       "429  No Nobel Prize was awarded this year. The priz...               0   \n",
       "430  No Nobel Prize was awarded this year. The priz...               0   \n",
       "431  No Nobel Prize was awarded this year. The priz...               0   \n",
       "432  No Nobel Prize was awarded this year. The priz...               0   \n",
       "433  No Nobel Prize was awarded this year. The priz...               0   \n",
       "434  No Nobel Prize was awarded this year. The priz...               0   \n",
       "435  No Nobel Prize was awarded this year. The priz...               0   \n",
       "436  No Nobel Prize was awarded this year. The priz...               0   \n",
       "437  No Nobel Prize was awarded this year. The priz...               0   \n",
       "438  No Nobel Prize was awarded this year. The priz...               0   \n",
       "439  No Nobel Prize was awarded this year. The priz...               0   \n",
       "440  No Nobel Prize was awarded this year. The priz...               0   \n",
       "441  No Nobel Prize was awarded this year. The priz...               0   \n",
       "442  No Nobel Prize was awarded this year. The priz...               0   \n",
       "443  No Nobel Prize was awarded this year. The priz...               0   \n",
       "444  No Nobel Prize was awarded this year. The priz...               0   \n",
       "449  No Nobel Prize was awarded this year. The priz...               0   \n",
       "468  No Nobel Prize was awarded this year. The priz...               0   \n",
       "470  No Nobel Prize was awarded this year. The priz...               0   \n",
       "476  No Nobel Prize was awarded this year. The priz...               0   \n",
       "484  No Nobel Prize was awarded this year. The priz...               0   \n",
       "485  No Nobel Prize was awarded this year. The priz...               0   \n",
       "504  No Nobel Prize was awarded this year. The priz...               0   \n",
       "517  No Nobel Prize was awarded this year. The priz...               0   \n",
       "521  No Nobel Prize was awarded this year. The priz...               0   \n",
       "524  No Nobel Prize was awarded this year. The priz...               0   \n",
       "529  No Nobel Prize was awarded this year. The priz...               0   \n",
       "537  No Nobel Prize was awarded this year. The priz...               0   \n",
       "546  No Nobel Prize was awarded this year. The priz...               0   \n",
       "552  No Nobel Prize was awarded this year. The priz...               0   \n",
       "553  No Nobel Prize was awarded this year. The priz...               0   \n",
       "554  No Nobel Prize was awarded this year. The priz...               0   \n",
       "556  No Nobel Prize was awarded this year. The priz...               0   \n",
       "557  No Nobel Prize was awarded this year. The priz...               0   \n",
       "560  No Nobel Prize was awarded this year. The priz...               0   \n",
       "561  No Nobel Prize was awarded this year. The priz...               0   \n",
       "562  No Nobel Prize was awarded this year. The priz...               0   \n",
       "564  No Nobel Prize was awarded this year. The priz...               0   \n",
       "567  No Nobel Prize was awarded this year. The priz...               0   \n",
       "569  No Nobel Prize was awarded this year. The priz...               0   \n",
       "573  No Nobel Prize was awarded this year. The priz...               0   \n",
       "574  No Nobel Prize was awarded this year. The priz...               0   \n",
       "\n",
       "    recipients                                              title  year  \n",
       "0           []                         The Nobel Prize in Physics  2018  \n",
       "1           []                       The Nobel Prize in Chemistry  2018  \n",
       "2           []          The Nobel Prize in Physiology or Medicine  2018  \n",
       "3           []                      The Nobel Prize in Literature  2018  \n",
       "4           []                              The Nobel Peace Prize  2018  \n",
       "5           []  The Sveriges Riksbank Prize in Economic Scienc...  2018  \n",
       "280         []                              The Nobel Peace Prize  1972  \n",
       "309         []                              The Nobel Peace Prize  1967  \n",
       "314         []                              The Nobel Peace Prize  1966  \n",
       "364         []                              The Nobel Peace Prize  1956  \n",
       "369         []                              The Nobel Peace Prize  1955  \n",
       "404         []                              The Nobel Peace Prize  1948  \n",
       "428         []                      The Nobel Prize in Literature  1943  \n",
       "429         []                              The Nobel Peace Prize  1943  \n",
       "430         []                         The Nobel Prize in Physics  1942  \n",
       "431         []                       The Nobel Prize in Chemistry  1942  \n",
       "432         []          The Nobel Prize in Physiology or Medicine  1942  \n",
       "433         []                      The Nobel Prize in Literature  1942  \n",
       "434         []                              The Nobel Peace Prize  1942  \n",
       "435         []                         The Nobel Prize in Physics  1941  \n",
       "436         []                       The Nobel Prize in Chemistry  1941  \n",
       "437         []          The Nobel Prize in Physiology or Medicine  1941  \n",
       "438         []                      The Nobel Prize in Literature  1941  \n",
       "439         []                              The Nobel Peace Prize  1941  \n",
       "440         []                         The Nobel Prize in Physics  1940  \n",
       "441         []                       The Nobel Prize in Chemistry  1940  \n",
       "442         []          The Nobel Prize in Physiology or Medicine  1940  \n",
       "443         []                      The Nobel Prize in Literature  1940  \n",
       "444         []                              The Nobel Peace Prize  1940  \n",
       "449         []                              The Nobel Peace Prize  1939  \n",
       "468         []                      The Nobel Prize in Literature  1935  \n",
       "470         []                         The Nobel Prize in Physics  1934  \n",
       "476         []                       The Nobel Prize in Chemistry  1933  \n",
       "484         []                              The Nobel Peace Prize  1932  \n",
       "485         []                         The Nobel Prize in Physics  1931  \n",
       "504         []                              The Nobel Peace Prize  1928  \n",
       "517         []          The Nobel Prize in Physiology or Medicine  1925  \n",
       "521         []                       The Nobel Prize in Chemistry  1924  \n",
       "524         []                              The Nobel Peace Prize  1924  \n",
       "529         []                              The Nobel Peace Prize  1923  \n",
       "537         []          The Nobel Prize in Physiology or Medicine  1921  \n",
       "546         []                       The Nobel Prize in Chemistry  1919  \n",
       "552         []          The Nobel Prize in Physiology or Medicine  1918  \n",
       "553         []                      The Nobel Prize in Literature  1918  \n",
       "554         []                              The Nobel Peace Prize  1918  \n",
       "556         []                       The Nobel Prize in Chemistry  1917  \n",
       "557         []          The Nobel Prize in Physiology or Medicine  1917  \n",
       "560         []                         The Nobel Prize in Physics  1916  \n",
       "561         []                       The Nobel Prize in Chemistry  1916  \n",
       "562         []          The Nobel Prize in Physiology or Medicine  1916  \n",
       "564         []                              The Nobel Peace Prize  1916  \n",
       "567         []          The Nobel Prize in Physiology or Medicine  1915  \n",
       "569         []                              The Nobel Peace Prize  1915  \n",
       "573         []                      The Nobel Prize in Literature  1914  \n",
       "574         []                              The Nobel Peace Prize  1914  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_raw[df_awards_raw.num_recipients == 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ok: 2018 awards have no recipients because they haven't been awarded yet. Some past years lack awards because there actually were none that year. Let's keep only meaningful data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 634 entries, 6 to 639\n",
      "Data columns (total 5 columns):\n",
      "motivation        565 non-null object\n",
      "num_recipients    634 non-null int64\n",
      "recipients        634 non-null object\n",
      "title             634 non-null object\n",
      "year              634 non-null int64\n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 29.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df_awards_past = df_awards_raw[df_awards_raw.year != 2018]\n",
    "df_awards_past.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hm, `motivation` has a different number of items... why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>motivation</th>\n",
       "      <th>num_recipients</th>\n",
       "      <th>recipients</th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>[The 14th Dalai Lama (Tenzin Gyatso) ]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>[United Nations Peacekeeping Forces ]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>[Elie Wiesel]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>[International Physicians for the Prevention o...</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>[Desmond Mpilo Tutu]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1984</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    motivation  num_recipients  \\\n",
       "178       None               1   \n",
       "184       None               1   \n",
       "196       None               1   \n",
       "202       None               1   \n",
       "208       None               1   \n",
       "\n",
       "                                            recipients                  title  \\\n",
       "178             [The 14th Dalai Lama (Tenzin Gyatso) ]  The Nobel Peace Prize   \n",
       "184              [United Nations Peacekeeping Forces ]  The Nobel Peace Prize   \n",
       "196                                      [Elie Wiesel]  The Nobel Peace Prize   \n",
       "202  [International Physicians for the Prevention o...  The Nobel Peace Prize   \n",
       "208                               [Desmond Mpilo Tutu]  The Nobel Peace Prize   \n",
       "\n",
       "     year  \n",
       "178  1989  \n",
       "184  1988  \n",
       "196  1986  \n",
       "202  1985  \n",
       "208  1984  "
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_past[df_awards_past.motivation.isnull()].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looks like it's fine that those motivations were missing."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Sort the awards by year. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>motivation</th>\n",
       "      <th>num_recipients</th>\n",
       "      <th>recipients</th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>639</th>\n",
       "      <td>None</td>\n",
       "      <td>2</td>\n",
       "      <td>[Jean Henry Dunant, Frédéric Passy]</td>\n",
       "      <td>The Nobel Peace Prize</td>\n",
       "      <td>1901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>635</th>\n",
       "      <td>“in recognition of the extraordinary services ...</td>\n",
       "      <td>1</td>\n",
       "      <td>[Wilhelm Conrad Röntgen]</td>\n",
       "      <td>The Nobel Prize in Physics</td>\n",
       "      <td>1901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>638</th>\n",
       "      <td>“in special recognition of his poetic composit...</td>\n",
       "      <td>1</td>\n",
       "      <td>[Sully Prudhomme]</td>\n",
       "      <td>The Nobel Prize in Literature</td>\n",
       "      <td>1901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>637</th>\n",
       "      <td>“for his work on serum therapy, especially its...</td>\n",
       "      <td>1</td>\n",
       "      <td>[Emil Adolf von Behring]</td>\n",
       "      <td>The Nobel Prize in Physiology or Medicine</td>\n",
       "      <td>1901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>636</th>\n",
       "      <td>“in recognition of the extraordinary services ...</td>\n",
       "      <td>1</td>\n",
       "      <td>[Jacobus Henricus van ‘t Hoff]</td>\n",
       "      <td>The Nobel Prize in Chemistry</td>\n",
       "      <td>1901</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            motivation  num_recipients  \\\n",
       "639                                               None               2   \n",
       "635  “in recognition of the extraordinary services ...               1   \n",
       "638  “in special recognition of his poetic composit...               1   \n",
       "637  “for his work on serum therapy, especially its...               1   \n",
       "636  “in recognition of the extraordinary services ...               1   \n",
       "\n",
       "                              recipients  \\\n",
       "639  [Jean Henry Dunant, Frédéric Passy]   \n",
       "635             [Wilhelm Conrad Röntgen]   \n",
       "638                    [Sully Prudhomme]   \n",
       "637             [Emil Adolf von Behring]   \n",
       "636       [Jacobus Henricus van ‘t Hoff]   \n",
       "\n",
       "                                         title  year  \n",
       "639                      The Nobel Peace Prize  1901  \n",
       "635                 The Nobel Prize in Physics  1901  \n",
       "638              The Nobel Prize in Literature  1901  \n",
       "637  The Nobel Prize in Physiology or Medicine  1901  \n",
       "636               The Nobel Prize in Chemistry  1901  "
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_past.sort_values('year').head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How many awards of each type were given?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "The Nobel Prize in Physics                                                    117\n",
       "The Nobel Prize in Physiology or Medicine                                     117\n",
       "The Nobel Prize in Chemistry                                                  117\n",
       "The Nobel Prize in Literature                                                 117\n",
       "The Nobel Peace Prize                                                         117\n",
       "The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel     49\n",
       "Name: title, dtype: int64"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_past.title.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But wait, that includes the years the awards weren't offered."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "The Nobel Prize in Physics                                                    111\n",
       "The Nobel Prize in Literature                                                 110\n",
       "The Nobel Prize in Chemistry                                                  109\n",
       "The Nobel Prize in Physiology or Medicine                                     108\n",
       "The Nobel Peace Prize                                                          98\n",
       "The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel     49\n",
       "Name: title, dtype: int64"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_actually_offered = df_awards_past[df_awards_past.num_recipients > 0]\n",
    "df_awards_actually_offered.title.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### When was each award first given?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>The Nobel Peace Prize</th>\n",
       "      <td>98.0</td>\n",
       "      <td>1962.897959</td>\n",
       "      <td>34.909157</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>1933.25</td>\n",
       "      <td>1966.5</td>\n",
       "      <td>1992.75</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Nobel Prize in Chemistry</th>\n",
       "      <td>109.0</td>\n",
       "      <td>1961.201835</td>\n",
       "      <td>33.999123</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>1932.00</td>\n",
       "      <td>1963.0</td>\n",
       "      <td>1990.00</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Nobel Prize in Literature</th>\n",
       "      <td>110.0</td>\n",
       "      <td>1960.636364</td>\n",
       "      <td>34.221547</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>1930.25</td>\n",
       "      <td>1962.5</td>\n",
       "      <td>1989.75</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Nobel Prize in Physics</th>\n",
       "      <td>111.0</td>\n",
       "      <td>1960.351351</td>\n",
       "      <td>34.248198</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>1929.50</td>\n",
       "      <td>1962.0</td>\n",
       "      <td>1989.50</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Nobel Prize in Physiology or Medicine</th>\n",
       "      <td>108.0</td>\n",
       "      <td>1961.740741</td>\n",
       "      <td>33.744884</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>1933.75</td>\n",
       "      <td>1963.5</td>\n",
       "      <td>1990.25</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>The Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel</th>\n",
       "      <td>49.0</td>\n",
       "      <td>1993.000000</td>\n",
       "      <td>14.288690</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>1981.00</td>\n",
       "      <td>1993.0</td>\n",
       "      <td>2005.00</td>\n",
       "      <td>2017.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    count         mean  \\\n",
       "title                                                                    \n",
       "The Nobel Peace Prize                                98.0  1962.897959   \n",
       "The Nobel Prize in Chemistry                        109.0  1961.201835   \n",
       "The Nobel Prize in Literature                       110.0  1960.636364   \n",
       "The Nobel Prize in Physics                          111.0  1960.351351   \n",
       "The Nobel Prize in Physiology or Medicine           108.0  1961.740741   \n",
       "The Sveriges Riksbank Prize in Economic Science...   49.0  1993.000000   \n",
       "\n",
       "                                                          std     min  \\\n",
       "title                                                                   \n",
       "The Nobel Peace Prize                               34.909157  1901.0   \n",
       "The Nobel Prize in Chemistry                        33.999123  1901.0   \n",
       "The Nobel Prize in Literature                       34.221547  1901.0   \n",
       "The Nobel Prize in Physics                          34.248198  1901.0   \n",
       "The Nobel Prize in Physiology or Medicine           33.744884  1901.0   \n",
       "The Sveriges Riksbank Prize in Economic Science...  14.288690  1969.0   \n",
       "\n",
       "                                                        25%     50%      75%  \\\n",
       "title                                                                          \n",
       "The Nobel Peace Prize                               1933.25  1966.5  1992.75   \n",
       "The Nobel Prize in Chemistry                        1932.00  1963.0  1990.00   \n",
       "The Nobel Prize in Literature                       1930.25  1962.5  1989.75   \n",
       "The Nobel Prize in Physics                          1929.50  1962.0  1989.50   \n",
       "The Nobel Prize in Physiology or Medicine           1933.75  1963.5  1990.25   \n",
       "The Sveriges Riksbank Prize in Economic Science...  1981.00  1993.0  2005.00   \n",
       "\n",
       "                                                       max  \n",
       "title                                                       \n",
       "The Nobel Peace Prize                               2017.0  \n",
       "The Nobel Prize in Chemistry                        2017.0  \n",
       "The Nobel Prize in Literature                       2017.0  \n",
       "The Nobel Prize in Physics                          2017.0  \n",
       "The Nobel Prize in Physiology or Medicine           2017.0  \n",
       "The Sveriges Riksbank Prize in Economic Science...  2017.0  "
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_awards_actually_offered.groupby('title').year.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## How many recipients per year?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's include the years with missing awards; if we were to analyze further, we'd have to decide whether to include them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a1afeee48>"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1afee550>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_awards_past.plot.scatter(x='year', y='num_recipients')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's hard to see a trend when there are multiple observations per year (**why?**).\n",
    "\n",
    "Let's try looking at *mean* num recipients by year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a1af5efd0>"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n8PLLLwMARkZGcN9992Hjxo14+OGHEYvFqrYGIxhZJwDEYjGsXbtW6VVfS+s0ssbf/va3uPPOO3HH\nHXfgX//1XwHU1hoBY+t8+umnsX79etx1111KjUetrJPneTz66KPYuHEj1q9fjzfffBM9PT245557\nsHHjRvzDP/yDss4f/OAHWL9+Pe6++27s27cPAPK+tiaRiKK88MIL0q233irdeeedkiRJ0u233y75\n/X5JkiTpueeek373u99J7733nvTVr35VkiRJSiQS0g033CCNjY1J3/nOd6Tf/OY3kiRJ0o9//GNp\n69atVVmDEYysk/HYY49Ja9eulbZt2yZJklQz6zSyxp6eHmn9+vVSLBaTBEGQvv/970vJZLJm1ihJ\nxtbZ3d0t3XnnnZIoitKJEyek22+/XZKk2vlZvvLKK9KTTz4pSZIkjYyMSFdffbX0wAMPSO+//74k\nSZL0rW99S/rzn/8s7d+/X9q0aZMkiqJ09uxZ6Y477pAkSdJ9ba1CEbkBOjo68Pzzzytf9/f3Y/Xq\n1QDkCUp+vx+dnZ146qmnlNcIggCLxaIZXv3pT38a77777uSefAkYWScA/OxnP0NnZyeWLVumvLZW\n1mlkje+++y5WrlyJr3/96/jCF76A1atXw2q11swaAWPrbG1thcPhQDKZRDgcVkY41so6b775Zvzd\n3/2d8rXZbMaBAwdw6aWXAsicu9/vx6c+9SlwHIfZs2dDEASMjIzovrZWISE3wE033aT8kgPA3Llz\nsXPnTgDA22+/jVgsBrvdjrq6OvA8j8ceewwbNmxQhlGzOaZutxuhUKgqazCCkXW+99576OnpyRkm\nUivrNLLG0dFRfPjhh/jnf/5nPP/883jyyScRDAZrZo2AsXVaLBaYTCbccsstuPfee3HfffcBqJ2f\npdvthsfjQTgcxkMPPYSHH34YkiSB4zjl+VAolDNAnj2u99pahYS8DJ566in8+Mc/xpe//GU0NTWh\noaEBABAIBPC3f/u3WLRoER544AEA2gHVkUgEPp+vauddKnrrfOWVV3DkyBFs2rQJf/nLX/Dss8+i\nu7u7Ztept8b6+npceuml8Hg8aGpqwqJFi3Dy5MmaXSOgv87f/e53aG5uxuuvv44333wTP/jBD9Df\n319T6+zt7cXmzZuxdu1arFmzBiZTRtLYuecbEq/32lqFhLwMtm3bhqeeegovvPACxsbGcOWVVyIe\nj+Nv/uZvsG7dOjz44IPKa1evXo1t27YBALZv315Tk7z11vm9730Pv/rVr/Diiy/iqquuwqOPPorl\ny5fX7Dr11rh69Wrs3LkTiUQC0WgUx44dQ0dHR82uEdBfp8/ng8vlgtlshtvths1mQyQSqZl1Dg0N\n4b777sOjjz6K9evXAwBWrFiBHTt2AJDP/eKLL8bq1avx17/+FaIo4ty5cxBFEY2NjbqvrVWKzuwk\ncpk3bx6+/OUvw+l04rLLLsPVV1+Nf/u3f8Pp06fx61//Gr/+9a8ByFHQV77yFXz961/Hyy+/jIaG\nBnzve9+r8tkbR2+d+ajVdeZb47p163DPPfdAkiR89atfRX19fc2uEdBfpyAI2LVrF+6++24IgoA1\na9Zg4cKFNbPOH/3oRwgGg9iyZQu2bNkCAPjmN7+JJ598Es899xwWLlyIm266CWazGRdffDE2bNgA\nURTxxBNPAAC+/vWv41vf+pbmtbUKdT8kCIKocchaIQiCqHFIyAmCIGocEnKCIIgah4ScIAiixiEh\nJwiCqHFIyAmCIGocEnKCIIgah4ScmPY8+uijSlthANi0aRP27t2Le++9F7fffjvuueceHDx4EACU\n9gPr1q3Dtddei1/+8pcAgOeffx73338/PvvZz+IXv/hFVdZBEPmgyk5i2rNu3To8//zzuOuuu3D2\n7FmMjIzg6aefxhNPPIEVK1bg6NGjePDBB/Hf//3f+PWvf42vfvWruOKKK3D69Gl8/vOfxz333AMA\nSCaT+MMf/lDl1RBELlTZSUx7JEnCZz7zGWzduhX/+Z//f3t3y6owGIZx/L/gSxrWhxXB4tcQTCu+\nRIcfwQXBbjcYLApitk4eEbPsQ8xsEIPZIjtt6XDOCQfG5vVLC3e4Vi5u7vJEpGnKer2m1WplM8/n\nk8PhgOu6XC4XkiTher1irSVJElarFa/Xi9lsluOfiHxPG7mUnuM49Pt9jscjp9OJzWbDbrcjiqJs\n5n6/02g0CMMQ13XpdDr4vo+1Npup1+t5xBf5lW7k8hGGwyH7/R5jDJ7n0Ww2syKP45ggCLLvMAzp\ndrvZM3bv9zu33CJ/oY1cPoIxBmMMg8EAgMViwXw+Z7vdUqlUWC6XOI7DZDJhNBpRq9Vot9t4nsft\ndss5vcjPdCOX0kvTlMfjwXg8xlpLtVrNO5LIv9JpRUrvfD7T6/WYTqcqcSklbeQiIgWnjVxEpOBU\n5CIiBaciFxEpOBW5iEjBqchFRAruC/pHPEVivD4dAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1b000f98>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_awards_past.groupby('year').num_recipients.mean().plot.line()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A complete answer to our question would involve fitting regression models, breaking down by kind of award, etc... here's a quick preview."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAArMAAAFcCAYAAADbHTbRAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzs3XlwXNd59/nvuff2vgAgAO4EF3Ff\nJC6SrMWUrM3aLEuyHdljO47LmXEmk3oTv1XJpOZN6i3XpOrNpDKTepNZMnlnJuMkthPbY1G2bEvU\nvlIrSVEiJW4SKZBYSALovfv23c78cRsNNImNFEmJ4vMpsQTc5fTpiwbww+lzn6O01hohhBBCCCEu\nQcbH3QEhhBBCCCHOlYRZIYQQQghxyZIwK4QQQgghLlkSZoUQQgghxCVLwqwQQgghhLhkSZgVQggh\nhBCXrE98mN25c+fH3YWzsm/fvo+7CzN2KfUVpL8X2qXWXyGEEAIugTB7qbFt++PuwoxdSn0F6e+F\ndqn1VwghhAAJs0IIIYQQ4hImYVYIIYQQQlyyJMwKIYQQQohLloRZIYQQQghxyZIwK4QQQgghLlkS\nZoUQQgghxCVLwqwQQgghhLhkSZgVQgghhBCXLAmzQgghhBDikiVhVgghhBBCXLIkzAohhBBCiEuW\nhFkhhBBCCHHJkjArhBBCCCEuWRJmhRBCCCHEJUvCrBBCCCGEuGRJmBVCCCGEEJcsCbNCCCGEEOKS\nJWFWCCGEEEJcsiTMCiGEEEKIS5aEWSGEEEIIccmSMCuE+MTyAo+T1ZMfdzeEEEJ8glkfdweEEGIi\nRadI3s4T6ODj7ooQQohPsIseZn3f58///M85cuQIpmnyl3/5l/T09Mz4/BcOnuKnbx7j2EiVRbOS\nPHT1Im5a2X0Be/zJtqNvB9sOb+N46TgLMwt5cPmD3LDghgvTvorwYKkMpRNsS5gcT2RY2LW2+Zgz\n6cvpx0T9BbxyfC9Fb5CsNZevrv4SAD/Z/3DLtt+79p4J29k1uJeCXcX1TAx3IcqZh44OgDVMR3Qe\nX139JTaoI2w78BP2uwVs00RbSVQkgUajUMTMGGs617Cx1s3qfTvI1Pp4IdnGtkyaAbOEYXqYBvgB\nBL5Fu7WUpdkVHCkeougNYhIDNE5QB6+Tpa6iI3aQPrNCbY9JlSjajNMWS7J53noeXP4gQMt1GH3s\nOZWDJA2XWCLFy+ksD+syg4ZH1ouT6t9I7FSajFvEau9i8+13ct89t7Rcl9cffY63n3yCcn4QN2Iw\nsGAYf94B7iw6bK5pdiRiPJJJ80EkRTR2BV9d/SXSI3t5pncbtRGXef+UJlmLUE24DMwvY2UNTHsr\ny62l3FJ9goX1Q0S1g6OinEqvYk/7avo/6MUZylGO1xmcV8Kb5YKG9IjFkr406UoGV83GS6ym1N5F\nR/Zd3MG3ccsB5aTLwLwy/iyfiKlwtUu36zPX8TgSMTkZMcmQ4t5FX+Ybd/335+11LYQQ4tNDaa31\nxXzAp556iqeffpq//Mu/5LXXXuMHP/gBf//3fz/p8Tt37mTLli1AGGT/evuBM475kztXfWIC7fj+\nXmg7+nbwt7v/9oztf7Tpj2YUaKfra0v7dglK/ZQJXy5pVLg9Mx/iGe7ouYMne5+csi+n9/dUpcBQ\n7RRm0IZBAgBP1wCwVKKlne+u/wOuNuewZcuWZjuj52ut0YD2EyizhvayqCCBZSriqsAsVUIpxUkV\nEAAuYCoDH41lWJjKpE0lSVdyfKNgEmjNj9p9agpOWiaBUmh8lDZQyoQgQaCqmEE7AL6RB0B7WRI4\naKtEKoCKARrwFChtoJVFV7ybRNQMr2E0DUCtlMcoDfCdvMfnq0MAvJaw+N87MoDCxSQ7lGTpB+0o\nL0styBIxDUxDseXL32gG2tcffY5Xf/4jgsDDDbzGldP0Ly3Sv+gAnyvbPJNO4GkTXxkMq048wyUb\nFOkeibH0cEd4HQHV+Hfkihy1WTV+e9hnk62Zw8joV55HvEUcONFJoAw8xkZP31qZwwQ2H2jH8hPE\n3PbmOV58Aabdhx3NUzftRg/Dc0521ej0fAKlGDENZnk+ScDDJKJNHvnu2xO/UIUQQlzWLvqc2dtv\nv52/+Iu/AKC/v5+urq4Zn/vTN49NuP1nO4+fl75darYd3jbh9kcOP3L+268NA5BXmrzSZ2z/ycGf\nTNuX0/ubs8MQGKhKc1ugygSqfEY7Pz0wdu5oO6Pnj1Jmox2jCoAfaLQqk2Osz6MRbzR8+doHoOyE\nbT2TCng6Fe4rmWASAH7jAcLtutG/M/pqVDHM8PNi4zvLb6Q43Tg3V8+Tb/wbpSvhNXw25TW3/TId\nhnlN2Ie5A+nGcwzb94Lw+ex66onmOW8/+UTjeY8FWYA5fZ0APJxNAmA2+pLRRbQqUTJhdn963Blj\n/589kMYk4IVsQAclxjtcCM/xxwVZDSzrS7P0eBpfKSJ+qqU9q/o+ABEvdcY5GiiYBiUjvGglM7yI\nJjLNQAghxOQ+ljmzlmXxp3/6pzz55JP83d/93bTH79y5E4D9x4bRnDmQvP9YtXnMJ8HF6suBEweY\naGD9QPXAjPsw1XHj24874YipY4afB0EjYDg2dqVKrp4j7sen7Mvp/fUCBwCN22xPm2EQC/zWAJOr\n9zf7O9rO2PkNKgBtoAwPjUZr8FWAD6jGUc1jG8OPWmuCIEAToIFBKzwP3RhRbUxGaJ6rdRhMtYFW\nY+ETQBkefuMRAgWmpuXVqrXG0w62G7ZXrYSh2wgcNJoBy2j2sM8yUc1uauI1q9Fu0GwrCAJ07mTz\n+pbzJwF9RvQznbCfBdOgPfDDa6EhioevwuOTtQgTSdYsFJpByyCK27IvsKMTnpOuRhh9JkbQ+iNG\nBQ7aiDe363HnALhKNY8d/VhN8D0vhBBCjPrYbgD7q7/6K/74j/+Yhx56iF//+tckk8lJjx19K3z1\ngV18OFw9Y/+SrhRbtmy6YH09GxdzmsGq8ip6S71nbF+cWTyjPkzX15b2nQR4daKNqGQYjaFHK0Yy\nlaTD7CAZP/NrOL4vp/fXsqP42kVpq9me0lZr+w3tkflA+FoYbWf0fBrTDNDhOTqwUCiUAlMbGAQY\nSuE0YqkGRt/3VkphGAamb6DQzPUUvtYMRjSWBkepcaEyPB5thJ83+joaanVgYaowIBqN/NV8vMa5\npooQj4TTDJKp8HpVS1HMwGGeFzQ7tsDzORYZDXwKO+GRqFkYjec42m/V1t28vrvbZ1MtnsIIaAm0\nfjRsp63xB4JGgQIHC1N7GGiqCZdU9cxAW014aBRzPR+HSEugNeIOvh0745xy0sXQkK1GCAwPIxhr\nVxthAA4MryWilpNhu5HGHzuuUs2Pw5nNQgghxMQu+jSDRx55hH/4h38AIJFIhL/gTXNG5z509aIJ\nt//WloXnrX+XktEbiU73wPIHzn/7ifCt6nataNfqjO1fXfnVaftyen874uGcU0OPveVs6DSGTp/R\nzkOrxs4dbWf0/FG68ZY2QePtdEOhdJoOxvo8+teb1Xjpm2p0/mrY1q0Vg9sq4b6MDz4G0Hh9jgbJ\nRv/O6GuQJPDDz7ONNGmOhtrGuR2xdtob/0apVHgNb6mM/W35xXI4Eq4I+zA4r9x4jmH7VuOt+M23\nf755zpV3fL7xvEfbCY85sSCcxvClYmP6RaMvJZVF6QwZH07OL487Y+z/J+eV8TG4qWiQI8N4y9vC\nc8xxP0YU8MGCMkcWljG1xm1M/WjOmU1eAYBjVc44ByDjB2QaUygyjfDtSwVBIYQQUzC///3vf/9i\nPmBPTw//9m//xg9/+EMeeeQRvve977Fy5cpJjx8YGGD+/HBUbnFnioUdCfoLNkXbY3Fniv9m67JP\nzM1f0NrfC21RdhELUgsYrAxSdsv0ZHr49rpvz7iawXR9bWlfO/Sk5vHdIMNNdZfBWIJyuoue7vV8\ne923uX/F/dP25fT+rp61gjXZzzJc8agHFdoj8/j22t/lmjk38H6ur7ntW2u/xe9de0+zv6PtFJ0c\nxXoVzzfQfhLLW4JVuwrTsDAtm87YfL659rv81pwrGMm9j+07RM0IyUiadKKDZCRJKpKiPdbOlXM2\ncmvqOlYMlVlcrxDTnRyKzaViWESMKHEzgUEcFaTojKxgfdtNOD64gUOMLqJ0ACbaX8gSez4LjRIB\nLqayCHQcw8wwK9HB1fM28N0rv8tNC29qXodlnSu5NXUdy4ZqGL4NZoSe2Cy6o50c1ZqKgmg0iqNX\n49bnEMch0jGbLV94sKWawYJVS1Bmllz/KXynShC1GFhcJJh3iC8XfG6tKNq9CEciGfrNNuLxFXxz\n7Xe5NjqPPucgpxIVErZF1DOwEx7HFhexsibJ2m3o2OfpVAUifh0Pi5KRIdG2HHvFBmqOS1BzqCVc\njvcUsTo8orEAO+HQZkPc1/hWFie9jmL3AowFZfAHUQ5Uki7Heoowy6NTWVgo5ruaa6o+YFA2LbI6\nzQM9X+PK5Tee67eKEEKIT7GLXs3gbF3Mt+3Ph0upv5dSX0H6e6FdqP7ans2IPYLjOzM73g3IVR28\ncfOmty5de977JYQQ4tNBFk0QQlwQfuCTq+coO2dWp5j4+IB81aXq+Be4Z0IIIT5NJMwKIc67slMm\nZ+eapc+motGUah5F25uwOocQQggxFQmzQojzxvVdhu1hbM+e0fFVx6dQc1umFAghhBBnQ8KsEOIj\n01qTr+cpOsUZja46fkC+6lB3JcQKIYT4aCTMCiE+kpJTIl/P4wfTTykItCZfdanUvWmPFUIIIWZC\nwqwQ4pxU3XDlN9d3pz1WoynbPsWaSyDzYoUQQpxHEmaFEGfF9V1G7BFqXm1Gx1ccj2LNk3mxQggh\nLghZWkcIMSOBDhixR+iv9M8oyNYcn4GCzUjZOecgW3KK/OLIv57TuUIIIS4PMjIrhJjW2ZTast2A\ngu3gfISbuwr1HE8ef5SXBp7CCer8z/zFObclhBDi003CrBBiUo7vMGKPzKjUluMHFGoOtnPuIXbY\nPsWTx37JjsFn8fT0c3GFEEIICbNCiDP4gU++nqfklKY91gsCCjWXav3cV+46WRtke+8jvHbyBYJx\no7+dsW5WJu4+53aFEEJ8+kmYFUK0KDkl8nZ+2ikFgdYUai6Vun/OK3cNVI7z+LFtvHnyZTRjbcxJ\nzGdZ9C7e2b+aJ/IB3H9OzQshhLgMSJgVQgDgBA4D5QHqfn3K4zSaku1RqnnnXGbrWPkIj/du462h\n11tC7PxkD0sjd7P7veU8UfABqYAghBBiahJmhbjM+YFPrp5jxB1hnj9vymMrjkex6uEF5xYyjxQP\n8ljvNvaO7GrZ3pNexiLjHt58t4cDpQAIR4VNA25elTmnxxJCCHF5kDArxGWs6BTJ23kCPXU4rXsB\n+dq5VSjQWnOo8B6P9f6cA/m9LfuWZVcxT9/F6+8uYF85YHQkNmIqPrc6w70bM3RHqmf9mEIIIS4f\nEmaFuAzZns2IPYLjO1Me5wcB+XO8uUtrzXu5PTzWu433i/tb9q1sW0+3fyevvTOXPdWx6QRRS3Hr\nmgz3XpVlVtTGqJ8C59xvLBNCCPHpJ2FWiMuIG7jk7TwVtzLlcYFuzIu1vbO+uSvQAe8M7+Sx3ofp\nLX/Qsm9t+yY63M/zyp4udtZ8RqcTxCzF7euy3H1VG+1WHdM5BbZ3Vo8rhBDi8iRhVojLQKADCvUC\nRac4bTgtOx7FqosfnH2I3T30Go/1Pkx/pbdl35WzriVt38GO3W2U7LE5sfGI4vPrs9y1oY1sxMGs\nnwJ76tFiIYQQYjwJs0J8igU6oOSUKNaL05bacnzNiZJ91vNi/cDjjVMvs733EU7U+pvbFYqNndeT\nqN7Oy2+mKdfH5sQmowZ3bshy54YsacvDqA+jatMvzCCEEEKcTsKsEJ9SZadMrp7DD6YOsaPzYvO2\nT9dZBFk3cHntxPNsP/YLhu2Tze2GMtnc+VkipVt56fUEVWcsxKZjBndf2cYd67MkLA+zPoKq1s7p\n+QkhhBAgYVaIT52ZLkF7rvViHd/h5cGnefLYo+Sd4eZ2S0W4uvtzkL+ZF1+NYLua0RCbTYQh9ra1\nWRKWH4bYulQpEEII8dFJmBXiU8ILPPL1PGWnPO2xVcenUHPx/JmPxNq+zYv9T/L08UcpuoXm9qgR\n49ruW6kPb+X5l00cT0NjIYT2pMm9V7Vxy5oMMTPArOdQ9alvPhNCCCHOhoRZIS5xZ3Nz17nUi616\nFZ7ve5xn+n5DxRsLynEzwbXdt1M9+VmeehFcfyzEzkqZfGFjOzevThM1A8x6HmVXmvuFEEKI80XC\nrBCXKK01Rac4o5u7XD+gWHOpnkXN1rJb5Jnjv+G5/sex/bF5rUkrxWe67qIweB3bn/fxxlU96Epb\n3Lepja2rMkSMAMMpYtRKSIgVQghxoUiYFeISVHEr5OwcXjB1LdZAa/LVMMTOtF5soZ7jqb5f8WL/\nkzhBvbk9HclyXdfdDPVfza+f91tuLJudtfjipnZuXJHGGg2xThEJsUIIIS40CbNCXEJqXo2cnZt2\n5a5Aa8qNRQ9menNXyc/zk8P/yMsDz+Bpt7m9LdrBZ7ruZfDYZn7xrEMwbhR4XnuE+ze1c93yFKah\nwxBbLTF649dHZSqTlJk4L20JIYT4dJIwK8QlYKYVCiBc9KBU9fCCmQXKU7VBnjj2C1458TwBY0G1\nM9bNtZ1foPfDDTz8toPWYwF6QUeEBza3c+2yFMZoiHXKMM10h5mKG1FSVoq4EUMpdV7aFEII8ekk\nYVaITzDXd8nXp19+FsB2fXLVmVcoGKgeZ3vvI7x58mWCcSOpsxPzuKbjC3xwZB0/e8tGMxZiezqj\nPLC5nS1LkxgKDKeE4ZTOS4g1UCTNBCkrRcQIfzQpFMmY/JgSQggxOfktIcQn0GiZrYpbmVGFgkLN\noT7DCgXHy0d5vHcbu4deQ4+b09ppzeH6OV/i4OFV/NsuGxgbBV7aFeWBLR1sWpxAKVBuBbNeOC8h\nNqIsUlaSpJnAUAYAUcskFTNJRS0UMjIrhBBichJmhfgECXRAsV6k6BQJ9NTh1AsCCtWZVyg4WjzM\nY70P887Izpbti9JL2dx2H6+9NZt/fcdifIhdPifGA5vbuXJRAqVUGGKdAkxz49lMxIwoGStF3Iw3\ntiiSUZN0zCJmmWMH2sWP/FhCCCE+vSTMCvEJMdPlZwOtKdZcyvWZVSg4lH+Xx3q3sT//dsv2ZdmV\nbMh8gT0HevjhG61zcVfNi/PA5nbWLYiHIdazMeoF1LjqBucqbsTIWGliZhQAUxmkYhbpuIU5fn5s\n+QS89SPYtw3+bOAjP64QQohPJwmzQnzMbM8mZ+eo+9MHxbLjUay6+MHUIVZrzf78Ozz24c85XNzf\nsm9V+3rWJO/hzffm8cP+OuNHYtfOj/PAlnbWzG9UEAhczFoeNa7O7LkwUCTMBOlx82GjVjgKm4ya\nrVMJRo7Arn+Cg4+dlxFgIYQQn24SZoX4mLiBS96e6c1d4cpdrjf11AOtNe+M7OLx3oc5Wjrcsm9d\nxyZWJu7htX1d/MtgHRgLzxsWJrh6Tolbr57XaMjHqBcx3DLnWitWoYgZUZJWgoQRb1QlUKSiFum4\nSdQ0W08YeBt2/QCOPN+6PTP/nB5fCCHE5UHCrBAX2dksPzvTebGBDnhr6HUe732Y45UPW/Zd1XkN\nV0Tv4eW97bx6sjXEbuxJ8MCWDq6YHePw4bA+rOGUMOrnXis2oiySZoKklcBUYWA1lUE6bpGKnTaV\nQGv48KVwJLZ/d2tDXSth8+/A8tvPqR9CCCEuDxJmhbiIzve8WF/7vHlyB9uPbWOw2tfcrlBs6b6e\nHvMuXtib5qVTDuND7NVLkty/uZ0l3bHGFo3lVbDKA+dcoSBhxkmZSeJmrLktFjFJRy2S0dN+1Pgu\nHHoiDLEj77fuW3B1GGJ7rifQmkqxSGb2OXVJCCHEZUDCrBAXwUznxfpBQMn2pg2xXuDx2okXeOLY\nI5yyTzS3G8rk2tlbmcfnee6dOM8OO9CoE6uAa5aleGBzO4s6o40zNIZbxqgXibgl0LPO6nmZyiBp\nJklbyeYorEKRjIY3dEVNo/UEtwbvbgtv7CoNjtuh4IpbYfO3YM768Dm6LpVCEd8/PwsxCCGE+HSS\nMCvEBeQFHjk7N+282EBrSo3lZ6cKsY7vsGPwGZ48/kty9eHmdktZfGbO55gd3MHTeyyezLk0Q6yC\n669I8cXN7SzoiDbPUW4V08mf001WMSNKykqOmwsLlmGQjoVTCYzTV+2q5eDtn8DbP4V6YWy7EYHV\n98Km34aOJc3NdrVKrTx9jV0hhBBCwqwQF0CgA0peib5y37SBrFT3KNWmrlBg+zYvDTzJU8d/RdHJ\nN7dHjCg3zr2NdvdWntptMJB3ARcAQ8GNK9J8cXM7c9sizXPOtcyWqQwSRpyUlSRijLUXj1ikYyaJ\nyAQ/Tor9sPuH8N4j4I17vGgK1n8FrvqvINXd3Ky1plosUbenX7ZXCCGEAAmzQpx3o/NiK/7UI4t1\nLyBXnbpCQc2r8nz/dp4+/msqXqm5PWbG2Tr3TlL1m3nijYCTRQ8I3443Ddi6Ms19m9qZnR0LnQQu\nZj2P8s6uzFbciJ1WkaAxvSBmkYqZRAzjzJOGDoXzYQ890ToHN9kJV30d1n8ZYpmWU3zfp1Io4rnu\nWfVPCCHE5U3CrBDnyUznxbp+QLE2dYWCslvi2b7HeK7vMWp+tbk9YaW4ad5dxCpb2f6qx1DZae6z\nDLh5dYYvbGynKzPuW/scymxFlEXSSpI04825sKMrdCWjk4zCag39u8IQ++HLrfvaFsGmb4VTCqzY\nGae69TqVYokgOLcKCkIIIS5fEmaF+Ijqfp1CvUDVrU55nB8EFGoeVWfym7sKTp6nj/+KF/ufoD5u\nGkA6kuFz8+6F0g1sf7nOSGXsbfiIqbh1TYZ7NrYxKzX+W1o3ymwVmWmZrbgRI20lxy0x25gLGw8r\nEpinz4UF0AF88FwYYk/sbd03e21YmWDZLWCYZ54LVMtl7MrU104IIYSYjIRZIc5R3a+Tt/PUpnnb\nfiZltnL1YZ489igvDz6FG4y9zd4W7eCW+V+gnruWx160yVfHQl/UUty2NsM9V7XRnmz9VlZuGbNe\nmFGZLYUiaSaYZbbTFRurZhC1TLJxa+JRWADfgQO/gV3/DPnW2rYsug62/A4suCa8A20Cge9TLhbx\nHJlWIIQQ4txJmBXiLLm+S66em3YkdjTElmyPYJIQO1Q7wRPHfsErJ57DHxc8Z8W6uGX+fVSGtvCL\n56oUa2PVEOIRxR3rstx1ZRvZROtop3JrjQoF0wfEmBElaSaIm3FMZTCkToXBNhbe0HXGCl2jnDLs\nfRj2/Bgqp8Y9uAHL7wjLa3WvnvKxHbtOtSTTCoQQQnx0EmaFmCE/8MnX85Sc0pTHaTTlus9wzae9\nNnGoHKz2sb33Ed44+RLBuCkA3fG53Dr/fnInruL/e6ZM2S439yWjBp9fn+XODVnS8dNCrF/HsPPT\nViiwlEnKTLaszgXhVIJM1GB+e+LMslqjKkPw9r/BOz8LA+0oMwZrvwgbvwltC6d8fK01tXIZu3p2\nN6EJIYQQk5EwK8QMFJ0iBbvQMno6kYrjUax5eH7ARIOxx8sfsv3YNnadehU97masecmF3DLvfgb7\n1/LjJytUnWJzXypmcNeGLHesz5KKnTZaGniNCgWTjxIrFAkzRvK01bkgnEqQiYXzYYcjauIgm++F\n3f8C+38VTi0YFcvCht+CK78GyekXWwh8n7JUKxBCCHGeSZgVYgpVt0qunsP1pw5gNccnX3Px/Inf\nNj9aOszjvdt4e/jNlu2L0ku4ee4DHD+2gn9+okxt3KhvJm5wz1Vt3LY2SyJ6evmrIKxQ4JSYrEKB\nqQxSZpLUuNW5QopU1CIdn2IqAcCJd2HXD+D9Z1ofIz0HNn4D1j4I0eTk548j1QqEEEJcKBJmhZhA\n3a+Ts3PY3tTF+203oGA7OO7EIe39wn4e632Yd3N7WrYvySzn5rkP8sHRpfy/j5ew3bEQ25YwuXdj\nG7esyRCPnB5ix5afnezmroiKkLaSJM1Esy4sQMQ0SMUsUtEJVuhqNq/h2GthZYLjr7fum7UsLK+1\n8i4wIxOfPwGpViCEEOJCkjArxDiO75Czc9NWKKh7AUXbwXbODLFaaw7k9/Lw0I843n+kZd+KtrVs\nnX0/+z9YyH/5TRnHG5tO0JEcC7FR68yFCJRbwXQKEy4/G04liJMyk8TMaMueZNQkHbOIWVOMwgYe\n2ROvwd7/BKcOtO6be1VYmWDJ1vAmrxkKgoBKoYjrONMfLIQQQpwjCbNCAG7gkrfzVNzKlMfZbkCp\nPnmI3Tuym8d7H+ZI6VDLvrUdG7mh+4vsPTyX/+ONEq4/NhLbmTb5wsZ2blqVnjjEerWwzFZwZiiM\nqAgpK0HCTGCOC5ozGoUF8Gx471HY/S/0FPta9y3ZGtaInb9p8vMn4ToOlWKRYJJpF0IIIcT5ImFW\nXNb8wKfgFCg5pSmXnq06PqW6O+F0gkAH7Bl6g8d6H+Z45WjLvis7r+a6zvvYfbCL//XVEl4wNhLb\nnbH44qZ2PrsyjWWeGTinqlAQN6KkrfRpN3TNcBQWwC7C3p/Bnn+FWm5su2HCyrvD6QSdV0zdxiRq\nlQq18tR/FJwVKzr9MUIIIS5bEmbFZUlrHVYoqBcI9MSjhxpN1fGb1QlO52ufXade4fHebQxUjze3\nKxSbuq9job2F40Or+c87yvjB2Ejs3LYwxF6/fOIQi/Yw7YkrFMSNGBkr3TKVwDIM0jGLZGySFbrG\nK5+At34E+7bB+Dq5kQRDc7bSddsfQWbu1G1MIggCKsUibv08TCuwIhBJQjQFxszn5wohhLj8SJgV\nlxWtNWW3TL6exw8mvoFqtE5s2Z4kxAYer598kcd7H+GUPdjcbmBw7ZytbGq7l5ffTfLjwyW0HqvH\nOr89wv2b27nuihSGMVHo1BhOEaNeYvzys6OltTJWmsi4YBe1wlHYVHQG38YjR8Kbug4+1jrnNt4O\nV34VNjzE4AfH6TrHIOu5LuVC4aNNKzAMiKbDAGvKaKwQQoiZkTArLhtlp0zBKUxaZivQmspoiJ2g\nhJQbOLwy+BxPHPsFI/Wh5nYmrkKBAAAgAElEQVRTmVw/9xauzNzN83uj/PVzFTRlIAysi2ZFuH9z\nB9csS046fzVcuSvXEjRNZZI+Y4GDs5hKADDwdlhe68jzrdsz82HTb8Oa+yCSaGw8fvrZM2JXq9TK\nlSmnaUxKqfDxoymwEpMufSuEEEJMRsKs+FTTWlNySxTrRbwJqgBAGGLLtke57uEHZwayum/z0sDT\nPHX8UQrO2PzSiBHhxrm3syZ9J8++Y/BXH1SBsaA8L6N56Po5bF4yeYglcDHtHMofKwEWUREykRRJ\nM9HcZihFKhYhHTOxjGkqCugAjr4Eu/8Z+ne37utaGd7Utfx2MD7at78OAiqlEo499apjE4rEwgAb\nSZ1VhQQhhBDidBJmxadWzasxYo9MORJbtj1KtkcwwahizavyfP92nun7NeVxdWBjRoyb5t/J8sQd\nPLVH8+iHrXNbr5gd44HN7aScPlYsTU3SuwDDLmC4ZUYXJIgbMdJWquWmrqhlkoqZpKIWimlGLX0X\nDm2HXf8MI++37ltwdRhie64/L6OfnutRKRbwvalXRGthmmPTCGQerBBCiPNEwqz41PECj5ydm7TM\nlkZTtn1KtjvhSGzFLfNs32M82/8YNW+sjYSZ5HML7mZx5Fa27/F4+Fhr+yvmxHhwSzvrF4aLFRw+\nPHH/DLfUXPTAQJE0k6SsFJHGSKlCkYxZpGMWUXMGo5ZuDd7dFt7YVRoct0PBslvCGrFz1k/fzgzV\nazbV0tTVH8a6oMIbuWJpsOLnrQ9CCCHEKAmz4lPDCzzy9bBW7ERBq3ljV23iObElp8DTfb/m+f7t\n1Me97Z+yMty68B7mq5t5bI/DT/tKLeetmR/ngc3trJkfb1lx63TKszHreQiccD5sJEvKTGA03mYf\nrUqQik1TG3ZULQdv/wTe/inUC2PbjQisvjecE9uxZPp2ZkgHAdVSmbo99apoAETijWkESZlGIIQQ\n4oK6qGHWdV3+w3/4D/T19eE4Dr//+7/PbbfdNu152//vvfS+n6dcdXG1xmuLcNXWBdycHKDw8M9x\njh0numghfTev5mfthyh/oFk6sJF0oQvX9XF9D60NfCIEbSmu2rqADQvbeG/HAMXjJ8gGH7Im+zI9\niwPY9E1YHvbphYOn+Ombxzg2UmXRrCTfMAfoee3p5uO1fenLpD97Y0tf88ddtu/eS3//KU5Zfbzb\n/Qp97QeJmTHWdK7hweUPkts3lz0v9mEVXCJKETUUTqCbz23+in3sM37McbfEwkiGB1d9lYWF1bz3\nwof0ly1OJfPsn/cuRzMeZuVaVrVdze8tOMqGk49C7ii/sdL8FyIM+TmWuRXuLXssN3uYtWwzS70j\nkDsKHUvIpD8DbGnp/46+HWw7vI39I/uxPbul3wsLq3hvxwBDx0p4ToAZMejuyaBX5nha/5LjQ++y\nsFbi7pECG4tVqkGEgjULNOyLVtneFqMvkcbRi3FyWwiqK/ms2sNXIy+wIjKMnV7ET/2bebK+jkWz\nkqTbP+D1ocfJe0cwTA8Li+S+pZiVa7nf0jxkPo99QvPuyGaOe92cTBX4YOE+osstrvkwyqynd5M8\nWaQ6O4u65y66tz6IFwRUX/0lw6+/QqVoE0RN9s1dwp7FPgVew1djb5sn3Tibjm0g1jeP59Pz6YsX\nW67VAuck19jvsM6IYjy1nrdzeSrl3Tj6JHaqhteRZNbbLlm7k6HKjVT0QpxUlN54hffdKq4XMC/x\nInZ6D/3ROo5pYhgpTL+HbGU9a1PruHv9PNzK42z78HH2+2Vsw2S2NvhKocDd+SHi40J7PbDYVV7G\nL9KL2X8sxspd79OZO4BZO4DyhkH7KGUSsTpJJpYyuyPOUIfHO7bHnNwR4pUir8Z2gOoGfYpa7ShV\nr4Rn+PgxgAiRqonpWSgdAbMDHVsC0XmAiZGOsmJzF8tmOxx6fTuD/ScYIsGI1c4sL0+q/CGOW8M3\nfZyExkusJRO9lS7DJJKJcNDyGSoeZWHhEF3UmDt/Dis+cyMLVq87i58yQgghLjdKn9MtyOfm5z//\nOfv37+fP/uzPyOVyPPjggzz33HNTnrNz5052/axGtTBWu7JugenbXH3icXroB6DsljlZPclLN32G\nWOVzGK5J1E5jaAOlDQIVoJXGtjQGUTqSUdpidSgONNu9bv7T9GQ/gNv+Iy8EV/LX28eW9VzRu4+7\nX93GnLY4mdjY3wDd//7fNwNt77vDPPPjvQSRgJPVkwTaxw08di1+nP6OQ8xOzqbr1ApW7P88UT9O\nzA3vd1dao1FoBZ5VwYkMc2Thbyh0HASgI7eCa499AZTBSRWADkcZdy14kQ86Brm6vI4/LjzN3LY4\nr1ke/5tVQxGGMp9wVOx3cx531oYJMnNJpjsAqFSrpO77n5rhfUffDv52999SdsJrOWp2cjaLCqu5\ntvcLRP04lfzYDT9GOmDYP8XRZc+Ri75C4PuowOW/y5W5oWajtWZHIs7fzWonwESjGaKTok6wengl\n36+/QGRcrVVDKf4l+Ts8ZVkU449iWnW0WUBrjQbMoJ2s1vxhLs/S3BIOlu6lbCiGTQNQoBT5xJPc\n9NJuLMPEUAajr/D8t75CW8zi2FPPEWhNLuqyq6fC/nlVgnGDh0nbYv2ROcRPrWJXZiMD8dktr8nF\n1eNcU3iT2W4JpWIYykDpOr4OmnNB7Uge36wxZ1aSWO1LRAyFCQzrNirE2RsfId7+JENdb1A1YGTc\nNYgFKXyyLK59jh7/Q46mX6FqQJtb57cLRe6oVFv+Ci17Md7ML2NPcQn1IILSCi+zCVBEi3tAOxCM\nmxJhpDBUlFRqA6ZyKNT3UFdRIq6BqTy0VwIjShDU0fhogsa0XgMjfMWG83dVAlQUldiEsuZhmxr8\nU6SNtzEiJkPlOqbnEHUr+KbG9MduwPMtA0tn0ckrcaIrADDdPnx7J37jWnSlY6SiJlvufYANt34e\nIYQQYiIXdWT2rrvu4s4772x+bpozKC0EVMutN/BEfEjYZY7FVtFTD8Ns3s4DsODoKoa6wXLC+XlK\nh78YDW3gK5+or1E6bLPNH2lpd//wxjDMvvUjfup0tOy75r2XAchVnJYwW3j44WaYfW9HGIzz9bAv\nXqOO6fITV9PfcYh8Pc/a3lUEqkLEG+1fmLQUYaC1AoUDzDl1bTPMzjl1LflxdUd144ahFUNr+aBj\nkHrkhWbftnWEod9sHD8aZp9N+9xZA10ZgfS45/bWj5phdtvhbS39H5Wv57n62Cry9TxZu7NlX63s\nQALmHFtJ7opXmqWlHk0n+GwtDFCPZhKYBASNvmR1kSIJ4tlX4BR44+atRk3FbfUn2ZZoByBQ5Zbb\nngJVJhN4PJ7yuav/GjygeNrd/UuPXwXsxtcBirF95vYnGJ7bQS7h8vrCEgfm1NDjQ2zNYsXxDKmT\nV7M7vZGT3a3PdWnlKNfkdzPHOYlWCjBQZgI0BH4NBehGmI16KWpmjdJQJ+kUqAACNGnKlHSMHjtN\nX/ZtAIrNPmhA4akqSmc5GdtD2j3M6lqNe8pFrj/t7f2jlsXekxs4kJuPr8e+lwwMouNXItOnTQvQ\nNqgoNftDTFXHChR+YypA4FXD5+HXaIbWxldANfrYvKa6DioK9ffBmkdUg187hK09vFj4+rMa0zUs\nz0eP+0JangkmqPphfGt5eM1qhzA0+I2nUqy5pKImh17fIWFWCCHEpC5qmE2lwju7y+Uyf/iHf8j3\nvve9mZ14WiF2Q4Ppu9hWG5VceCe57TV+YQftBEGAEYzV5Ww9V4UB0tcEbm30RnIAcnYblWoVavvY\nXx9qhkaA9vwJAq2xnSA8pqFy4ACDO3cCMPBhWCDfdsO+6MbKUhl7FkEQYAc2yVqWABdjwgFxjdIm\nGkjUw3MA4vVOHBXub/wHQLpxTMGsEgQmthvQbwSNSKRHmwRg0FKAxgic1v4f38f+Rv8PnDiA1rrZ\n/1F2YBMtpbGxSTit5a10oAiCgHitvdHf8AH7LAOlNQros8wwrDf6EsUL569GaqBNxl+KQAXMDvoJ\nTC9sS3njnrNGKxfwGIyA7XUD4Da/xOFjmLqz8bFu+RoW63l+Na/Godl2S7DqqFisOZylbK9jX/Ja\ncrO6W57j8soHXJ3fTbcz+sdPAJjh/5vNn/4atcIY6HiQHPsDxMJDa0gGFoVIHTR4o1/bxnPwVRj+\nrrUP87ulXla6rStq7Y1G+X/asjybSvL1/Ys4g1YQlMY1eVrFgcbngV8C5QIGavTlov3w2jVeRUxZ\nQyF8zjoooQAjgMAvotHUvXCfCnw0YNDyrdZ4NwLwq835zcovho/d+OOmHgTUajb28d5JeyCEEEJc\n9BvABgYG+IM/+AO+/vWvc999983sJNMAf+xXYaDANyOk7VOkkkkA4n4cJ3DAyGMY8wgMHyOwoPlL\nefRcjUJhGAojkgBv7C3z9lgubK/zClY7XXw4PBb68u1z6CqcJGoZzccEiC5ezIIt4bzTod17GTg6\nTDwSx/EdlDbQaErxYQzDIGpGqSaKZGpdBEphaDjtVzxa+SigGhvBaIw42rFh2uwuUApHjY3mlhrH\ntLlJDMMlZhnMDwL6jHCUt9EkAHPd8DoERrTZ/0q1SmrhOrY0+r+qvIreUi/xIOx/8zmaUZxMmTa7\nm4hv4XvjVqcyNIZhUIvlMQyDwA9D8wIvQCuF1rDA8+mNRFAqfLaODstMpd0EKLelUpRhGAya8zH8\ndrQ5hNIWGF4z/Cht4qGY73nErFPY3mwienygVfhqGFAoFf47Nkvz9JUB7ywGGAvqnSWLzR9mcEvr\neTn1GUayXWMd0ZoVlSNcU3iLTicPjA+Extj/1enbQoFqhP6ohVJjkdAhDLkV06PNjVGI1rE0eCq8\nbhEN95bLfLN4kiVe6x8Vr8Tj/GNbltfiMbQRjprWYxax+mn1c5UGIxt+7BdBma2BtrEAg2FmMFWd\nICiiVTh6HI66hq/B5h8QzSt7uvA5KyMTPmcDtJlF6RIxy8AJArRhYjQC7Xh69ItuJps3zWkzi9ZF\nVGN1tKhpkEjEyXR2IYQQQkzmot5mPDQ0xHe+8x3+5E/+hK985SszPi+Zbq1J6ZpQiadZVB+b09oe\nD9+W7lsSbvOijdHRxpBToMIA5pgK12q0mZzV0u7qzrfCDzZ+g4eubh3xemNNOJWgI9W6zGbbl77U\n/HjNDfPCvsTCvlhGGBoOz3mzuf1kzwEMncJt/Bkx+kt9NHx6YcLlRPfrzXZPdL9OOwbto+Ghceyh\nrncBiLk3Nfv2YBBOX/AxmlMMAG4ph31RqdbnzMZvND98cPmDLf0f1R5r58SiA7TH2omf9rVIpMPr\ncWJROCVitBD/feUaASY+BveVao2+hP0uqjBo2cXrG9dJNf8BPB27g4x7fXhV9NgfDgBKJymrNNfV\nDNrTb6AUZBoj2KPX8IMFewDona34v27z+c/3jQbZ0JxihHvfmcX6vTfyvP6vebT9XkYiXY32A5bb\nh/j6id9w1/AOujwbZYyWlGpEMhXWgQ2MGAEBSoFpJtDGWH1Y1wqnWMydNQyAaShMQ1Ex0piG4li8\nTKR4JQDZAFJBwG8XSvyyr58/HxlpBtkAxUvJJP9u3jz+cO5sdiXioBRW42t7sKf1prTwnAAntQQn\ntbTR39NKYjU+T8QXk4gvwTM1nhmADlCj5bMaz1krHf4LZ84yOiFm/HUgdgUAjgI/sYJ42iKbDF8n\nnhm24522WplnheFax5Y3r42fWIE77idSOqKo5HP0HXj3jOcohBBCjDK///3vf/9iPdjf/M3fsG/f\nPg4fPsy2bdvYtm0b99xzD5Y1+QDxwMAAUSdNtebiBAGOAX57hHV3LuP6mxbjDQzgl8uklyyn/tBd\n7Fld4ZTZT3vQTYIkvuHhGHU8I8AxDWhLseGOHm7YupByUVN3FO2xETZ2v0jPEuCGfwfLb2NxZ4qF\nHQn6CzZF2yOzbAlbPrOWeXYBv1wm2tPDrO98p6WaQVt3kuHSIBmzg6CusJMlDvW8Sq77OO2xdtZ2\nruWb132Z9rYlDJ6oELgaw1JYUQPfBMcArz3FvHUDlNKvUg4ceiJtfHXzvWzsWYYzOELgmNSSeQ72\nvMXgLEjatzFn1p1ctX4Di8wRljlVspHZ7DJnc0qbzPPgS0VYai3HX3M/s7NJqBdh1jKOzr+Pzs88\n1Oz/ouwiFqQWMGKPYPs2ETPS7PdXr/kSG69YR63o4DkBhqWIpaIsWNLBnOsj9HcdpezbLMbkayWP\nq2qQJ8tAdDEp3c4cVzMYT5BPdGJElhEpfY6ifyO56FxWxgssTvtEuq/g0dSXeVltYHnnbK7o6qbo\n5HCDOqYRIabiZMwerPpn6Y6tZ217H7OMD/HddnSQoposcGjJTgZX27y40uWZVXWGsmOvpeVta/ja\n8u8yq38djxdvYE9iAzUjDMsKzfLsCDfVH2dF9R2iSZ/27GpieimBXwftYaBRBjjJNrz4EnxLE4m5\nzJ47j0z3DWhzDk5wCsccxk3XSHTFuanTYVHiBI45Hye2gHhXlly3zVDUphosYa1X4aHa+/wPwye5\nybZJNUbdHSx2ZW5h5Mbv4y5cxPuVPuzAJWpYJCMp0rEMSTNBdbaNH8TJVuJYfoAfjXB0icf++QWS\nQQ/xYC4qqAEeyjBRRoxotIt0aiVzOxPUFkQ4nJ5Lxq8Q1TbJ1ByiqeVE43EwKniqjmf5OGmNlzDR\nmOFouYqhrQ78xAr82Bw8w4BsktVbV7H5muU4pTzasanEOzjZtpRYLEVMl/Fw8SI+9ZRHtWMpkfQ1\nzI5H6OhKMNA9i4FYglm1U6SdAl65gOc4BJ7HDb/19fP5o0gIIcSnyEWtZnAudu7c2Xwb/FJwKfX3\nk9bXQAeUnHDpWf/0eZ7Annf2smjZSqqOf0YdWa017+be4rHeh/mgeLBl3+r2K/n8wgcZPLGIX+7O\nc6o09ra8acDNqzJ8YVMb3ZnpVqUKSHgumcAnOW4FK4UiFbNIxy0i425G27tvL+vXTbJYQf5YuNzs\n/l/BuCkdxLKw4bfgyq+d8c7BheD5PpWqj2/G2XfgEOsm6+8FVhoZ4uArL3HotZeplVpHm1PtHfy3\n//AvH0u/hBBCfPLJogniY6e1pugUJw2xXhBQrHmM1HxmnTY/NNABbw/v5PHeh+ktf9Cy78rOq7l9\nwQMc7ZvD//lYnuHyUHNfxFR8bnWGeze20Zme+tvAAFKBT8b3iSoDGoHVVAaZhEUqOsNFDgBOvge7\nfgDvPwN63E1j6TnhlI+1D0I0Oenp54VSEE1je4qa46Jj059yIQS+z/H39rJ/xwv07d/H+DsBlVIs\nXLOeVTfczII1UmdWCCHE5CTMio/NdCOxoyF2opHYQAfsOvUKj/duo796rLldodjUfR23zb+fg72z\n+LtfFchVhpv7o5bitrUZ7rmyjfbU1C9/E8gGmrTvYSoYvVNtNMSmY9aU9/o3aQ3HXoVd/wTH32jd\nN2tZuFLXyrvBnG5k+COKxCGWIbCSVEslnFrtwj7eJCr5HAdffYmDr71MNZ9r2ZfItrHyus+y8rrP\nku648CPTQgghLn0SZsVF5wUeJadEySkR6DOXlfWDgKLtUamfGWL9wOP1ky+x/dgjnKyNLXhhYHD1\n7Bu5Zf797DuS5X/5RYFCbayOcMxS3LE+y11XttGWmLq+cVSZZAJNynMwlG7exm8ZYyOxMwqxgQ+H\nnghHYk8daN039yrY8m1Y8tkLu9yrYYZTF2IZsKLUqxVqQ0PNsm8Xiw4C+g68y4EdL3Ds3XfQpz3+\ngtVrWXX9TSxadyXGDOtPCyGEECBhVlxEju9QdIpU3MoZIRXCEFuyPcoThFg3cNlTeZ0fvPG3jNRP\nNbebyuS6OZ/jprn38db7Cf5qW4GSPRZiE1HFHeuy3LWhjcw0ITZhxskEPgnXRhE0Q2zENMjGIySj\nM/x28Wx475esfO0fwT7Vum/JVtj8OzB/08zaOhdKQTQVBthoWNvZcxyqQyfxHHeak8+vWqnIodde\n5sArL1IeGW7ZF09nWHHtDay8fivZru5JWhBCCCGmJmFWXHA1r0ahXhhb2OI0U43EOn6dlwaf5slj\nv6TgjL0lHTEi3Dj3Nm6cfS9vHIrwn3YUKdfH2k9GDe7ckOXODVlSsclDrKEUSStNJoCoU0TpsTm5\nlmGQTURIzTTE2kXY+zPY869Qy9Es4maYsOIu2Pwt6Fw+s7bOhRULA2wsEz4m4HsetVLxok4p0EHA\nwOEDHNjxIh++s/uMUdi5y1ex6oatLN6wCXOKSiZCCCHETMhvEnFBaK0pu2VKTqllAYbx6l5A2Xap\nOmfOl7W9Gi8MPMFTx39F2R27uz1mxPjs/Du4oesedhww+B9fLFJ1Ks396bjB3Ve2cce6LIno5G/f\nm4ZJOpIhpQ0idh4VjC2eEYuYZGIWicgMvz3KJ8JlgfdtA3dsoQ3fjGGu/zJs/Dpk5s2srbNlWhDN\nNKcRjGeXy9TKxeaKWheaXS5z6I0dHHzlRYqnTrbsiyVTLL/2elZdv5W22XMvSn+EEEJcHiTMivNq\ndD5s2SlPeFOXRlNxfMq2h+udOW+z6pZ5tv8xnu17jKo3FlLjZoKrEp/h88u/xgvvaf7jc0Vsdyyk\nZRMG91zZxm3rssQjk4dYy4iQiWRJKBPLHsHwxkYsE1GLbNwiOtM5myNHwpu6Dj4GwbgqC/F2uOpr\nHIxsYM3G62bW1tlQamwENpI4Y7fnulQLuYsypUBrzYkPDnNgxwsc3bOLwG+tNjF76RWsvuEmFl+1\nBStygW9wE0IIcVmSMCvOi+nmwwZaU7I9KnUPf4KRwpJT5Jm+X/N8/3Zsfyxgpqw0ty64h40dt7Pt\n5SH+fHcBxxs7vz1pcu9VbdyyJkNsihAbNWOkIxmSGBh2DsMbG0GNR8IQG7NmGGIH3g5v6jryfOv2\nzPywMsGa+yCSwN+3d2btzYRhQCQVzoGNpmCCUmAXc0pBvVrh/TdfY/+OFyicGGjZF4nHWX71day6\n4SY65i244H0RQghxeZMwKz6Sqlul6BQnnQ8baE2x5lKp+wQThNx8fYSnjv+KFweexA3GpiNkI23c\ntvA+1rd9jqffcfizJ3O4vsHokrKzUiZf2NjOzavTRK3JQ2zcSpCOZIihMGsj5x5itYYPXwpHYvt3\nt+7rXBHe1LXijuZyvufF+Bu5IskJAyyE9Vrtcol6tcKFXAJFa81Q71H273ieI7vfxHdbR367epaw\n6oabWLrxaiKxj6l4rRBCiMuOhFlx1rTWVNwKBaeA60/8VvboSGzZ9iYMscP2KZ449gteGXwWb9xN\nV+3RTu5YdB+r0zez/e0qP94/xPjZCF0Zi/s2trF1VYaIOXG4U0qRtFKkIhkiGkw7h+GWmvuT0bBG\n7IxCrO82ymv9E4y837pvwRbY/G3ouX7SoHlOzAjE28KSWsbkQT0IfOxymXqlfEFDrGPX+GDn6xzY\n8QIj/cdb9lmxGFds/gyrbthK58KeC9cJIYQQYhISZsWM+YFP2S1TdIr4wZnzYSEMseW6R6k2cYg9\nWRtke+//z957R1lV3vv/r2eX06fSy1CGMghKE+kiKEZFMdiiEoImJq7cq2TZQ27kKkaIGrPMjSXf\nZbskJpofRFAvKkaRiAKCICIgDDiUYajTy2m7Pb8/zrQDU84gAxj3ay04c/az97OffebMzPt89ufz\n/rzB+mOrcRrl1HbwdeaynBnk+sfz7pYwf951FLuRiO2crjG2R5xrJvRBa0bEAgT0IGl6BpqUqLEK\nhFGNQAKCoEcjzZ/ccrZZzCh8tSxR2FV9pNGAgNwpcP4t0OUUtn6ti8L6MprMg01amhEnHg5jxqLt\nKmJLDhSSv/Yj9nz+GZYRTxrL7pFD3rgLyT1/NB5fy+t1cXFxcXFpT1wx69IqcTtOtVHdbD4sJERs\nOG5THTObzIk9HC5ixYFlbDy2BknDeBd/dy7vdQ053tEs31zNC7uP0Pjwbpk63x+Rydj+Qfbu+bpJ\nISuEwK8FCOnp6FKiRssQZg0CiSIEQa+HNJ+Gmkr0NFoOX/5/8OViiFc2bFd0GHRlIic2q0/r86RK\nnRuBLyPxdTNIKTGiUeLhGiyz/Qq7zHicvZs/I3/dx5QU7kteqq6TO+IC8sZPomOvPohTGY12cXFx\ncXE5SVwx69IkdakEVUZVs9Za0NDooLmc2AM1e1lRuIzNJeuTtncP9uKKXtfSWR3B8s1VPFtwOCnK\n2CNLZ8bITEbnBlGUpkVTnUdsSE9DlU4iJ9asAeq6dempd+uqOgSb/wo73gCrURRSD8J518PQmyF0\nioz9hajtyhVqNQorHYdYJEw8HMaxm46GnwrKDh1k39p/sfmvL2DGkvOfM7t2J2/chfS7YCxef6Dd\n1uDi4uLi4nIyuGLWJYnWrLUa9nOojJpEDafJaO2eql2sKFzGtrLPk7b3CuUyrfd1ZMpzeWtzFRv2\nHKbx0b06eJgxMpPz+wZQmon8KUIhqKcR1EOoUiZyYo2EF22bPWJLdiXyYXe/D42vN9ABht0M516f\nKMA6FWhe8KUnIrGtpDrYlkk8EkkUdbWTT6xlGOzbson8tR9zbF9yPrCqafQeNpJB4y+ic99+bhTW\nxcXFxeWsxRWzLkAilaAqXkXEijSbSgAtNzqQUrK78iveLVxKfkWyLVW/9EFc0esa/PYg3tpYycZ9\nyXZOfTt5mDEyixG9/c0KJ1XoZHqz8WsBFClRYhUo8UoEEr9HIy3Voi4p4dDnsGkRFK5NHsvolUgl\nGHRlQnx+UxS1Ngp7YlOD47FME8uIY0Qj7eoRW3H0CLvWrWb3Z+swIpGksfROnckbP4n+F4zDFwy1\n2xpcXFxcXFxOFa6Y/Y7TmrUWJBodRAybmriFYZ7Y6EBKyY7yLbxbuIyCqp1JY4Myz+PyXtegGv15\nY305XxQmi9j+XbxcMzKT83KaF7E+zUdIT6dCqyaoBVDiFSixhIgNejRCPg2PmkJRl3Rgz78SHrFH\ntyePdR6SsNfKnVzfClW3TDAAACAASURBVPYbofswfR0S+bXNXJdtmRixGGYshm0a7VrMZVsm+7/8\ngvx1qzny9a6kMaEo9B46Al/3XoydepkbhXVxcXFx+VbhitnvIHX5sCVGCccix5rfD0lNPNGty7JP\nFLGOdNhauol3C5dSWLMnaezc7JFc0esazEgv3lhTwdaiQ0njed18zBiZyZAevibFkxACn+onTU9H\nVz0gHXSzCq2qEA1JyK8R9KZY1GUbkP8OfP4XqNifPNZrXELE9hj1ze21jovCOtrRpDkdx8aKx7EM\nAzMex7asFiY7NVSVFJO/bjW7168lHq5JGgtldyRv3IUMGDMef1o627dvc4Wsi4uLi8u3DlfMfodw\npJOw1opXYTlWkr9r8n6SmphFTTPduhzp8Hnxp7x3YBkHw4X12wWC4R1Hc3mva6ip6srfP6rgq0PJ\nkdjB3X3MOD+Tc7o3XfiUyIcNEdRCqIoGUqLEK1Fi5fisKrIDPVMv6jJqYNtS2PIqhIsbtgsF+l8K\nI2dDp0Gtz9MS9Y0N0sHTUBxlWxaWESdSVYltmdim1a4FXI1xbJvC7VvIX7OaQ7t2JC9XUcgZMpS8\ncRfSI28wIhWbMhcXFxcXl7MYV8x+B7AciyqjihqjBkeeGGGtw7QTzgQRw24yb9Z2LD4rXsN7hW9w\nNNoQaRUILug8ke/1/D5lFR3588py8o8cSTp2aI6f74/MZGBXX5Pn1lWdoJZGQAvWRweFUYMaK0PH\nJuTX6OBXCHn01i84XAJbXoNt/0gI2jpULwy+GobPgoyerc/TEsc1NnAcGysWxYzFMONxHNvGqKkm\nVlPT+lyniJqyUvI//Zjd69cSrapMGgtkZpE3diIDxkwgmJl12tbk4uLi4uLS3rhi9t+YiBmhxqwh\nYkZa3C9mOtTETaJNFHUBmI7J+qMf8d6BNymNNaQlKEJlTOdJfC/n+xwpyeCF9yv4+liyiB3RO8D3\nR2bSr3PTxVQe1Uu6JwOv2iByhVGNGqsgoDmEAho+PVE41eot8IpC2PwK7FyeSC2ow5sO590AQ2+C\nQHbLc7SEEDiqD1sL4igeHMvCjlVgmwa2dXqirsfjOA5FX20lf+1qinZuJynxVgh6DhpC3vhJ9Dzn\nXBT1FOQCu7i4uLi4nGWkLGaPHTtG586d2bhxI/n5+Vx33XX4fE1H2VzOHJZjUWPUUG1WN9ulq464\n7XCsOka8iaIuAMOOs+bIh7x/4C0qjLL67ZrQmdDtYi7pcRWFR4M8u6KCvcVHk44d1SfA98/PpE/H\npkWsV/WR5klvELFSIoxqdLOKkCYJpqnoSgpRWICjXyWKugo+hMZGX6EuMPyHMPiapBSA5pCOg+M4\nOLaN4zjYtp34GhWp+3HUAFIAhGv/nTnCFeXsXr+GXZ9+QriiPGnMn57BwDETGDh2IqHsDmdohacG\nKSWWeWY+KLi4uLi4fDtIScw+9NBDmKbJT37yE+69914mTJjA5s2befLJJ9t7fS4pUheFjVrRFq21\nACKGTVXMpDLm0KkJIRuzonx8+H1WFi2nymy4Xe1RvFzYbSpTelzJ14d8PPV2BYWlDZFaAYzODfL9\nkZnkdDjRhqq+U5eWlijqgkROrFGFx6wizQOhtBTzYaWEA+sTIrbos+Sx7NyEvdbAKxLpAI2oE6u2\nlRCqtm3hWAnx6jiNXou6XFhP+qmx6DoFSMfh0K4d7Fy7mgPbv0Q6yd+77gPPIW/CJHoNGfbtjMJK\niWNLLNvBMSWWZSPtdrR4cHFxcXH5tyAlMbt161Zef/11nnnmGa6//nrmzJnDdddd195rc2mFtkRh\nJZKwYVMdbdqZACBihfnXwRWsOvgOYash19On+rmo+2VM7j6Nrw6oPPFWBQfLq+rHhYBx/YJcPTKT\nHllNe6kG9CBpegaaUvuWkw5KvAqPVU26F0JpqUVhHTMOBR8ivngFUZKffI1dzsMaOgu751gcCSJq\nAEZtlLVBtLaI7gVPCPRAolDsLCBaXcXu9WvJX/cxNWUlSWPeYIgBY8aTN24S6R1PUYey04WUWKaD\nbTX8w9WuLi4uLi5tJCUxa9fedl25ciXz588nGo0SjUbbe20uzRAxI1Qb1USt1r8HrTkTANSYVXxY\n9A7/OrSCmN0wZ0ALMqXHFUzqdjlb9sGCNyo5XNFg5q8ImDAgxNUjM+ma0bQY9WsB0jwZ6IqeuI1v\nGSixSjSzijRdENAVsCXxqI0QAnFc61rbsrBMEzsaJrh7OXLDx6jh5Lxco9sYYoNuwOo4pPaCWs4R\nPoF6R4I0UFtubHC6kFJy+Ot88tesZv/WzSdEYbv2H0jeuEn0HjocVUsxHeMM4zgOtulgu1FXFxcX\nF5dTSEpidsaMGUycOJGRI0cybNgwpk2bxo033tjea3NphO3YCVsto6rVKCzUduqKN99uFqDGrub1\nPa/w8aH3MZx4/fY0PYNLel7J+M6XsmmvzcOvV3CsqsHGS1XgwoEhpo/IpHN6rUi1bXAcpOMgpYNP\neAkoQVRDEq8uJWZbKEY1mllD0KsS1FWkKVrNPBVGNd6C5QR2v0VGvKJ+uxQqRq/JxPJuwM7o3err\n0SSKCt5QQsSKs+O2fKymhq8/W0f+uo+pOi4P2RMIMOCCcQwcN4nMLl3P0ApTQ0qJbTk4loNtSWzT\nPummEOIsiZC7uJxuKioq2LhxI+vXr+eOO+7gyJEjGIbB0KFDufzyy1mxYsWZXqKLy1lBSmJ24sSJ\n3HLLLSi1npR//etfKSwsbOUol2+KlJKoFU05F7a1Tl11lMVK+OeBN1lz9ENsGkRqhp7F1K5XcH7m\nBDbsdXjwX8WURhrm0RS4MNfL5YN8dAgIpFlFrMRJEilezUeanoYmNMDEdhIiVrfCBD0awZAnJWN+\nESnGt/sNfHveRTSKQEvVRzz3MmIDr8UJdG51nibR/bX5sMGTO/4UI6Xk6J6vyV+3mv1bPj+hmULn\nPv3IG38hfYadj+Y5OyLHjXEcp1a4JnJebctBNnMXABLiVCgKCIFAIIRAUVUUVUMoCoqqIhQ18bXr\ng+vyHSY/P5/Vq1fzyCOPAPDKK6+Qm5vL0KFDz/DKXFzOLloUs5s2bcJxHB588EEWLFhQL6Ysy+Lh\nhx/mvffeOy2L/K7RllxYx7YxDJPqqEE0bmHbjSKxtY9SSnAcimNH+eDYu3xW/ikODSI1W+/AxR0u\nZXhoNJ8Wwn9/XEN5tEGM6ApM6qvzvYE6WX4FsHGO67fg1XyEtBBarQOBsA0UowrVihH0agRD3pRE\nrFJViD//H3j2r0I0aurgeNI52GEiodG3Ij1prc5z4sRqIhfWG4RUXRLamXg0QsFnn5K/djUVR5Ob\nS+g+H/1GjSVv3CSyu/c4Qys8DimxbQfbljimTBTNWY0/zCREqap7URQNRVUQioqiKAkBq6quOHVx\naQP/+7//y7Zt2/jiiy944YUXWLZsGT6fL0nMrl69mueeew6AK6+8kh/96EdnarkuLmeMFsXs2rVr\n2bBhA8eOHeN//ud/Gg7SNDfNoAWklCAlEgky8Tx5W+12ZG0ESzZEYePVRM0oUtaJhIY56o93JI5j\nE41ZhM2Wo7AAR+NHWFnyHp9XbUwcX0umyOLyrlcyJDiKNfsc/nudSWWsYdyjwkW5Ot8boJPha1qE\neDUvQS2t3kZLmFEUoxrFiePTVdLSPKgp3CbWSr7Cl78Ez6FPk7bbgS7E8q4j3udSDu07wIC2Clnd\nn0gl0Fu35jodSCkpKdxH/trV7Nn8GbZpJo137NWHvPGT6Dt8FLr3zLooOHZtYZaZELGOlXifKaqG\npnvw+DwJ1wQhEoJVUd12uC4up5Af//jHvP322+zduxdFUbjmmmvIzc0lJycHSNwV+d3vfsdrr71G\nMBjktttuY+rUqXTr1u0Mr9zF5fTSopidM2cOAG+88QYzZsw4LQs6FTiOncjddGS9d6iUdfmcJ97+\nPP4PcOPI5olCtJGwlHVClPrxSFkJ5YcPnXCO5pDSIWxFCJthLMdsdX9HQsSwiMYdrFYq8w/Fini/\n5D22Vn+RJGK7ersxtcNlBEuz2XusJ/N2x6mON4x7Nbg4V2fqAA9p3qbFiUf1EtIbRKxi1qAY1QjH\nQlME6UEvHrUVESsl+pHP8O1cgl6yLWnIysglNugGjJ4XJqKqbUFRwJOWELHK2dEXxIzFKPh8A/lr\nV1N28EDSmObxkjvyAvLGT6Jjzknm/35DHMvBNiSxGrNWuMoGoSpUNN2LGvCgebxudNXF5SyhvLyc\nI0eO8B//8R8AVFZWUlRU5IpZl+8cKf2lv+CCC3j88ceprKxMEoO//e1v221hjQlXlCcJyDoRmRCW\nTpKYbClX72zCckxqzDBRM5J0y785HEcSjltEDAenldzZwug+3i9ZwVc1yQKxpy+HqR0uJ9d3Lh/t\nsXlvV4yo1dApy6/DJf10LunvIehpXsQG9RAexZOw1zIqUYwahHQQQhDy6QQ9rbytHAvPgY/w7fwH\nWtW+pCGz0zBig27A7DIy4TLQFupyYfVA249tJ0qLCtm5djV7Pt+AFY8njWV370ne+Enknj8aj89/\n2tZU14jAsSRSKoCKouigBPH4M2vzV8+OgjgXl+8yQoikv7lCiCR7waysLHr27MlLL72Ex+Phz3/+\nM3369DkDK3VxObOkJGbvuusuRo0axahRo87IbcR4pI1WS2cxsdqCrrgdb3VfCcQNh6hpE0uhC1JB\n5Gs+KFnBrvDOpO19/Llc2vFyeuqDWLXH4qWvo0RMgESELaDD1P4eLu6nE2hWxHoI6mkJEeuYqLFy\nhBlG1EZ8/R6NNK+G0tL7w4rh3bsC365lqJGGZgsSgdljPNFBN2Bn57V6nUlonoZirrPEkcCMx9n7\nxUa2r1zBhuJjSWOqrtN3xCjyxk2iU+++7f/zVJvnKqUKqCAVECqapqH4tKTzax7vWVlg5uLyXSUn\nJ6e+dgXgnHPO4amnnmLw4MEAKIrCHXfcwezZszFNk+HDh9OxY8czuWQXlzOCkK2VyAPXXHMNy5Yt\nOx3rOYFNmzbRt9vZbUPUmO3btzFkyLnJG6UkbCU6dKWSSmA7kkjcImo6zXrDNkwt2RXeyQclK9gT\nLUgaGxDIY2rHy+is9mdlgcmqApNYo8KtgOZwWZ6PKbk6Pr1pUaWrGiEtHY/qrS/qUhq5C3g1lZBP\nQ2/h1rOIV+L7+i28X/8filHdsHZFI957KrG863DSerZ4nQC7v97NgP4DEk88AfCePd25AMoPHyR/\n7WoKNq7HiCV7AGd06cag8ZPoN2oM3kD7uShIJ2GFhdAQQkcIHVXXUxLN27Zt49xzz211vzNBZpez\nI+fZxcXFxeXsI6XI7Pnnn8+HH37IxIkT8biRm5SxpUXETOTD2rK1Dl0QM2yipk28lYIuSIjYr2q2\n8UHJCgpj+5PGzgkNYWqHy8hW+vD+1yb/KogQb3T6dK/gsoE6fbVD9O/bp8n5NUUlqKXh0/wIM4IS\nO4bSyItWVxXSfHqLebFK+Ci+Xa/j3ftPRKNItKMFiPebRmzADKS/Q6vXWn/NQoAvvTYX9uxwJLBM\nk/1bNrFz7WqO7U3+MCEUhb7DR5E3/kK65A449VFYKbFqvVyF0EHoqJqO7tUT1lcuLi4uLi7fAVIS\nsytWrOCvf/0r0JDDI4Rgx44d7bq4bytxO0bYDBOzYkmFV01hWJKoYREzW8+FBXCkw9bqL/ig5D0O\nxQ8mjZ2XNoypHS4nRA/+udvko70RGmcnZPoSIvbCvjoeVdCUVbCqqAS0IAHFh2LVoNSUIxoJcU0R\npPs8eLTmxZJasRdf/mI8B1YjZIMwd3xZxAbMIN7vSqTehuikpoM3DdPXGfxZqR/XjlQeO0L+uo/5\nesM64pHk1g9pHTuTN/5C7PQshp9/wTc/maz1b3UcpC0T1liWRFE9aB4/Hr/PzXF1cXFxcfnOkpKY\n/eSTT9p7Hd96HGkTMSOUmWWUREta2Reihk3EsLHs1qOwALa02Vy1iZUl73HMaOgMJRAMTz+fSzp8\nD6/TlffyTT7eF8FqNG22X3BFnofxvTV0tfl0goAawidUVKMGYZXX58MCKEIQ8mkE9GbeMlKiFW9N\n2Gsd2Zi89lCPhL1W70va1i5W9ye6c+m1xVFnuKjLtiz2b91M/tqPOfJ1ftKYUBR6nzecvPGT6NY/\nD6EobN++rZmZmqcuTcCxHRyb49q+CnSfH6/fj6qn1nzi245lOoQr4m6agYuLi4tLs6QkZg3D4OWX\nX2bv3r3MmzePRYsWcfvtt7spB4DhGIRrXQkkEkc2L07jZm0U1mq+xezxWNJiY8UGPiz9J6Vmg0hW\nUDg/YzSXdPwewuzIih0Ga/ZFaNzuvmNAMG2Qh7G9NDSl5cIurwQlXolix47bQxD0aoQ8zXiISgf9\n4Dr8+UvQypIFnpU1gOigH2D2GJd6cZYQiWIubzqoZ0cqQXVJMfnrPmb3hrXEaqqTxkLZHcgbdyH9\nR48nkJ7RpnnrOmdJS2JZEsdqruWrwOPz4w2GUNSzw2rsVFEnVsMVcWpqHxt/HatJ5Jjf8f8uPsMr\ndXFxcXE5W0npL+MjjzxCdnY227dvR1VV9u/fz3/913/x5JNPtvf6zk5qC7oiZhjDMVrc9WSisACm\nY7C+Yh2rSj+gwiqv364KjTEZ45jSYSqWkcU7Ww3WFUZoXCfWOSSYludhdE7LIjZNySRbCaBEK5Ly\nYetosbjLNvAUrsK/cwlqTXK6g9llJNFBN2B1GpZ6NFWIRBTWm3ZWeMM6ts2B7V+yc+1qDuV/lTQm\nhCDn3GHkjbuQHnmDW89PlYkWrwn/VhKPtkMrGSgIoaD7AngDwW9tGkGqYtXFxcXFxeVkSUk1bN++\nnWXLlrF69Wr8fj9PPPEE06dPb++1nXWYjlkfhW3NG9awJJHaXNhUo7AAcSfOuvJP+FfpSqrtqvrt\nutAZmzmBKR2mEo2l88aXBusLI0l6qFua4MpBHkb1bN4iS1NUgmqQgHQIGxVosRNTIlos7jLD+Are\nwbf7DZRYWf1miYKRcyGxvOuxs/qnfL0oaqKgy5sOKXQKa29qysvY9ekn7Pr0E6JVlUljgYxMBo6d\nyMCxEwlmNpG7KyWOU2uFZUnMqKSmPNZm72NF1fD4A+i+wFnfoKA9xKpQBMEMD8EML8EsL8GMs8ex\nwsXFxcXl7CMlMSuEwDCM+tvM5eXl34l8PQCkJFLboau1KKwEYrZDSY2BaaUehQWI2lHWlH/ER2Wr\niNgNBUVexcuErElMyr6Y6kiAxZtNNhYli9ge6QpXDvIwsofarIhVFZWA4iFkOyixRD6sOM5hQVME\naT4dr3ZiFFDEyvDtfhNvwdsoZsP6pOIh3vd7xAZeixNqQ9cZVUs4E+ihM54L6zgOB3dsI3/taop2\nbEv+8CEEPQcNIW/8JHqec259hFQ6DpbVUJBlm84JotU229bEQ1E1fKF0dK/vlFzXqaC9xGog3UMo\ny0so00sws0G0BjO9BNI8KM3kdp9NPPbYY2zfvp3i4mJisRg5OTlkZWXxwx/+kL///e889dRTbZpv\n6dKlPPPMM7z11luEQiEA7r77bm666SbGjBnT5DFz585l2rRpTJo0qdX5m9r36aefZvny5XTu3BkA\n0zS5++67Tzjf888/z9ixYxk6dGibrgmguLiYZ599locffrjVfZcuXcof//jH+nathmFwyy23MG3a\nNC6++GLeffddvCfR5nnHjh2sXLmSO++8s83Huri4nP2kJGZnz57Nj3/8Y4qLi1mwYAEffPABd9xx\nR3uv7YxiydoorBHFpmVbLdOWxIyEL2zYcNokZMNWDR+X/4uPyz4i5jR4k/oVPxdmT+bC7MmUVvv4\n20aDzw8le5fmZChcdY6HYd2aF7GKUAiqXkKWhWpWN7mPqghCXh2/fqKIVaoPJuy19n2AaOSR6+gh\n4v2nE+t/NdKXmfL1onkSUVhP+3mtpkqksoJd69ew69NPCJeXJY3509IZMGYCA8ZMIJCejeM4GFEH\n27aQttNMbuvJIvAGgniDaaf9Q2JjsVpSYLL5cOGpi6zWCtVQI7EayvLiT/OgNJP+0p6s3lXM4o0H\nOFAWISc7wA9G5TBpYKeTnm/u3LlAQoDt2bOH++67D4D169ef9JzRaJSFCxeycOHCk56jrdx6663c\nfPPNABQUFHDfffed4Ct+++23n/T8nTp1SknI1nHVVVfVv5YVFRVcffXVXHHFFSd9fkg0GzjnnHO+\n0RwuLi5nLymJ2RkzZnDuueeyfv16bNvmT3/6E4MGDWrvtZ0R6my1ola0xf0cCTEz4QtrpOALezxV\nVhUflX7I2vLVGLIh4htUQ1yUPYUJWZM4UuXhfzcYbDmcvJY+WQpXDfJwXtdmirLq5hIqIUeiW02L\nWEVAul8noKtA8jxq2S78+UvQi9YkuRrY/o7EBl5LPPdy0NrQglX3JyKx2pmNOkrH4dCuneSvW03h\nti1IJ/l717V/Hv1GTaRr/yGI2g5p0eqWI/LfBFX34E/LRNXaJ0+4rZHVgxxqdc7GYrU+spqZEKrB\nzDMnVlti9a5ifvdeQ4Hi/tJI/fNvImibY//+/fz0pz+lrKyMKVOmMGfOHPLz83n00UcByMzMZOHC\nhaSlpSUdN2PGDDZv3syqVauYMmVK0thjjz3Gpk2bgITgu+WWWwB49dVXeemll7BtmwULFtC7d29e\neeUVli9fjhCCadOmMXv27JTWXVFRQSCQcI6YMmUKubm55ObmUl1dzbRp0ygqKuLdd9+tv8YJEybw\nyCOP8NBDD7F//34cx+Guu+5KiuwWFRVxzz33sHjxYqZPn87o0aPJz89HCMFzzz13wmvQmOrqanw+\nX/3vuYcffpiioiIAnnnmGR555BGmT5/O5MmTKSgo4PHHH+dXv/oVv/rVr9A0DVVVeeKJJ9i3b199\ntHzJkiW89tprOI7DJZdcwpw5c5g7dy6FhYXE43Fuu+02pk2bltLr5eLicnbQ4l/Qul+ob7zxBgDB\nYCKatnPnTnbu3MmMGTPaf4WnASkdwrWpBK116DrZXNg6ys1y/lX6AZ9WrMWSDedK19KZ0uFSxmSO\np6hc4/lPDbYdTRax/TokROzgzi2JWIlH2mQ5Ah2ryT0EgqBPI9OnJFttSYl2bDP+nYvRj21JOsZK\n70Us73qMXpNTb1ggBOiBhIhtiyVXOxCtrmL3+jXkr/uEmrLkPGFPIEifoaPJHTmeUPapFzZNIYSC\nN5j2jbuBtWvOalNiNcOLP/3sE6utsXjjgSa3L9lU1C5iNh6P89xzz2HbNpMnT2bOnDnMmzePhQsX\n0r9/f5YsWcKLL77I3XffnXScqqo89thj/OxnP2P48OH121etWkVRURGLFy/GsixmzpzJ2LFjARg5\nciS33347H330Eb/73e+46667eOedd3j11VcRQnDrrbcyceLEZte6aNEi3nnnHRRFIT09nd/85jcA\nHD58mKVLl5KVlVUfhZ45cyYzZ85k69atLFiwgLlz57JkyRKysrJYuHAh5eXlzJo1i7fffrvJc4XD\nYa688krmzZvHvffey+rVq7nyyiuT9lm+fDlbtmxBCFFfo1HHddddx6hRo5g7dy5r1qzhhhtu4LXX\nXmPy5Mn84x//4Prrr2ft2rUMGTKEuXPnsnHjRiorG3LfS0tLeeGFF3jrrbfweDw89thj1NTUsH79\nel5//XUA1qxZ0+r318XF5eyiRTG7detWpkyZ0uxts2+7mK2z1YqZ0RYLuiQNjgRtzYWto9Qo4cPS\nf/JZxfqktIUsPZuLO1zKBRlj2Vem8Nxagx3HkkVsXieVqwbpDOzYkoh10GyDdEcSUHSaLpUX+D0q\nad5EgVj9XNLGU/QJvp1L0CqSu1iZHQYTG3QDZrfRqRdonWFnAikTPq2W5XB09y52bfiEoq+2IJ3k\ndJGOvfqRO3I8PQYNa7fIaFNoHh/+tIyUHApOm1jN8nKs7BDnjRj0rRSrrXGgLNLk9sJmtn9TBgwY\nUG9dqNW+twoKCpg/fz6QyE3t27dvk8f26dOH2bNnM3/+/Pqf0YKCAkaNGoUQAl3XGTZsGAUFiZ/V\nUaNGATBixAieeOIJdu3axaFDh7j11lsBqKyspLCpDim1NE4zaExWVhZZWScWOhYUFPDQQw/xpz/9\niYyMDHbt2sWmTZv48ssvAbAsi/Ly8iaPBRg8eDAA3bp1Ix4/0UWlcZrB8dS1W+7YsSOxWIwxY8aw\nYMECSktLWbNmDffccw+O4/DCCy/w05/+lLS0tKQPDAcOHGDAgAH4fIk7RP/1X/8FwLx585g3bx41\nNTVcffXVzb5WLi4uZyct/gX/xS9+AcBvf/tbLMsiPz8fVVXJy8v71haA1UVhI2YEszVbLUcSNmyi\nho3dxor0Oo7Gj/Bh6T/5vHJjkmDu6OnEJR2+x8j0C/i6BP7nE5NdJcli65zOKlcN8jCgYwuiR1qo\nZoSQhKDqa7b63aurhLzJNlvCMfAWLMeX/zpq+EjS/ka3McQG3YDVcUjqFytEIh/Wl5a6r2xbkTIh\nVp3EP+lIpE2Di4AjMSJh9n35GXs/X0t16bGkw3Wfn95DLyB35HjSO3ZtnzU2g1BU/GkZSQVelmET\nrjSoqYgRrjBOuVhtnLMaymw5shrZdpRg5r+nc0BOdoD9pScK117Z7dOMoanfj3379uXxxx+ne/fu\nbNq0ieLi4maPnzVrFitXriQ/P5+bbrqJfv36sXTpUm699VZM02Tz5s1cc801AHz55ZeMHDmSjRs3\nMmDAAHJzc+nfvz8vvvgiQggWLVrEwIEDWbFiRZuuoanfJYcOHeLee+/l97//PV26dAEgNzeXrl27\n8vOf/5xYLFYvctvy2qTK8ccKIZg+fToLFixgwoQJ6LrOO++8w/nnn8+dd97J8uXLefHFF+sDL716\n9WLPnj0YhoHH4+EXv/gFv/71r9m+fTvPPvss8Xiciy66iO9///v1H0JcXFzOflL6aV27di0PPPAA\nnTt3xnEcqqqqRJ8C/AAAIABJREFU+MMf/nBSla1nCkua1Bip2WrFTYeIYRMzWy78aolDsYN8UPIe\nX1ZvTmpp28XTlakdL2NY2kh2Fkt+/7FBQWnyes7tonLVOR5ys5sXhMKOoZgR/ECaFkRtRjw2ZbMl\njGq8BcsZsXNZUj6tFCpGrykJe62M3qlfrKImBKwn7dTYazUSq47lJNq32pJ4jaS67PimDnWHSEqL\n9rJn01qKdnyBYyenWGT37EPuiPH0HDwcTT99KQ+25RCttjFiKmZcIVxxtFGE1SAWPkVitdHX/m+J\nG8Dp5AejcpJyZuu44fyep20NDz/8ML/85S+x7cTvlQULFjS7rxCChQsX1lsgTpkyhQ0bNnDjjTdi\nmiaXX345Q4YkPmhu2bKF2bNn1x/To0cPxo0bx80334xhGAwdOrReeJ6Ka4hGo8yfPx8pJd26dePR\nRx/lwQcfZNasWdTU1DBz5szTail37bXXMnnyZN58800gEb29//77efrpp1EUhV/96lfU1NQAkJ2d\nzc9+9jNmzZqFEIIpU6bQuXNniouLmTFjBoFAgJ/85CeukHVx+ZYhZAqJn1dddRVPPvlkfdHX1q1b\neeihh1i6dGm7L3DTpk307XaSETQpidUWdMVO6GyVjONIIoZN1HCwnJNLJQDYsHcd27StbK/5Mml7\nD29Ppna8nCGh89h+VLJ8p8G+8uTzDOumcuUgD32ymhOxEmFFUc0wPqEQVIPozdzGb6r9rIgU49v9\nBr497yIaFbhJ1Uc89/KEvVagDfmDmg7ejERebCrRFilxpETajR5ro6pS1tpYSdmsU8CuXbsZOHBA\n0jYzFmX/1o3s+XwtVcWHk5fn8dL7vAvoO3I8mV26p35dbaBOrEaqLCLVFtEqi0i1TbTKoroijm20\nXVSeqQKrbdu21d/GPds4Fe1sV+8qZsmmIgrLIvTKDnDD+T3bJV/W5fRy9OhRHnjgAf785z+f6aW4\nuLicIVL6+OnxeJLcC84777x2W9CpwJImETNCxIi0aqtV12I2+g2isAB7IgV8ULKC/NiOpO29/X24\ntOMVDAycw5dHHH67MU5hRYOIFcCIHipX5nnIyWxGxEoLxYyiWBF0oZCmhvA00+q1rrgr5GlwKFCq\nCvHn/wPP/lUI2RCxNLUgZt61xPtPR3qaryg+Ad0HnjQc1ZcQomZtG1ZHIh0SQtUhJYF6MkgpKT98\ngD2fr+XA9s+xzeR0kaxuOfQdMZ5e545E83yz2+bNitXar+PRlj74NC04m8tZbS0NwOWbMWlgJ1e8\n/pvx3nvv8cwzz7QY5XZxcfn3JyUxO2rUKH7961/zgx/8AFVVefvtt+nRowefffYZABdccEG7LjJV\nYlaUGrOGuH1iUUFj6lrMRs2TL+iChKjaHcnng5IVFES+ThrrF+jP1I5X0M8/gM2HbB79NMbBqmQR\nO6qnxpWDdLqnNyViJcKKoZhhhGOgCpWQFsSvNm9t5dc10nwN3b+00h34di7Bc2hd0n52oAuxvOv4\nysml34DBiSQIp0FwJnJSa0vIHHCcRPTU0XyghZCODnGo/e+0YZsGez5fy57P11JxpChpTNU99Boy\nktzzJ5DVLacNczoN4rS6IaoaSUmsNo1QIJDuRXgsuvTIdsWqi0s7cdlll3HZZZed6WW4uLicYVIS\nszt2JKKNTz75ZNL2P/7xjwgh+Mtf/nLqV5YitrSImAlbLVu2FoV1iBo2MevkbLXqkFKyo2YbH5S+\nx/7ovqSx3mofpve8hl6+XDYWWTySH+VwdcO5BDC2l8YVeR66pjWRVyZtFDOCYkUSXyMIaiECqh8h\nRMO6ZYNfgUdVCXk0VCGwDQf16GcEd/8DT9n2pKmNtL5U9b2eSOeJSBTC+/dRXdFKRFqIhEesN5To\n2nUGqDhSxJ7P17Lvy89wrOQc04zO3cgdOYFe556P7jvR97ZxZPVUilV/SMOfphJI0/CnawTSNdI7\nBMnsmkkw04+iiNrb9v1O+rpdXFxcXFxcWicldfLKK6+09zraTMyKErEixKxYUoHV8dQ5EsS+YS4s\ngCMdtlVv4f2S9zgUT44MnhscyiVZ38M6CgcPd+elryMcCzesSxEwtofKZX01OvoVQGJWNxKSVhzF\njIITr0+M8Ks+Aqof4gqRJorWdFUh6FHxSBXTMPEcXU36vqV4wvuT9otlnUdln+uJZY9IvXWsEOAJ\nJTp1ncZijjos06Doq83s+XwtZQeTr0fRdHIGDyd35HgyOvciWuNQftQiWl196sVquoY/TSOQpiZE\na5qGL6giGkVWhVAIZGR945QGFxcXFxcXl7bTopidN28ev/nNb/jRj37UpJ3KaY3ISonpWESMCGEj\njG3b9RJWyhM1mmE5ROIWMcPBqbtnLpOmO27+ps6ZeLAdm63RzXxY8z7HrAYLK4FgqH8Ek0NT6aR2\nZ/0Bm3cKYlQ0yuHUBIztrvK93hod/LWisE6tShvsGIoZg0YNDjx4COp+VNH0t0cVgqBXw6epCCtK\nqPCfpO9/Ay3e0AxAIoh0GktVn+sxMgY2OU+TKArowTMmYquKj7Dn87Xs3/oZZizZb1fzZ9Gx52g8\noXOJR3Q2/dPCiB5s8zkSYlVNiNQ6sZreEGk9Xqy2hKp7CKRnpeQZ6+Li4uLi4nLqaVHM3njjjQDM\nmTPntCymOYqPVhCzosSdeIvpAZKGVIKT9YVtjCUtNkc+4181H1BqNwhFBYXh/lFMSZtKpujMusM2\nz+6LUx6XQELUaApM6K5yaW+dLN9xwsgxEVYMYUdprKJVNIKaH4/StHWUKgQBr4ZfU1GMStIKlpNW\n9Daq2dheS6Om28VU9b4GK9gG2yFFaYjEnkYPYdt0qC6PcWD7FxzcuZ6a0v3H7aGi6P3RvEMRWk8q\nSgSUSKB5j+AmI6snKVabR+ALpuEJBL+1nstnAwknN5F4y7kvo4uLi4vLSdCimK2z6enduzd/+ctf\nuP/++zlw4ABPP/00DzzwwGlZIEBFvLzFcceBmJko6DoVVfOmNNkY+ZR/1XxApV1Rv11FZVRgDBeF\nphIS2aw5aPN+YYzKRnVQmpBMytGZ2ksjw9v4r7MEO44woojjhJiKSkD14W2muEtBEPCpBDQNNXqU\n9K/fIHTonyiNmj44qp/qntOo7jUd29sh9YtVlESnrlTttdpIUwVWkapECkB1+TFilVuwje0gk63T\nhJKB6h2K6hmCUALHjSWL1TrBemrFavOomgd/euZp7Rr2jRCJb22S6BagKAKhJDrBCQV0n8AXSrhk\nJMSlSOjL417KJsV73SbZ8FyIxN2LJJTE8Ses51vIY489xvbt2ykuLiYWi5GTk0NWVhY//OEP+fvf\n/85TTz3VpvmWLl3KM888w1tvvUUoFALg7rvv5qabbmLMmDFNHjN37lymTZvGpEmTWp2/qX2ffvpp\nli9fTufOnYFEZ7K77777hPM9//zzjB079qS8xYuLi3n22Wd5+OGHU9p/48aNPPvss1iWRSQS4dpr\nr+WHP/whS5cuZc+ePc12B2srd955J88880yTY4cOHWLnzp1cfPHFp+RcLi4u7UtKf43vu++++v7Z\nXbp0YdSoUTzwwAO8/PLL7bq41jBtiJomhiWbThNoI4YTZ31kLatrPqTaqarfrqEzOjiOi0KX4COD\nj4ssPiiMUd1Ik3pUuKinxmDPMQb26tEwIG2woihWDI6zCVMQ+BU/fs1HU2EpgSCgqwS8Kp7qfaTv\nX0rw6GqEbMgDtT2ZVPW6muoeVyD1UOoXqyg4eghCXb6RiG0sVo/3WY1UWxjH5axKaeOYBdjxLTjW\ngeMXhaL3Q/MNJZiVSzCjTqQmclZLKo+QN7hPu4vV5hH4Qml4A214ndt6BqVW6NU+1p23fludGFQa\nCUJBkugUCFASXsNteZ00n4Iv2LTl278FX6+EzX+F8n2Q1QdGzIL+l5z0dHPnzgU4QWQ11/47FaLR\nKAsXLmThwoUnPUdbadzOtqCggPvuu49ly5Yl7XP77bef9PydOnVKWcgeOHCARx99lBdffLG+Ze3s\n2bPJyUndoSRVmhOyAJ9++il79uxxxayLy7eElMRsZWUlN910E5DwnP3BD37Aa6+91q4Law4JGKYk\nalpY9qkxL405UdaFP+GT8CrCTrh+u0d4GBe8kInByegyjdUHLFYWxmjcYdSnwuQcjSm9NEK64OCh\nukTbOMKKIpym7at8wkdA96PQdF6qT9MIeATByq/I+Op1/KWbksbNQHeqel9LTdcpoLaho5WiJFIJ\nPCFstbpVIdtWsdocjl2JbWzFjm8DmdxWVPdl0rXfKHLOG01Wl+xmxWpkl8SfdmaioYnc2EyUFB0d\nRG3UU9ESkU9FEUnR0IaoaKN9v8N2XVLKxC0W22742nESd1qkg5rWBh/kpvh6Jax8pOF52Z6G599A\n0DbH/v37+elPf0pZWRlTpkxhzpw55Ofn8+ijjwKQmZnJwoULSTvuumbMmMHmzZtZtWoVU6ZMSRp7\n7LHH2LQp8Xvgqquu4pZbbgHg1Vdf5aWXXsK2bRYsWEDv3r155ZVXWL58OUIIpk2bxuzZs1Nad0VF\nBYFA4k7IlClTyM3NJTc3l+rqaqZNm0ZRURHvvvtu/TVOmDCBRx55hIceeoj9+/fjOA533XVXUmS3\nqKiIe+65h8WLFzN9+nRGjx5Nfn4+Qgiee+65pNfgzTffZMaMGXTs2BEAn8/HSy+9RCAQ4M0332TL\nli385Cc/oaysjJtvvpkbb7yRDRs28NRTT6GqKjk5OTzyyCP83//9H6tWrSIWi1FcXMzs2bNZuXIl\nu3fv5oEHHmDq1KlMmDCBNWvW8Le//Y033ngDRVEYOXIk9913H88//zyxWIwRI0awaNEisrKyqKqq\nIjs7m6uvvprJkydTUFDA448/zvPPP5/y+8LFxaV9SOkvs8/n46OPPuKiiy4CEu1t/f4TbZDaEykh\naiZcCZxT5MAfccKsqfmINeHVxGRDsZFP+JkQnMT40EUIO8BHhRYfFsaINOqQ6tfg4hyNyTkaAb1W\nhEgb1Y6jREtpXNDVGBWdND2A1kxxl0dTCeqQXvoZGftex1uV3IIznt6fqt7XE+k8FpppYdskjURs\nYwF7qsRqY+oKrHwhBWntobpkMzXlBSSFz4WgW//B5J4/ga65gxBnoNgsNRqisY3zOxW1VoCqDWJV\nqAJVFSi1rYN96QrpHU7vz8npRDpOg+g87jEhRBMNMxKmxbUNNDjuuWx0XAt8YzG7+a9Nb//ib+0i\nZuPxOM899xy2bTN58mTmzJnDvHnzWLhwIf3792fJkiW8+OKL3H333UnHqarKY489xs9+9jOGDx9e\nv33VqlUUFRWxePFiLMti5syZjB07FoCRI0dy++2389FHH/G73/2Ou+66i3feeYdXX30VIQS33nor\nEydObHatixYt4p133kFRFNLT0/nNb34DwOHDh1m6dClZWVn1UeiZM2cyc+ZMtm7dyoIFC5g7dy5L\nliwhKyuLhQsXUl5ezqxZs3j77bebPFc4HObKK69k3rx53Hvvvaxevbr+rh/AsWPHkhr0AEliV9M0\nXnrpJQ4ePMjtt9/OD37wA+bNm8err75Khw4d+MMf/sCyZcvQNI1wOMzLL7/M22+/zaJFi1i8eDHr\n16/nL3/5C1OnTq2fc+nSpcybN4/hw4fz6quvIqXk9ttvZ8+ePVxyySUsWrSI6dOnc+mll/Lpp5/y\n2muvMXnyZP7xj39w/fXXt/g+cHFxOT2kJGbnz5/P/fffzwMPPIAQgq5du/LEE0+099rqqT5YjGE7\nJ2YSJOUANqogOT7aKETDXXwhqHaq+cRYw7r4pxiN8lcDIsCFvkmM843Dtn2sKoB/HYwRbZQdENTg\nkhyFST0U/JoCJKJJwoginBiaGQZ53G1oASoKftWPr5m8WF1VCGkOWcdWkb5/KXokuUo/2mEkVb2v\nJZY1tE1pAbYjiMT9RKM6kbBDtKqiUbtVD7veL2p9kuNozme17rljV7Fvy3r2fvEpserKpGN9aRn0\nHT6WvsPHEsjIavO52wUBiqqg1IrRujxS3esllJ2J5vF8q/I76wWllA2CsrGobOo5QGUlVklJ4ngJ\nTQrP2uO+iU/zGaF8X9u2f0MGDBiAx5O4Y6LV5lYXFBQwf/58IJGb2rdv3yaP7dOnD7Nnz2b+/Pn1\n77uCggJGjRqVeF/qOsOGDaOgoABINLUBGDFiBE888QS7du3i0KFD3HrrrUDizlphYWGza22cZtCY\nrKwssrJO/BktKCjgoYce4k9/+hMZGRns2rWLTZs28eWXiRbelmVRXl7e5LEAgwcPBqBbt27E48l3\nrrp3786RI0eStu3cubP+/TZ48GCEEHTq1IlYLEZZWRnHjh3jrrvuAiAWizFhwgR69erFOeecAyTE\ncL9+/RBCkJGRccI5f/vb3/Lyyy/z5JNPMnz48Cbf23XfqzFjxrBgwQJKS0tZs2YN99xzT5PX6OLi\ncnpJScyec845LF++nPLycnRdry9OOFm2bNnCk08+mbJ/bcmfnyatykE4EPXnUJV5DoaegVRNIh5Q\nCKHZKoojUJDgWPjixaRX7CAUPYBwQCpQErJ5/3yNL/qWY6kNCjUQ8zH8wAUMOTQcS6os8VewKS0b\nUzTkD6YbYSaX7mGA40ceCVGyuRzdOIJldECKDJAmCUMsnaPmXvyxEuLejpieDDxGJRmVOyB6gEpF\nYHg10nHQYjaGBEW16dmjhJ45xfi8DTkMjhQUhEfwReVFVO72EvjwczIql6Jbkog/h4rMc4h6u4Dq\nQQodqahYiooQCprUkMIDQgOSGw000JxAc9BkDdKWOAiQDkLG0a1StPBOMsu/wmc5aBIcBaoCORSl\nDyKiSUxnP7Zz+IQZVaUzqtYPxexG4UbBgQ1f4I0Xk161g1C0CI83QHVmH47pOZhqx9qosyChqhoe\nCzgC0kLICEKqSKnjNasIGqXEvZlEPB1xFBVFWgTtYjr5d4AaJnzEA/EANWn9iHo74Sgqpl2Mbe/F\ncSqQ2AhUdOmhazRGtzSVgzJO2DRIEyadgplUiAmUmjEMcyfSrkIo6ej6QHxONY6xnSgOjtoRqffA\nohLbLuUjbJAOinTQ7DgaAkNLxxYOErv+8hL2commGEIIkAqq4kEgsKVRvz5VyUZRsnGcMmynDImF\nkCpe6aNXOMpgpRwRLuWwDfuDaUQ8HgIOdKsOEwpXU+r1cDQ9jbjHg6P5iSsBHKEhlDS8Si577W2k\nRQ9T7e9Gta8rttBQsfGKGEKC5Qj8sRJC5Z9QKYqJqQpBw0STaVQEMrCFhab4CIhuIDohHYnqxPFH\njxKIFWN6s4jrmYk3hVUC5iEUuwZVCBw0pJQoUkPFg3CiCMdAQ0Gd+VMmzkntVnmTZPVJpBY0tb0d\naOrDT9++fXn88cfp3r07mzZtori4uNnjZ82axcqVK8nPz+emm26iX79+LF26lFtvvRXTNNm8eTPX\nXHMNAF9++SUjR45k48aNDBgwgNzcXPr378+LL76IEIJFixYxcOBAVqxY0aZrUJq4W3Lo0CHuvfde\nfv/739OlSxcAcnNz6dq1Kz//+c+JxWL1Irctr00dV111FXfccQfTpk0jOzubcDjMf//3f3PHHXc0\neWxWVhZdu3atT1dYuXIlgUCAw4cPp/wBdPHixcyfPx+v18ttt93G5s2bURQlYel43JqFEEyfPp0F\nCxYwYcIEdP3fOMfcxeVbREpi9uDBgzz44IMcPHiQv/3tb/znf/4nCxcupGfPNlg/1fLCCy/w1ltv\ntSlNIa3KIRCH6mAO5R3HASCFB1PNRncSSkAKga2p2I6FUCAmBVbHTPQjYLCP98+P8ukgA1tt+NQd\niqYxrGgcQw6eQ0QNsTrk4Qu/B6vRL8EMo4ZphRsYXVVKaafRSAEiHsd0MonQA00NIwBLTUQhNDNM\nzNOZmmBfNDOM7hgYeibHOo6jyxEIhQ8QjJogQNdN+vYtpkdOCZreIK4tR2Nn9Wg+r7mCKrsToKLq\nJtUZvbH0Ymw9RDTQFanotWK1gbpnsqXf41KiWNVoZhlke+mV2xNfAGrKdhM48C7xqiAH7THYihdL\nC9YfJqQPfINRRSVe4wCKA2XpPTic2QnD+QJpRY87kQ9F74eqDUAoQUBgKSrUfo+kFFjZmehH1hG3\n4ag2BEt4sNQgMhEuTUQGFaXRo0VC3IYQta933JNFTbAnmhXD0nyN1utQFL2AnMMfEiLGgS7jsRUv\npp6GbR/BtL8CaQAJJwWJiSngQEDhaKwGrxVHKFCq+DgU9eBRDmE4B5FCQerpCGkTt7ZQjUToGbVz\nxHCsbSA8tXNLwMYWCram1DYArq6NfArATnzSkjbCEajSRpECIUGREkWCcBwUKVCkRFCJ4uSjoKI4\nJkJKFClRHZ24FBysjuKLx6kMBciqCNNB1iAk2FJiGeDFofexisQ1AIoERSYytxVnPSo+BBodHQsh\nHRRpIaSN4tgIaSUem6y2LG3hDffN+efaD76ZmB0xKzlnto7hPzz5OdvIww8/zC9/+UtsO/GzvmDB\ngmb3FUKwcOFCpk+fDiTyVzds2MCNN96IaZpcfvnlDBkyBEgEB2bPnl1/TI8ePRg3bhw333wzhmEw\ndOjQeuF5Kq4hGo0yf/58pJR069aNRx99lAcffJBZs2ZRU1PDzJkzmxTCqdCzZ0/uv/9+7rzzTlRV\nJRwOc/3113PRRRexdOnSE/ZXFIVf//rX3H777UgpCQaDPPHEExw+fOIH6ubIy8vj+uuvJysriy5d\nujBs2DBCoRB/+tOf6l/jxlx77bVMnjyZN99886Su0cXF5dQjZAr3C2+77TZ+/OMf8+STT7Js2TKW\nLFnCm2++yd/+9rc2n/C9994jLy+PBx54gMWLF7e6/6ZNmyidcy+6hAM9v4fhSUR1DE86jlCRjfNG\nRULYCmmjSJuwtp/Pe6/nqx57cRr9bs2IpHPBnpHklo6iRvGyIeBlq19PErFplsWFFUeYvmMxPsem\nqOf3iHsyE/pDQFxPx0FFYCMk9etQalvqOkJFkTZeI+GKIAFPvJxehe/jD8TIyT1G1x5l2IpOtd2Z\narszFfEu7IsO46g5AFMJIYWKaEtebC2Jb6mTcFLAQcrE10KaCMfAY1TgMStIK/uQmpCP8Xck8uH2\nrXgGv1nG3tKLiItM4noGTqPzK9LGY1Shx8vJOvYhJek65QEdRPJb6P9n783jo6iy/v93VfWavROy\nAYEshFVANlmNoM4DBqLIuEBkcxREB5QgYNi+JEBiAB10YMCR5QF5BpVIUAZBVH4IAgISERAkQDBA\nDJCQfe30Ur8/OmnSpAMJO1rv1yuvpKtu3XuqurrzqXPPPUeQAhBVLRFVQbXtv+o90lQWoTEWgACV\nGi/H99WZZ6XG7WrrwxabLAsqZEF0yPQgWivRGXPRl+cgyjKVag9Malv8ncmYimApRrSUVvUjV/3Y\nRKNoteJSaUSUZcwqF5AFBNmEJNs8xra2VgSrEdEqI6CyiU2rCbHKE2sTpNYrorR6DKtc9Tf2ce+f\nIIY7ixWQBYHtD3bljY9vskjL6e22GNnqbAYPvnBb4mUV/thcunSJqVOnsmbNmrttioKCQhX18szm\n5+fTp08f3nnnHQRB4LnnnrshIQvQv39/MjMbFqepqtIvJs2VqSu7yHISH5vrks2hZntI9/3VYSbd\nu8RAt9860/JiC4pFNd96efCLXo2lRh8eFivdS410LsxGjYzOahOnlVVj24QryFXFEWQkhzFqij+r\nICEjIItqrIIaycuK2acr+ToPzln9KM71o9zq5eSEq06lrgsiyyCbbGV8ZWtVOV/bdLbt338di2lk\nM3JV7lBTlSfRpbSCjAxboQJtZR4yMkbBs9a5AFgwYbSkUyyd43JgtWddrrJVjZbG6GiCyqxDNFkQ\n5bMIVptorf5t8/BZEK2ViFYralMJomyuEn9WrIK6SlzaXld7BUW5hmew5rbqfmv8bfck3op8bQAU\nXL/JfYQMWAXB9iMKyAhYRQm5ahsqH6xVDwdWUYVVVCFXPWDIgojJcg5ZsPUhmcup0Gjsr2XR1TZL\nIorIgohK3x2roMJSlXHDItlK/hordtptsMjFWEXb39X9VP+IkjcA4lVp7W6IFo8p4lXhpti2bRtL\nliy5plddQUHhzlPvbAYXL160xw0dPHjQvrjhTmAWQC2DurLQ7pkVZYtNbNXw1OW4X+BQ0PdkNHLM\nANA0R6L/QT0GS3+y9b5s8fLgiKub7R93FV5mK93LjLStMKGSLagE23gWASQZNFVjV0/fC1iQkRCw\nIiAhC2oQJFuOT0GFLKgQBBGj5sr0XgFQQFtwnq3rCrIVwWq2eVItRiSLEclSjtaYh7b8MipzKVaV\nDotoEwY2L58F0Wq+SvxVi0fbdLFotf2oLBWIFiOaystYRBGvL9aD2Ywx7zKi1Uxn00dQ5UlEtlKo\nl8j0duWShwvyVemjDCXlNMstIqCwFEk+0cB39o9DTYFoE4VgFW1T+XUJNWtVO7lKVF451ln7arEp\nYxVErCI2sWlvKyIIeiRZg2vp75RqVchClVCtGsOollBZrLZFkHo3ZKE6HllCFD0AECQDWv1fbLMC\n9lkG29dE9T1kKv0Si1yCaDWjq7hMid4NqyAjICKInoDtPATRC53etjipur/q30b1aWRrISBjtZq5\nkoO56uFQttTI1nGfLTZT+MPSv39/+vfvf7fNUFBQuIp6idlp06bxyiuvcO7cOZ566ikKCwt5//33\nb7dtdkwaUBvBK/9Xsv1tMbOiuQKL2hWwctH9PIea7+G8d7r9GEGWaZLrx//8pKdzWhHZek++aS5w\n3F2NZC0hpLAQtdWCt6mSDmWlNKu8IgJVljJESyVuxadQm00gedEoP4Ni92DMKlfMalcEUWWLvVTZ\nPJRXe1GvNW0sWM3ojPloK/LQV1xGV5GHriIPfUUuuopctMbCW+hVvD7y6ZMAVD+eqDBRKYn8bnDn\nnI+BUp0nmS1dAAAgAElEQVTjg4vKbKFpfjFBuUW4G+taXHYL7LJ7DKUqAaeyewetoqrKcywjCxIW\nSWMTjpLGHqYgYEUWZFzLskAQKHINxiJqMKldsMhlmKwXkUUrVrnSLiYRtDaPoKUCldUMIpgkLUa1\nO5IUSKWcjUWUsIgqEKxYMWMRQBB1VTabsMrltWJmcZpPWKixz3rV76sXv1UdX92vvX8bInpEJMKy\ni/EoKyfX3fuqcWSa5JdwydPVFvJiNmNU266fIFyJM9YKtlXb6soSzOrqe9tqf2hUm0qRhGBK5V9Q\nm205mdVVfQloEGSrPeRGpb6SYkldWYxZ7WL/rdK0wVSxz/agJWiwVuUeFgRd1YK4UkBXNb4iZhUU\nFBQU6qZeYjY3N5fPPvuMjIwMLBYLoaGhd9Qz61NcgNok41mSR5PsX7FWTVVaBSMmqQJBthC1C1SW\nKz+2dV5XFgH4lVzmgZz0Wn1bRDUVOm8qdD6U63yq/g6kVOdDduPHMWk8GmyvYLWgNebbxamuIrfq\n77y7IlZrIoPd+ydLEmoXV5AkkCRklYrLgoVMvcglFz3Wq7ywrkYZv6IK/AsKUMsygqimyEWNUe1J\nhd4fk8odq6TGWiU+bfHFJmQkzJILcpUAtQlNGbUpH/eik7iWZaLR6Sk0hHBRG0aFNhCLqKnydF8R\ndHLVb0E2I1lLAQlQozUW4F5xiXJdI0p1flhEFZLVjJv5AgGaw5QLWkov6rCYLRR5hVDhEoRVdMdk\nvYDZfAqLNdeWLUAW0co6mpSWEuDlRoa1klJLJe6CmSZ6FYViOLnmZlgq0xCthQiCBzp1e/TWEiyV\nv1COFVnli1UVhpkiLJZcZMy2BXeyxUk2A2t1GgN7FgPHbAbaqmwGxhrZDHwQRUONbAY2u3WyjqBy\nI+0byaBVoS4p4KyLO6UaDa5WgYDSMlzNRtRFFnLc3RAFC2pZg1HQY0WFILihlULwtYBb7m5KdAEU\nCf5YRTWibEYv2cJaLBLoza40KTFRSAmlKolGFcVIRk9y3VwxYkYjuqDXhCALXlgsZQhWI65lv+NR\nlkmFaxBFBGGV/NCoO2Kt/AXBUoKk0lGBDjMCguCOqA7Das1HlovRq1xp91CPO/1RUVBQUFC4T6jX\nArCBAwfWmQT7dpOamorLC8Nv+HjnYrUR5VXbTJqGJ2MXrBZ0xjy7UNVV5KGrLEBfmYtLZTZ6cz6i\nYEWQQBBlrGpXLFoDslpvF472H5XttyBKoFJVbRdBUtl+q9Wg0YHaBUEtVW2vaqtSX/lbkhAkVVV/\nNdo4tFc5FCfIyDhLcHBzTJUVZJ4+TsavhyjKd0wXpFJraBrWjuA2D+Lp448gUlUYwJaLVVIJiAI3\nVRK3XtdcgFPpZwhv1cpewhVRBEFAEEQQBdu5OfwtgCDa2osCkkaLq7cPqjuUTic1NZUuXbrckbFu\nBfebvQoKCgoKClBPz2xQUBDTpk2jY8eO6HRXpiQHDx582wyricXFBVmSqBStlEhGKkQzFglMEpgl\nNaKuKVptM2S1LyWSJ4WCJ5WSB6jdEKSGV2ASsKKWKlCrjLYfTSVqjRk3vYCLDtQ6uUo0uqGWrQQU\n/Yxf4fdI8pVgWKuopcj7EQoa/Q9WjQ8NzkkgCKBxAbXrtWMWboKyojx+/v44menHsZgdwwU8G/kT\n2rYTwa0fQK3V2gSsSINEqyCJIEp2MXlFWFYJTkGwC84r52grWkCVMLX9bctsIBcUoL7BFEMavR5X\nT697uNKYgoKCgoKCwo1QLzFbXcnl8OHDDtvvlJj977jn+KX8NOYKCXejt/3HYPRDY3Jxesw1JZcg\no9aYUGnNqLUmVFoTKo0Jtc6EWmNG0pjtmk1AxEXUopFcHbrQVV4gMO8bfIr3O6y0rhRcKPbrT6HP\no1hVN1BcQhBArbeVnr0N3k6zqZLM9ONknPiZwsuOlXYklZpmrdrRstND+AUFORWggN0DWlN02jyk\nOLy+V9B7eKB3u8lyqAoKV5GUlMSxY8fIycmhoqKCoKAgDAYDL7zwAp988gmLFi1qUH8pKSksWbKE\nTZs22QvTxMTEMHToULp37+70mNjYWCIjI4mIiLhu/87aLl68mM2bN+Pn5wfYKpPFxMTUGu/DDz+k\nR48edOjQoUHnBJCTk8O//vUv4uLirts2JSWFf/7znwQFBQFQWVnJqFGjiIyM5NFHH2Xr1q1otdoG\n2/Drr7+yfft2xo8fX+e4Z86cYfLkyQ3u+1axf/9+Ro4cyaJFi4iMjLRvj4qKol27diQlJV23j/T0\ndOLi4li7di0xMTHMnz/faUjgzbyfCgr3IvUSs2+//Xad+2bNmmWv5X278PipG73oVu/2FmTKJRkX\nXSWeLkbUWlMN0WpGVUOs1oWAgE7UopW0DsLYrfwMgQXbMJQ6CnuTuhEFvgP4tTKUxv7Oy1Ree8Bb\nJGIFwdEbWiUuC3MvkvHLQc6fOIy50jGdgldAY1r3jiCsSw80DShmca8jShKuXl6otc5LCCv8udj7\n+142nt5IZnEmTd2b8nSLp+nVpNcN9xcba8vPfLUQ2r9//w33WV5eTmJiIomJiTfcR0OpWc42PT2d\nyZMns3HjRoc2Y8eOveH+fX196yVkqxk0aJD9WhYUFPDkk0/yxBNP3PD4YKtiWV3e9l4mNDSUzZs3\n28VsWloa5eVXF6OpH9d6mLqZ91NB4V6kXmL2Wvzyyy+3wo6GIcjIaiuXBZkLMhSJMoVVP41cjTzu\nm8+DrtfLf1VH1whoRDU6SX9l/bks41n2C4H52/CoOO3Q3qgLIt/3CUq8HgJBwnrh9wYOeJWIFajy\nbEoIIlc8naJtKl4Qrky7C4IAUpXnVKgxdV+FxVRJ5q8/c+anveRmZjgMK6lUeAWH0T3yKfyCQ+td\n+vF+Qa3V4mowIIoNLzqh8Mdj7+97ef/QlQws54rP2V/fjKCti7Nnz/Lyyy+Tl5dHv379mDBhAmlp\nacybNw8ALy8vEhMTcXd3nDEYPHgwhw4dYseOHfTr189hX1JSEqmpqYBN8I0aNQqAdevWsXLlSiwW\nCwkJCTRv3py1a9eyefNmBEEgMjKSkSPrVz2toKAAFxfbbFe/fv0IDQ0lNDSU4uJiIiMjyczMZOvW\nrfZz7N27N3PmzGH27NmcPXsWq9XKxIkTHTy7mZmZTJo0ifXr1xMVFcVDDz1EWloagiDYy9DWRXFx\nMTqdzv79FBcXZ89TvmTJEubMmUNUVBR9+/YlPT2d+fPnM23aNKZNm4ZKpUKSJBYsWEBGRobdW75p\n0ybWrFmDRqMhODiYOXMcK8OtWrWKL7/8EpVKRdeuXZkyZQp5eXlMnjyZyspKQkJC2LdvHx9++CFT\npkzhs88+A2DixIn87W9/c/B2Outr8eLFHDp0iLKyMhISEggLC7O3b926NRkZGRQVFeHh4cGmTZuI\nioqyVzTbunUrq1evRhRFunTpwuTJk8nOzmby5MnIsoyvr6+9r2pP9oULF5g5cyYmkwmdTseiRYtY\nsGABkZGRXL58mZ07d1JRUcG5c+cYM2YMQ4YMqde9qqBwL3HTYvZOcLHZYUL1gbjrtGRYZLbmqUgv\ncxQp7VwreMGnkDB9ZR29XB+NqEYr6lAJNhkryBa8i38ksOBrXCqzHNqWubamwC+SMrcHrvKk2gQm\ngmDLOSteiRe1uXirFieJIoLWDXTutoVZVW1vNqZTkARK83I489Mezvy0j8qrnuo9/fxp1TOCsG49\nSM/IwD8krI6e7k8EAXTuSliBgiMbT290uv3z05/fFjFrNBpZunQpFouFvn37MmHCBGbNmkViYiIt\nWrQgOTmZFStWEBMT43CcJEkkJSUxZswYHnzwQfv2HTt2kJmZyfr16zGbzURHR9Ojhy3DQ+fOnRk7\ndiw7d+5k4cKFTJw4kS1btrBu3ToEQWD06NH06dOnTltXr17Nli1bEEURDw8P+0zbhQsXSElJwWAw\n2L3Q0dHRREdHc/ToURISEoiNjSU5ORmDwUBiYiL5+fkMHz68zgXDpaWlDBw4kFmzZvHmm2+ya9cu\nBg4c6NBm8+bNHD58GEEQ0Ov1LFiwwL7vr3/9K127diU2NpY9e/bw7LPP8vHHH9O3b18+++wznnnm\nGfbu3Uu7du2IjY3l4MGDFBYW2o/Pz89n8eLFbNy4ETc3NxITE/n000/tAj4tLY2tW7fyySefoFKp\nmDBhAjt27OCHH37gscce44UXXmDPnj3s2bOHkJAQdDodp0+fplGjRmRmZjoI2br6ApsHdubMmU6v\n0V/+8he++eYbhgwZwpEjRxgzZgwXLlygoKCAxYsXs2HDBvR6PVOmTGHPnj3s3r2bQYMG8dxzz7Fl\nyxY+/vhjh/7mz5/P2LFjiYiIYMuWLRw/ftxhf0lJCStXriQjI4Nx48YxZMiQet2rCgr3EveFmO0e\n3JRjxSIfXZL47SoR28G1nIE+RQTfhIiVBAkXUYdKrE4Ob8S3aA8B+d+iNefZ28kIlHp3o7DJYIye\nLbE5RsUrXlJRgPIS1D7edQ1VtbDLzeaJvQWLkSS1iEolIgsWMo8dJm3f91xKP+XQRpQkmnfoTOte\nEfiHhf/hvLDVSCoVrgbvO5atQOH+IbPYedXBzJKGVSOsL+Hh4fZYRZXK9r2Snp5OfHw8YItNDQlx\nHo4UHBzMyJEjiY+Pt39W09PT6dq1K4IgoFar6dixI+nptlSDXbvaClN06tSJBQsWcPLkSbKyshg9\nejQAhYWFnDt3rk5ba4YZ1MRgMNjXS9QkPT2d2bNns2zZMjw9PTl58iSpqakcOXIEALPZTH5+vtNj\nAdq2bQtAYGAgRmPtGbSaYQZX88ADDwDQqFEjKioq6N69OwkJCeTm5rJnzx4mTZqE1Wpl+fLlvPzy\ny7i7uzuIsPPnz9OiRQt7THK3bt3YvXs3HTt2BODMmTN07NgRddV3SNeuXTl16hTp6ek8/fTT9m3V\nPPvss6SkpNC4cWOefPJJB1vr6guo870HW4xsXFwcQUFBDmOdO3eOvLw8e4hAaWkp58+f59SpUzz1\n1FOA7cHmajH722+/0alTJwB7+MLmzZvt+1u3tuWDDgwMpLLS9n+0vveqgsK9wn0hZhec0nKu3FHE\nPuhWxkCfIprp6kjaX7VSXq4WmQhVuehF+z5RFHFRu6EVtSAKqCzF+GV/hf+lbajMJfauZEFFSeCj\nFDV/GrNrU4Aby06gdgGt+w2LWEEQkNQikkpAUolIKpGiyzkc++57Th3Yi7G0xKG9eyNfWvV4mBYP\n9UTv3vB8ufcTGp0OV4P3H1aoK9wcTd2bcq64tqBr6tb0tozn7D4MCQlh/vz5NG7cmNTUVHJycpwc\naWP48OFs376dtLQ0hg4dSlhYGCkpKYwePRqTycShQ4fs4urIkSN07tyZgwcPEh4eTmhoKC1atGDF\nihUIgsDq1atp2bIlX331VYPOQXTyPZWVlcWbb77Ju+++i39VZpHQ0FACAgIYN24cFRUVdpHbkGtT\nX64+VhAEoqKiSEhIoHfv3qjVarZs2UKXLl0YP348mzdvZsWKFfbFyk2bNiU9PZ2ysjJcXFw4cOCA\ng1ALDQ3lf//3fzGbzUiSxI8//sjgwYPJz8/n0KFDtGnThp9//tnefsCAAaxatQovL69ahYTq6uvE\niRNOr201QUFBlJWVsXbtWiZNmsT58+fttgcGBrJq1SrUajUpKSm0adOGM2fOcOjQIVq3bs3Ro0dr\n9RcWFsbRo0fp1asXmzZtcvBUO7um0LB7VUHhXuCmxWw90tTeNNVCVkCmi5eRJ/xKaeIqIwtqrKK6\napq/arW9IDgvtlQDCRG9pEcnaQEBTUU2AVmbaZS9Hcl6xcNrlVwobvoExc2isGh9bvwE1DrQethy\nvjYAUWXzuopqm3it/gK0WiycO/ozaT98T9bJXx2OEUSRZg90pFXPCBq3bP2nSEWlc3XFxdPrbpuh\ncA/zdIunHWJmqxnc4s5kZAFbvOdbb72FxWLLfpKQkFBnW0EQSExMJCoqCrDFrx44cIDnn38ek8nE\ngAEDaNeuHWDLMjNy5Ej7MU2aNKFnz54MGzaMyspKOnToYBeet+IcysvLiY+PR5ZlAgMDmTdvHjNn\nzmT48OGUlJQQHR19TbF2qxkyZAh9+/bliy++AGze2+rYVFEUmTZtGiUltgd9b29vJkyYwMiRIxFF\nkWbNmjF58mR7WESrVq144oknGDZsGFarlS5duvD444/TpUsXpk6dytatW/Hz87N727VaLd26dSMv\nLw8vL8fvoLr6OnHi+mW/IyMj+eKLLwgJCbGLWW9vb0aPHs2IESOwWCw0adKEJ554gjfeeIOYmBi2\nbNlC06a1H86mTp3K//t//49ly5ah0+lYuHAhx44du+b4DblXFRTuBepVNOFaLFiwgKlTp94qe2qR\nmprKM8kX6OZrYkCTSgJdrDfcly1DgR4XlRYBEX1pBoFZX+Cdu9dWsrMKs8ZAcbMnKW76BLLK9Ro9\n1ua3sxmENA+2vZDUoPMA1fVTyQjiVV5XqXZ6q+K8y5z8YTen9u+hvLjIYZ+rwZuWPfrQsnvvegu7\nY8d+oV27B+rV9l7Amb33ctqt+60Iwf1mb0PZ+/tePj/9OZklmTR1a8rgFoNvS7yswp3l0qVLTJ06\nlTVr1ty2MXbu3InBYKBDhw7s3buXDz74gI8++giwCb/+/fvTs2fP2za+goLCtamXq/DgwYOsWbOm\n1vTERx99dFuFbDVxnUrx09+4iAXQoMFV7YKEiHvhcQKyPser8GeHNpX6xhQHD6EkoB9IN1GuV5Rs\nIlbtPM2VIICoklCpBESViKQW65x6s1osZP76Cyf27uL3E8ds5U/t/Qg0bdueVj0jaNKm3R31htxt\nBFHA1cuARvfHSSWmcHvp1aSXIl7/YGzbto0lS5bcds9h06ZNmT59OpIkYbVamTFjBgB/+9vf8PPz\nU4SsgsJdpl5iNjY2lvHjx9O4cePbbY9TbkbISki4qPRoBTVe+T8SmPUFbiWOC6Qq3MMpDv4rZX49\nQLiJVE6iiEXtBm5+V7yqAvb4VlHlGC5wLUoL8jm5bzcn9+2mrLDAYZ+Lpxfh3XvTskcf3AzXWGz2\nB0VSqXDz9kZSKQu9FBT+zPTv35/+/fvf9nHCwsL49NNPa21ftWrVbR9bQUHh+tRLzPr7+9+xal+3\nEr2gw1VS0ejybgKyNqGvcEyvVWLoREnIMxgN7W++UIHGDbRuyJoSVDqVLcuAJCKq6u8ttVqtZKUd\nJ23vLs4fO1IrHrlxq7a07v0IQW3bI0p/zvypap0WNy/vP0UssIKCgoKCgsL1qZeYHTFiBJMnT6ZH\njx72wHe4c+VsG4oKNV4CBOR8i/+FL9GY8u37ZEQKfXtREvJXLB4tbm4gASQXNyRXTySNGkktor0k\noHdrWIhCWVEhp/bv4eS+3ZTk5Trs07m5E969N6169MG9kW8dPfw5UOn0uHs3uttmKCgoKCgoKNxD\n1EvMbtiwAaPRaK8+U829JmYlRDytRoKyt+F3aRsqS5l9n1VQkxfwGKUhT4PLjYVLCKJQtUALVDod\nopt3vRZ3OUO2WrlwOo20vbs4e/RnZKtjKEVgeCta9YygWfsHkVT3RQa124YggIunAY1LwxbjKSgo\nKCgoKPzxqZdKunz5cq1a3fca3sZCQnK+plHOLkT5Su5Zs+RKTsAAyoOjkPQNSK8lgCgJtkVaEqhU\nAoIo2NJr6Q22nLE3QEVJMacO7CXth90UX8522Kd1caXFQ71o1fNhPP1uTSqd+x1BFHAzeKPW6u62\nKQoKCgoKCgr3IPUSsx06dGDHjh1EREQg3WOxmj5lWYRlb8M77wACV2JMKzU+XAocRGlQf/Q69+sW\nObB7XdWgkgRE6aoYWlEEnSdo3BscXyvLMpfOnCJt7/dkHP4Jq8XssN8/pAWtej1M845dlOpVNZBU\nEm7ePspCL4V7kqSkJI4dO0ZOTg4VFRUEBQVhMBh44YUX+OSTT1i0aFGD+ktJSWHJkiVs2rTJXqEq\nJiaGoUOH0r17d6fHxMbGEhkZSURExHX7d9Z28eLFbN68GT8/P8BW7SkmJqbWeB9++CE9evRwKNda\nX3JycvjXv/5FXFzcddumpKRw5syZWhXAxo8fz5IlS0hLS6OoqIhu3bo12I5qjEYjmzZt4tlnn73h\nPhQUFO4t6iVmt2/fXmslpyAI/Prrr3UccZuRZXyLT9Ii+2u8ihyTP5frm3Cx8dNUBEag1+nQU1t4\nCqKAJIFU5XWVVELdVWkEwVa1S+fR4EwHxrJSTv+4j7Qfvqfw0gWHfRqdnrCu3WnV6xEMgXcnS8S9\njEanw8XLC1G8tx6eFO5fSnbvoTBlA5XnM9EENcVzyF9x69P7hvuLjY0Faguw/fv333Cf5eXlJCYm\nkpiYeMN9NJSa5WzT09OZPHlyrZm46hKqN4Kvr2+9hOy1WLJkCQBff/01jRo1uikxm5OTQ3JysiJm\nFRT+QNRLzO7evft221EvBNlCQP4hwrK/xb0sw2FfsVsrLjYejNHvIVy0alxqiFOhKlxAUtUIF6gP\naj24GECsv2dQlmWyM86QtncXv/18EIvJsdyub/MQWvV8mJBO3VBpbiKX7R8UQQC9hyc6V7e7bYrC\nH4iS3XvIqeEprTx7zv76ZgRtXZw9e5aXX36ZvLw8+vXrx4QJE0hLS2PevHkAeHl5kZiYiLu7Y8GP\nwYMHc+jQIXbs2EG/fv0c9iUlJdnXLQwaNIhRo0YBsG7dOlauXInFYiEhIYHmzZuzdu1aNm/ejCAI\nREZGMnLkyHrZXVBQgIuLLYSqX79+hIaGEhoaSnFxMZGRkWRmZrJ161b7Ofbu3Zs5c+Ywe/Zszp49\ni9VqZeLEiQ6e3czMTCZNmsT69euJiorioYceIi0tDUEQWLp0aa1r4IzevXuTkpLCxo0bUavVtGvX\njoqKChYtWoQkSQQFBTFnzhz++9//smHDBqxWK6+//jrp6el8/fXXmM1m3N3dWbx4MR988AGnT59m\nyZIlyLJMo0aNGDZsGOnp6cTFxbF27VoGDRpEcHAwGo2G+Ph4ZsyYQX6+bSHxzJkzadWqVb2up4KC\nwp2hXmK2+qn4asaPH39LjakL0VpJ09wfCLn0LS6VjjWi8w1duNh4MCZDO1y1Eh72YgQgVXlgG5x2\nS6UGnaHOogfOqKwo50zqAY79f1/zY95lx+60WsK6dKdVrwh8mgQ1zJY/EZJKwtXgo4RaKNxyClM2\n1LE95baIWaPRyNKlS7FYLPTt25cJEyYwa9YsEhMTadGiBcnJyaxYsYKYmBiH4yRJIikpiTFjxvDg\ngw/at+/YsYPMzEzWr1+P2WwmOjqaHj16ANC5c2fGjh3Lzp07WbhwIRMnTmTLli2sW7cOQRAYPXo0\nffr0qdPW1atXs2XLFkRRxMPDg7lz5wJw4cIFUlJSMBgMdi90dHQ00dHRHD16lISEBGJjY0lOTsZg\nMJCYmEh+fj7Dhw+3l4e9mtLSUgYOHMisWbN488032bVrFwMHDqzXNfX39+fpp5+mUaNGtG/fngED\nBrBu3Tp8fHx477332LhxIyqVCg8PD5YtW4bVaiU1NZXVq1cjiiIvvfQSR48eZdy4cZw8eZLx48ez\nePFip2OVlZXx2muv0bZtWxYuXEiPHj2Ijo4mIyODadOm8fHHH9fLZgUFhTtDg5fJm0wmvv/+ezp2\n7Hg77HFK319moDUX219bBYk8nz5cbPIUgiEEdxcVOo2ISiXcXL5YUQS9ly0utp5cPn+WtL27OPPT\nj5grjQ77vJsE0bpXBKGdH0KtUxYwXQuNToerl0HJH6twW6g8n+l8e6bz7TdLeHg4mqqZl+p0hunp\n6cTHxwO279GQkBCnxwYHBzNy5Eji4+Pt4U/p6el07doVQRBQq9V07NiR9PR0ALp27QpAp06dWLBg\nASdPniQrK4vRo0cDUFhYyLlz5+q0tWaYQU0MBgMGg6HW9vT0dGbPns2yZcvw9PTk5MmTpKamcuTI\nEQDMZjP5+flOjwVo27YtAIGBgRiNRqdtrkdeXh7Z2dlMnDgRgIqKCnr37k2zZs3s11UURdRqNZMm\nTcLFxYWLFy9iNpuv1a0D1f2cPHmSffv22T3SRUVF1zpMQUHhLlAvMXu1B/bvf/87f/vb326LQc6o\nFrIWUUtu4OPkNo9C9PCnkV6DpgFFCerEHhfrCcL1+zMZjfx26EfS9u7i8vmzDvtESWWLhe35MI2a\nBdcdi6sA2OKX9e4eSliBwm1FE9SUyrO1BZ2madPbMp6zz31ISAjz58+ncePGpKamkpOT4+RIG8OH\nD2f79u2kpaUxdOhQwsLCSElJYfTo0ZhMJg4dOsTTTz8NwJEjR+jcuTMHDx4kPDyc0NBQWrRowYoV\nKxAEgdWrV9OyZUu++uqrBp2Ds0qFWVlZvPnmm7z77rv4+9syroSGhhIQEMC4ceOoqKiwi9yGXJv6\nIggCVqsVg8FAQECAPUxh+/btuLi4cOHCBbvdJ06c4NtvvyU5OZny8nKGDBmCLMuIooi1KhWiVqu1\nvw/Hjjmuv6juJzQ0lCeffJKoqChyc3NJTk6+YfsVFBRuDzeUwLS0tJSsrKzrN7xFmNUe5DWPJC/o\nCQSdBx5aNXr1LVoYpHGxeWPrERebl/U7aT/sIv3gPkwVFQ77vAIa06pXBCZXDzp27nJrbPuDo9Zq\ncfH0+tPn0VW4/XgO+atDzOyV7UPumA1xcXG89dZbWCwWABISEupsKwgCiYmJREVFAbb41QMHDvD8\n889jMpkYMGAA7dq1A+Dw4cOMHDnSfkyTJk3o2bMnw4YNo7Kykg4dOtiF5604h/LycuLj45FlmcDA\nQObNm8fMmTMZPnw4JSUlREdH16tkd118/vnn7N271/567dq19r8feOABFixYQFhYGDNmzGDs2LHI\nsoyrqysLFizgwoUrC22bN2+OXq9nyJAhaDQafH19yc7OplOnTphMJhYuXMjQoUOZOHEiP/74Iw88\n8Kt88wUAACAASURBVIBTe8aNG8eMGTNYv349JSUldyy8TkFBof4I8tU1U53w6KOP2p+mZVmmsLCQ\nl19+mVdfffW2G5iamopL+SUElQ43nQoXtQROMhQ0GJXGli9Wde3pf3NlJRmHU0nb+z3ZGekO+ySV\niuCOXWjVKwK/kDAEQeDYsV9o1875l+K9xt2y9UYXeaWmptKly/3zoKDYe29hy2aQQmVmJpqmTfEc\nMuS2xMsqKCgoKNxZ6uUSW7VqFbt376agoAAADw8PPDw8bqthNXFxccNNI92aKXtJsi3u0ly7mlTB\npYuk7d3F6YM/UFlW5rDPw9efVr0epkW3nsr0eANRadS4ehmU3LEKdxy3Pr0V8aqgoKDwB6ReYnbR\nokVkZWURFmbzPv7+++/AnStn6669BdPQggB6T9B41LlIzGI2cfbIz6T9sIuLp0867BMliWbtH6R1\nr0cIaNFSiYW9AXRubujdPZRrp6CgoKCgoHDLqJdKTEtLa/DigXuGehQ9KLqcQ9oPuzi1fy/G0hKH\nfW7ejWjV82HCu/dC737nvNF/JARRwNXLgEZX/1RnCgoKCgoKCgr1oV5iNiwsjOzsbHvJw/uGayzu\nslosnDt2mLQ9u8g66VjJTBBFgtp1oHWvCBq3bKOki7oJlLACBQUFBQUFhdtJvcRsRUUFAwYMoGXL\nlvbciQAfffTRbTPsplDrQOcFKm2tXSV5uaTt+55T+/ZQXuyYL9DVy0DLng8T/lAvXL2c50hUqB+i\nKKL38EDrcu3YZAUFBQUFBQWFm6FeYvaVV1653XbcGlRqm4hVuzhstlosZP76C2l7d5F54hjUTOAg\nCDRt8wCtej5M07btbyqljIINrYsLeg8PRPEWpU9TUFBQUFBQUKiDeonZhx566HbbcXOIUlXlLsfM\nAqUF+Zzav4e0fbspK8h32Kf38KRl99607NEHN2+fO2ntHxaVWo2LpxeqGt57BYU/KklJSRw7doyc\nnBwqKioICgrCYDDwwgsv8Mknn7DISV7ba5GSksKSJUvYtGkTbm6277KYmBiGDh1K9+7dnR4TGxtL\nZGQkERER1+3fWdvFixezefNmewiZyWQiJiamzvFuJfUd+8MPP6RHjx506NDhttukoKBwf3J/Z6sX\nBNvCLq2nPUOBbLXye9px0n74nvPHjiBXVXqppnGrtrTuFUFQuw6IkuI5vBUIAujc3NG5uSuZChTu\nWc4dz+XXvRcoyinHw1dPm16BNGt74w+ysbGxgE2EnjlzhsmTJwOwf//+G+6zvLycxMREEhMTb7iP\nhlKznG16ejqTJ09m48aN98zYY8eOvSO2KCgo3L/cn2LWSYaC8uIimxf2h92U5F12aK5zcyf8oV60\n7PkwHo1874bFf1gklQpXL4PijVW4pzl3PJd9n5+xvy7MLre/vhlBWxdnz57l5ZdfJi8vj379+jFh\nwgTS0tKYN28eAF5eXiQmJuLu7u5w3ODBgzl06BA7duygX79+DvuSkpJITU0FYNCgQYwaNQqAdevW\nsXLlSiwWCwkJCTRv3py1a9eyefNmBEEgMjKSkSNH1svugoICXFxsYVpbt25l9erViKJIly5dmDx5\nMhcvXiQuLg6j0UhBQQF///vfefzxx9mxYwdLliwBoG3btsTHx3Pw4EEWLVqEJEkEBQUxZ84c1Oq6\nF4LWHLtfv36EhoYSGhpKcXExkZGRZGZmsnXrVvv17d27N3PmzGH27NmcPXsWq9XKxIkT74hXWUFB\n4d7i/hOzNTIUyLLMhVMnSNuzi7NHD9XywgaEtaRV7wiat39QWU1/G1DrtLh5eSvZHhTueX7de8Hp\n9hN7L9wWMWs0Glm6dCkWi4W+ffsyYcIEZs2aRWJiIi1atCA5OZkVK1YQExPjcJwkSSQlJTFmzBge\nfPBB+/YdO3aQmZnJ+vXrMZvNREdH06NHDwA6d+7M2LFj2blzJwsXLmTixIls2bKFdevWIQgCo0eP\npk+fPnXaunr1arZs2YIoinh4eDB37lwKCgpYvHgxGzZsQK/XM2XKFPbs2YMgCLz44ot0796dn376\nicWLF9O3b1/mzp1LcnIyPj4+LFmyhAsXLjBr1izWrVuHj48P7733Hhs3buS555677tgAFy5cICUl\nBYPBYPeAR0dHEx0dzdGjR0lISCA2Npbk5GQMBgOJiYnk5+czfPhwvvzyy1vyHiooKNw/3D9itkaG\ngoqSEk7/+B1pP+yiKCfboZnGxYXwbj1p2TMCL/+Au2TsHx+dqysunl532wwFhXpRlFPudHvh5Yrb\nMl54eLg984tKZfuaTU9PJz4+HrDFh4aEhDg9Njg4mJEjRxIfH28P20lPT6dr164IgoBaraZjx46k\np9vKa3ft2hWATp06sWDBAk6ePElWVhajR4+2nWNhIefOnavT1ppT/dUcOXKEvLw8+xR/aWkp58+f\np0uXLixbtozPPvsMQRAwm83k5+fj4eGBj4/toWD8+PHk5uaSnZ3NxIkTAVtGnN69a1dfczY2gMFg\nwGConVEmPT2d2bNns2zZMjw9PTl58iSpqakcOXIEwG6Ps2MVFBT+uNwfYtbNF1ml59KZ06T9sIuM\nn3/CajE7NPELCaNVzwiCO3ZWprxvMy6enkoZX4X7Cg9fPYXZtQWtZyPdbRnPWex4SEgI8+fPp3Hj\nxqSmppKTk1Pn8cOHD2f79u2kpaUxdOhQwsLCSElJYfTo0ZhMJg4dOsTTTz8N2IRn586dOXjwIOHh\n4YSGhtKiRQtWrFiBIAisXr2ali1bNqjwTdOmTQkMDGTVqlWo1WpSUlJo06YN77//Ps8++yyPPPII\nGzZsYOPGjfj4+FBUVERBQQFeXl7MmzePJ598koCAAJYuXYq7uzvbt2+3hxDUB2dZZbKysnjzzTd5\n99138ff3ByA0NJSAgADGjRtHRUWFXeQqKCj8ubgvxOzxH/aRtncXBZccpwrVOh0tuvagZc8IvBs3\nuUvW/XkQBHA1eCuVvBTuO9r0CnSIma2mda/AO2ZDXFwcb731FhaLBYCEhIQ62wqCQGJiIlFRUYAt\nhvTAgQM8//zzmEwmBgwYQLt27QA4fPgwI0eOtB/TpEkTevbsybBhw6isrKRDhw528VdfvL29GT16\nNCNGjMBisdCkSROeeOIJBgwYQEJCAv/+978JDAwkPz8fURSZPXs2r7zyCqIo0rZtW9q3b8+MGTMY\nO3Yssizj6urKggULbvDK2YiLi6O8vJz4+HhkWSYwMJB58+Yxc+ZMhg8fTklJCdHR0Up6RQWFPyGC\nLNdMunrvkZqayncLZjtsa9QsmFY9HyakUzfU2tqFEe4mx479Qrt2D9xtM+pFQ2wVRAE3bx/Umrt3\nvVNTU+nSpctdG7+hKPbeW5w7nsuJvRcovFyBZyMdrW8ym4GCgoKCwr3BfeGZBVBptIR2eYhWPSNo\nFNTsbpvzp0KUJNy8fVBdYyWygsK9TrO2Pop4VVBQUPgDcl+I2Z7PRBPa5SFlevsuIKlUuPs0UnLy\nKigoKCgoKNyT3BditnXvR+62CX9KVBoNbt7eSllaBQUFBQUFhXuW+0LMKtx5NDodrgZvpaKXgoKC\ngoKCwj2NImYVaqHkkFVQUFBQUFC4X1DErIIdQQC9h5JDVkFBQUFBQeH+QUnIpwCApJJw9/FVhKyC\nQj1JSkpixIgRDBgwgL59+zJixAhef/119u/fX6tMbX2wWq28/fbbvPjii7z00kuMGzeO8+fP35SN\n48ePv6njnREbG0tUVBQjRoxg+PDhDBo0iA0bNgDw4YcfcuTIEVJSUnjnnXeu29eNXquaLF68mI8/\n/rhe9o4YMYLo6GhOnTpVq11CQgJZWVk3ZMOvv/7KkiVL6m1v//797faMGDGCZcuW3dC4t4r6nnte\nXh4TJkzgpZde4m9/+xszZ86kosJ5Fb2cnBzi4uJusaX1Z9euXXz66af1ahsbG0vXrl2prKy0bzt2\n7BitWrVi//79t8vEm2LRokUMGTLEqX2zZ89m8ODBDtseffRRjEYj58+f56mnnuKtt95q8JjvvPMO\nKSkpDttSUlJ49NFHKSkpsW+LiYm55nWLjY1l165d9Rqzvm0Vz6wCGr0eV08vBCXZuMIfmIzDP/HL\njm8ozL6Ip18AD/T7C8EdO99wf7GxsYDty/zMmTNMnjwZ4Ib/+X3//fdkZ2fzv//7vwB8++23JCYm\n3pTQqa/AaihTpkwhIiICgIKCAgYNGsSQIUPs5W9Pnz59W8a9UWrau3PnTt5///1a12bGjBk33H+b\nNm1o06ZNvdvXVcb3blHfc1+xYgW9evWy256QkMAnn3xiL51cE19f37sqZqvf7/ri6+vLrl27ePzx\nxwH473//S1BQ0O0w7ZawZcsWNm7ciJubowOqvLycn376iZYtW7J//366d+/usP+nn36iZ8+e9u+v\nW0F5eTmJiYkkJibesj4biiJm/9QIuHp5oXVxvduGKCjcVjIO/8TuTz6yvy64dMH++mYEbV2cPXuW\nl19+mby8PPr168eECRNIS0tj3rx5AHh5eZGYmIi7u7v9mICAAH755Re2bNlCjx49eOyxx4iIiODE\niRMkJiby0Uc2e1955RXeeOMNSkpKWLRoEZIkERQUxJw5c/jvf//Lhg0bsFqtvP7660yePJk9e/Zw\n5MgR4uPjcXV1xcfHB61WS1JSEmvXrmXz5s0IgkBkZCQjR47k66+/Zvny5ahUKpo0acKCBQuuWVXr\n8uXLaDQaBEEgNjaWyMhI+768vDxee+013njjDQICApg2bRoqlQpJkuwVwc6ePctLL71Efn4+w4YN\n49lnn+XAgQN2sVlRUcH8+fNRq9W8+eabBAQEcP78edq3b098fLzDNZ80aRIJCQm0bt26TnsLCwtx\ncXEhMzOTV199FS8vLyIiIti1axdxcXF8+eWX/PjjjwCcPHmSESNGMGrUKGbMmEF+fj4AM2fOpFWr\nVvY+9+/fzyeffMKiRYv4n//5Hzp37sxvv/2Gj48PixcvRqpnasPk5GQ+/vhjrFYrjz32GBMmTGDT\npk2sWbMGjUZDcHCw/X3euXMnFRUVnDt3jjFjxjBkyBCOHz/O3LlzkSQJrVbL3LlzsVqtxMTEEBgY\nSGZmJgMHDuTUqVMcP36cvn37MmnSJEaMGEFcXBxeXl7ExsZSXFyMLMvMnz+f4OBgu31NmjRh27Zt\nNG/enM6dO/PWW2/ZFwkvXbqUb7/9FovFwrBhw+jTpw+TJk1i/fr1HDhwwOm96uwcDh8+TEJCArIs\n4+/vzzvvvMPZs2drfXZMJhMTJ05ElmVMJhPx8fEO70n1Q+bQoUOved9UM3DgQDZv3szjjz+O1Wrl\n2LFjtG/fHgCTycTs2bM5e/YsVquViRMn0r17d6KioujatSsnT54kJCQEHx8fDh48iEaj4cMPP6S8\nvJwpU6ZQUlKCxWLhjTfeoGfPngwaNIjg4GA0Gg1ZWVnMnTuX8PBwdu7cyXfffcfs2VcKRTl7T1NS\nUrh48SKvvPIKK1euRKe7UpZ769at9OzZk4iICP7zn/84iNnc3FyWLVtGRUUFzZo1Y+vWrRgMBoqK\nivjwww+Ji4urdY7btm1j2bJleHt7YzKZCA0NrXXtBg8ezKFDh9ixYwf9+vVz2JeUlERqaioAgwYN\nYtSoUQCsW7eOlStXYrFYSEhIoHnz5k6/j+qLImb/pEgqFToPT0XIKvwp+GXHN863f/ftbRGzRqOR\npUuXYrFY6Nu3LxMmTGDWrFkkJibSokULkpOTWbFihcMUe6tWrZg7dy7r169n3rx5BAQEEBsby0MP\nPYTRaOT3339HrVaTn59PmzZtGDBgAOvWrcPHx4f33nuPjRs3olKp8PDwqOXNnT17NgsWLCA8PJxF\nixZx6dIlTp8+zZYtW1i3bh2CIDB69Gj69OnD5s2bGT16NAMHDuTzzz+npKQEDw8Ph/4WLlzIBx98\nQFZWFmFhYbz//vu1rkFubi6vvvoq06dPp2PHjvznP/+hXbt2xMbGcvDgQQoLCwGbUFi2bBlWq5Wn\nnnqKxx57jFOnTrFw4UL8/f354IMP+Oqrr4iKiiIjI4OVK1ei1+t5/PHHycnJAeC3335jw4YNvPvu\nuw7iq6a9y5cvRxRF/Pz8mDJlCpWVleTk5LBhwwY0Go19KvP1118H4LvvvmPt2rWMHTuW999/nx49\nehAdHU1GRgbTpk2rM7Th/PnzrFmzhsDAQIYOHcrRo0d58MEHHdqsXr2aLVu22F+PGzeO1q1bs3z5\ncjZt2oRGoyEpKYnff/+dxYsX2z1wiYmJfPrpp7i4uFBSUsLKlSvJyMhg3LhxDBkyhJkzZ5KQkECb\nNm349ttvSUpKYurUqZw/f55Vq1ZRUVHBY489xq5du9Dr9fTr149JkybZ7Vi2bBmPPvoow4YN44cf\nfuDIkSMO13PYsGFotVpWrlzJG2+8QZcuXZg9ezb5+fns2rWL5ORkKisreffdd+nduzcAsiwza9Ys\np/eqs3OYNWsWixYtIiwsjP/85z+kp6cTHx9f67PTqVMn3N3deffddzl9+rTDNPfVOLtvfH19Hdp0\n6NCBb775hrKyMn7++We6d+9Oeno6YHvIMBgMJCYmkp+fz/Dhw/nyyy8pLS1l0KBBdOnShQEDBjBt\n2jRiYmIYPnw4p0+fZtOmTfTq1YtRo0Zx6dIlhg0bxrfffktZWRmvvfYabdu2ZcOGDWzcuJGpU6ey\nYcMGXnnlFQe7nL2n//znP0lJSWHVqlVor6qCmpyczJw5cwgLCyMuLo5Lly7Zy1n7+PgwduxYzpw5\nQ3R0NFu3biUqKoq//OUvrFu3zuk5Lly4kOTkZLy8vOwzL1cjSRJJSUmMGTPG4V7fsWMHmZmZrF+/\nHrPZTHR0ND169ACgc+fOjB07lp07d7Jw4UImTpzo9Puovihi9k+I1sUFF08vxPOZd9sUBYU7QmH2\nxQZtv1nCw8PRaDQAqFS2r9nqf8pgE3AhISEOx5w4cYKQkBD+8Y9/IMsye/bsYeLEiezZs4dnnnmG\nzz//HI1Gw5AhQ8jLyyM7O5uJEycCNu9l7969adasWa1+AbKzswkPDwegS5cubNmyhZMnT5KVlWWf\nIi4sLOTcuXNMmzaNf//733z88ceEhobap11rUj1tv3PnTt555x2aNatdlfH777/H19cXq9UKwDPP\nPMPy5ct5+eWXcXd3twv5Bx980H6twsLCyMzMxN/fn4SEBFxcXLh06RKdO9seOJo1a2afVvX19cVo\nNAK2+Mhqj68zaoYZVJOZmUnTpk3tY9fk4MGDfPDBB6xYsQKNRsPJkyfZt28fW7duBaCoqMjpOAAG\ng4HAwEAAAgMD7TbWxFmYwc8//0x4eLjdyzZ9+nSOHDlCixYt7OfcrVs3du/eTceOHe3e58DAQHus\nZ3Z2tj3coVu3brz77rsABAUF4e7ujkajoVGjRnh52bLVXJ168bfffuOZZ54BoGfPnrXs3r9/P4MH\nD+aZZ56hsrKS5cuXk5iYyIABA+jQoQOSJKHX65k5cyaZmbb/L9e6V52dQ25uLmFhYQC88MILgPPP\nTkREBBkZGbz22muoVCpeffXVOt+Tuu6bq3n00UfZvn07e/fu5dVXX2XRokWAzUOfmprKkSNHADCb\nzXYvfbt27QDw8PCw2+3h4YHRaCQ9PZ2oqCgA/P39cXNzIy8vD8D+OY2MjOTpp5/mpZde4uLFi/b+\nqqnrPXVGeno6p06dIikpCbC9vx9//LH92juj2g5n53j58mXc3NwwGAwAdOrUqc5+goODGTlyJPHx\n8fb7Kj09na5duyIIAmq1mo4dO9ofELp27Wrvc8GCBXV+H9UXJUjyT4QgCrgZDLh6GZT8sQp/Kjz9\nAhq0/WZx9vkKCQlh/vz5rF27lilTpvDII47FYH744Qf+8Y9/YLFYEASB8PBw9Hq9fcrtu+++45tv\nvmHQoEEYDAYCAgJYunQpa9euZdy4cfbpRGchAQEBAfY41sOHDwMQGhpKixYt+Oijj1i7di1Dhgyh\nZcuWfPrpp0yYMIH/+7//A+Cbb5x7tQEeeeQRHnvsMWbNmlVr3+DBg1m4cCEzZ86krKyM7du306VL\nF9asWcOAAQNYsWIFYJtGNZvNlJWVkZ6eTrNmzZg5cyaJiYkkJSXh5+eHLMt1XleAUaNGMX36dKZO\nnYrFYqnT3qtxdq2OHz9OQkICixcvtgug0NBQRo8ezdq1a3nvvffsAsUZN/rd2qxZM86cOWMXda+/\n/jo+Pj6kp6dTVlYGwIEDB+ziw9k4fn5+nDhxAoAff/zR7lWtr01hYWEcPXrUfvzChQsd9q9Zs8a+\nAEij0dgf2kJDQzl+/DhWqxWTycSLL75oP49r3at1nUNGRgZgW1D4zTffOP3s7N+/Hz8/P1atWsWr\nr77KP/7xjzrPq77nHxUVxeeff05OTo7DA1poaCgDBw5k7dq1LF++nAEDBuDp6XndvsPCwjh48CAA\nly5doqioyP4gUX3v6fV6unfvTkJCAk899ZTT6+HsPXVGcnIyMTExrFy5kpUrV7JmzRo2bNjgsLDt\naqrtd3aOHh4eFBcX2wV49b1RF8OHD6egoIB9+/bZz786xMBkMnHo0CGaN28OYBfNBw8eJDw8vM7v\no/qieGb/JKg0Gly9DEgq5S1X+PPxQL+/OMTM2rf3re11vF3ExcXx1ltv2cVWQkKCw/4RI0Ywf/58\nBg8ejJubG6Io2uNKXV1dad26NWaz2S6wZsyYwdixY5FlGVdXVxYsWMCFCxecjj179mymT5+Oi4sL\narUaf39/WrduTc+ePRk2bBiVlZV06NABf39/OnTowIsvvoiXlxeurq707dv3muf12muvMWTIEL77\n7rta+1q0aMGTTz7J22+/zZgxY5gyZQqLFy9GFEWmTZtGSUkJWq2WMWPGUFRUxIQJE/Dy8uKpp57i\nueeew8PDg0aNGpGdnX3d69urVy+++uorli9fzrhx467bvi6mTJmCJEn26ff27dszbtw4ZsyYwfr1\n6ykpKbnpLBFXhxmEhIQwZ84cxowZw/DhwxEEgX79+tGkSRMmTJjAyJEjEUWRZs2aMXnyZL788kun\n/c6bN4+5c+ciyzKSJDV4Qc64ceOYPn06mzZtAqh1fHx8PPHx8axbtw6dTofBYCAuLg5/f38efvhh\nhg0bhtVqZdiwYXaPtyiKDbpX4+PjmT59OqIo4uvry+jRowkMDKz12fHy8iImJoY1a9YgiiJ///vf\nG3SuzggNDSU/P5+//vWvDtuHDh3KzJkzGT58OCUlJURHR18zjryaV155henTp7Nt2zYqKiqYM2eO\nfaamJs899xzDhg1zumCuvu9pZWUlX375JV988YV9W+PGjWndujXbtm27rq3OzlGj0fD222/z0ksv\n4enp6dT2mgiCQGJiov1hr1+/fhw4cIDnn38ek8nEgAED7J7nw4cPM3LkSPsxTZo0cfp9VF8EufqR\n9x7l/2/v7mOkKg89jv/OmffXnZlVcOWKAtUCNd66UIlaSr0XK5paCru8FppKG00xpaYNwaTRkkix\njVFuijVibO2LbSloow1qLJqWF1HRsUJAChURERYQVlj2dXbnPPePYQcWdmERmDNn+X7+2d3hzHN+\n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\nNcYYs2TJEvPUU0+5nrXTvffea8aPH29WrVpljDElz9rbvDt37jS1tbWmpaXF5PN5s2jRIpPL5co2\n75YtW8ykSZOM4zhmx44dZsKECcaY0n++zzzzjFmwYIExxpj6+nozZsyYbs+fcjrXAAA4E65dmR04\ncKAWL15c/Hnfvn2qrq6WJFVXVyubzSqbzerLX/6yLMvSpZdeqnw+r/r6em3evFnXXXedJOkrX/mK\n1q1bVxZ5r732Wi1cuLC4TT6fl9/vVzab1ejRo0uWtzdZJenXv/61rr32Wg0dOrS4bamz9jbvunXr\ndPXVV2vevHmaMWOGqqurFQgEyjZvv379FA6Hlcvl1NjYKL/fL6n0n++4ceP0wx/+sPizz+fr9vwp\np3MNAIAz4VqZveWWW4r/wEvSZZddpvXr10uS/vGPf6ilpUWNjY2Kx+PFbWKxmI4cOSJjjCzL6vJa\nOeQNhUKqqKhQe3u77r33Xk2ZMkWxWEyNjY1KJBIly9ubrK+//rp27typyZMnd3lvqbP2Nu+nn36q\nt99+Wz/72c+0ePFiLViwQA0NDWWb1+/3y7Zt3Xrrrbrjjjs0a9YsSaX/fGOxmOLxuBobGzVnzhzd\nc8893Z4/5XSuAQBwJsrmAbCFCxdqyZIluvPOO1VZWal0Oq14PK6mpqbiNk1NTUokErJtu8tryWSy\nLPJK0uHDh/W9731PQ4YM0V133SVJXY7DjbzdZX3mmWe0bds2zZw5U2vWrNFDDz2kLVu2uJ61p7yp\nVErXXXed4vG4KisrNWTIEH344Ydlm/e5557TRRddpJUrV+rVV1/Vo48+qn379rmSt66uTt/+9rc1\nfvx43X777d2eP+V8rgEAcCplU2ZXrVqlhQsX6oknntChQ4d04403qrq6WmvXrpXjONqzZ48cx1Em\nk9Hw4cP15ptvSpJWr16tkSNHlkXe1tZWfec731FNTY3uvvvu4rbV1dVatWpVMW+p15jvLuvDDz+s\npUuX6g9/+INGjx6tuXPnatiwYa5n7SlvdXW11q9fr7a2NjU3N2v79u0aOHBg2eZNJpOKRqPy+XyK\nxWIKBoNqamoqed4DBw5o1qxZmjt3rmprayWp2/OnnM81AABOxX/6TUrj8ssv15133qlIJKJRo0Zp\nzJgxkqSRI0dqypQpchxH999/vyRp3rx5uu+++/TII49o8ODBuuWWW8oi729/+1vt2rVLy5cv1/Ll\nyyUVrtp9//vf17x587Rs2TKl02k9/PDDrmftidtZpZ7z1tTUaNq0aTLGaPbs2UqlUmWbN5/P6513\n3tHUqVOVz+d1++23a/DgwSXP+/jjj6uhoUGPPfaYHnvsMUnST37yEy1YsKDL+ePz+cr2XAMA4FQs\nY4xxOwQAAADwWZTNbQYAAADAmaLMAgAAwLMoswAAAPAsyiwAAAA8izILAAAAz6LMAgAAwLMoswAA\nAPAsyixcMXfuXC1btqz488yZM7VhwwbdcccdmjBhgqZNm6b33ntPkorL7tbU1Oimm27Sn//8Z0nS\n4sWL9d3vfle33Xab/vSnP7lyHAAAwF1lswIYLiw1NTVavHixJk+erN27d6u+vl4PPvig7r//fg0f\nPlzvv/++7r77br388stavny5Zs+ereuvv167du3SN77xDU2bNk2SlMvl9OKLL7p8NAAAwC2sAAZX\nGGP0ta99TU899ZSef/55GWP0+OOPa8iQIcVt6uvr9be//U3JZFJr1qzR1q1btW3bNq1YsUJbt27V\n4sWL1draqrlz57p4JAAAwE1cmYUrLMvSN7/5Tb3wwgt66aWXtGTJEv3mN7/R888/X9xm7969SqVS\nmjNnjpLJpG666SbddtttWrFiRXGbcDjsRnwAAFAmuGcWrpk4caKWLl2qqqoqDRgwQFdccUWxzL72\n2mv61re+Vfx+zpw5Gjt2rFavXi1JyufzruUGAADlgyuzcE1VVZWqqqo0YcIESdJDDz2k+fPn68kn\nn1QgENCiRYtkWZZ+8IMfaPr06QqFQho6dKgGDBigjz/+2OX0AACgHHDPLFxhjNH+/fs1c+ZMrVix\nQsFg0O1IAADAg7jNAK54+eWXNX78eP3oRz+iyAIAgM+MK7MAAADwLK7MAgAAwLMoswAAAPAsyiwA\nAAA8izILAAAAz6LMAgAAwLMoswAAAPCs/wekIKLr3BlHvAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1b059cf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lmplot(x='year', y='num_recipients', hue='title', data=df_awards_past)#, scatter_kws=dict(alpha=.1))\n",
    "plt.xlim(1900, 2018);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Did anyone recive the Nobel Prize more than once?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here's where it bites us that our original DataFrame isn't \"tidy\". Let's make a tidy one."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 923 entries, 0 to 922\n",
      "Data columns (total 2 columns):\n",
      "recipient    923 non-null object\n",
      "year         923 non-null int64\n",
      "dtypes: int64(1), object(1)\n",
      "memory usage: 14.5+ KB\n"
     ]
    }
   ],
   "source": [
    "tidy_awards = []\n",
    "for idx, row in df_awards_past.iterrows():\n",
    "    for recipient in row['recipients']:\n",
    "        tidy_awards.append(dict(\n",
    "            recipient=recipient,\n",
    "            year=row['year']))\n",
    "tidy_awards_df = pd.DataFrame(tidy_awards)\n",
    "tidy_awards_df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can look at each recipient individually."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Comité international de la Croix Rouge (International Committee of the Red Cross)     3\n",
       "Marie Curie, née Sklodowska                                                           2\n",
       "Linus Carl Pauling                                                                    2\n",
       "Office of the United Nations High Commissioner for Refugees (UNHCR)                   2\n",
       "Frederick Sanger                                                                      2\n",
       "John Bardeen                                                                          2\n",
       "Erik Axel Karlfeldt                                                                   1\n",
       "Lech Walesa                                                                           1\n",
       "Luis F. Leloir                                                                        1\n",
       "Franco Modigliani                                                                     1\n",
       "Georg Wittig                                                                          1\n",
       "Nicolaas Bloembergen                                                                  1\n",
       "Henry A. Kissinger                                                                    1\n",
       "Philip Showalter Hench                                                                1\n",
       "Heinrich Rohrer                                                                       1\n",
       "Walter Kohn                                                                           1\n",
       "Robert H. Grubbs                                                                      1\n",
       "Kofi Annan                                                                            1\n",
       "Frans Eemil Sillanpää                                                                 1\n",
       "John O’Keefe                                                                          1\n",
       "Oliver E. Williamson                                                                  1\n",
       "Yuan T. Lee                                                                           1\n",
       "Donald Arthur Glaser                                                                  1\n",
       "Christopher A. Sims                                                                   1\n",
       "Ivan Alekseyevich Bunin                                                               1\n",
       "Paul Johann Ludwig Heyse                                                              1\n",
       "Mikhail Sergeyevich Gorbachev                                                         1\n",
       "Edward Calvin Kendall                                                                 1\n",
       "Owen Chamberlain                                                                      1\n",
       "David Baltimore                                                                       1\n",
       "                                                                                     ..\n",
       "Anatole France                                                                        1\n",
       "Ronald H. Coase                                                                       1\n",
       "Lars Peter Hansen                                                                     1\n",
       "Frederik Willem de Klerk                                                              1\n",
       "Ben Roy Mottelson                                                                     1\n",
       "Louis Eugène Félix Néel                                                               1\n",
       "Grameen Bank                                                                          1\n",
       "Ellen Johnson Sirleaf                                                                 1\n",
       "Renato Dulbecco                                                                       1\n",
       "Werner Karl Heisenberg                                                                1\n",
       "Lord (John) Boyd Orr of Brechin                                                       1\n",
       "Christian Matthias Theodor Mommsen                                                    1\n",
       "Sir Cyril Norman Hinshelwood                                                          1\n",
       "Otto Stern                                                                            1\n",
       "Henryk Sienkiewicz                                                                    1\n",
       "Edwin Mattison McMillan                                                               1\n",
       "Jack Steinberger                                                                      1\n",
       "Desmond Mpilo Tutu                                                                    1\n",
       "Finn E. Kydland                                                                       1\n",
       "Gustav Stresemann                                                                     1\n",
       "Aaron Ciechanover                                                                     1\n",
       "Richard R. Ernst                                                                      1\n",
       "Max Theiler                                                                           1\n",
       "Richard Stone                                                                         1\n",
       "Ivan Petrovich Pavlov                                                                 1\n",
       "Daniel Bovet                                                                          1\n",
       "John Hume                                                                             1\n",
       "Gerardus ‘t Hooft                                                                     1\n",
       "Arvid Carlsson                                                                        1\n",
       "Peter Grünberg                                                                        1\n",
       "Name: recipient, Length: 916, dtype: int64"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tidy_awards_df.recipient.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Other structured data formats: JSON and CSV"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### CSV\n",
    "CSV is a lowest-common-denominator format for tabular data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "motivation,num_recipients,recipients,title,year\n",
      "“for decisive contributions to the LIGO detector and the observation of gravitational waves”,3,\"['Rainer Weiss', 'Barry C. Barish', 'Kip S. Thorne']\",The Nobel Prize in Physics,2017\n",
      "“for developing cryo-electron microscopy for the high-resolution structure determination of biomolecules in solution”,3,\"['Jacques Dubochet', 'Joachim Frank', 'Richard Henderson']\",The Nobel Prize in Chemistry,2017\n",
      "“for their discoveries of molecular mechanisms controlling the circadian rhythm”,3,\"['Jeffrey C. Hall', 'Michael Rosbash', 'Michael W. Young']\",The Nobel Prize in Physiology or Medicine,2017\n",
      "\"“who, in novels of great emotional force, has uncovered the abyss beneath our illusory sense of connection with the world”\",1,['Kazuo Ishiguro'],The Nobel Prize in Literature,2017\n",
      "“for its work to draw attention to the catastrophic humanitarian consequences of any use of nuclear weapons and for its ground-breaking efforts to achieve a treaty-based prohibition o\n"
     ]
    }
   ],
   "source": [
    "df_awards_past.to_csv('awards.csv', index=False)\n",
    "with open('awards.csv', 'r') as f:\n",
    "    print(f.read()[:1000])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It loses some info, though: the recipients list became a plain string, and the reader needs to guess whether each column is numeric or not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"['John O’Keefe', 'May-Britt Moser', 'Edvard I. Moser']\""
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_csv('awards.csv').recipients.iloc[20]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### JSON"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "JSON preserves structured data, but fewer data-science tools speak it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{\"motivation\":\"\\u201cfor decisive contributions to the LIGO detector and the observation of gravitational waves\\u201d\",\"num_recipients\":3,\"recipients\":[\"Rainer Weiss\",\"Barry C. Barish\",\"Kip S. Thorne\"],\"title\":\"The Nobel Prize in Physics\",\"year\":2017},{\"motivation\":\"\\u201cfor developing cryo-electron microscopy for the high-resolution structure determination of biomolecules in solution\\u201d\",\"num_recipients\":3,\"recipients\":[\"Jacques Dubochet\",\"Joachim Frank\",\"Richard Henderson\"],\"title\":\"The Nobel Prize in Chemistry\",\"year\":2017},{\"motivation\":\"\\u201cfor their discoveries of molecular mechanisms controlling the circadian rhythm\\u201d\",\"num_recipients\":3,\"recipients\":[\"Jeffrey C. Hall\",\"Michael Rosbash\",\"Michael W. Young\"],\"title\":\"The Nobel Prize in Physiology or Medicine\",\"year\":2017},{\"motivation\":\"\\u201cwho, in novels of great emotional force, has uncovered the abyss beneath our illusory sense of connection with the world\\u201d\",\"num_recipients\":1,\"recipients\":[\"Kazuo Ishiguro\"],\"\n"
     ]
    }
   ],
   "source": [
    "df_awards_past.to_json('awards.json', orient='records')\n",
    "\n",
    "with open('awards.json', 'r') as f:\n",
    "    print(f.read()[:1000])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lists and other basic data types are preserved. (Custom data types aren't preserved, but you'll get an error when saving.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['John O’Keefe', 'May-Britt Moser', 'Edvard I. Moser']"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_json('awards.json').recipients.iloc[20]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (Bonus: Pickle)\n",
    "For temporary data storage in a single version of Python, `pickle`s will preserve your data even more faithfully, even many custom data types. But don't count on it for exchanging data or long-term storage. (In fact, don't try to load untrusted `pickle`s -- they can run arbitrary code!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "to_pickle() got an unexpected keyword argument 'protocol'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-98-f2c645b2359e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf_awards_past\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_pickle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'awards.pkl'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprotocol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'awards.pkl'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'latin1'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m200\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: to_pickle() got an unexpected keyword argument 'protocol'"
     ]
    }
   ],
   "source": [
    "df_awards_past.to_pickle('awards.pkl', protocol=0)\n",
    "with open('awards.pkl', 'r', encoding='latin1') as f:\n",
    "    print(f.read()[:200])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yup, lots of internal Python and Pandas stuff..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.read_pickle('awards.pkl').recipients.iloc[20]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Formatted data output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's make a textual table of Physics laureates by year, earliest first:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for idx, row in df_awards_past.sort_values('year').iterrows():\n",
    "    if 'Physics' in row['title']:\n",
    "        print('{}: {}'.format(\n",
    "            row['year'],\n",
    "            ', '.join(row['recipients'])))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parsing JSON to get the Wayback Machine URL"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We could go to http://archive.org, search for our URL, and get the URL for the archived version there. But since you'll often need to talk with APIs, let's take this opportunity to use the Wayback Machine's [API](https://archive.org/help/wayback_api.php). This will also give us a chance to practice working with JSON."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"https://www.nobelprize.org/prizes/lists/all-nobel-prizes/\"\n",
    "# All 3 of these do the same thing. The third is my (KCA's) favorite new feature of Python 3.6.\n",
    "wayback_query_url = 'http://archive.org/wayback/available?url={}'.format(url)\n",
    "wayback_query_url = 'http://archive.org/wayback/available?url={url}'.format(url=url)\n",
    "wayback_query_url = f'http://archive.org/wayback/available?url={url}'\n",
    "r = requests.get(wayback_query_url)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We got some kind of response... what is it?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "r.text"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yay, [JSON](https://en.wikipedia.org/wiki/JSON)! It's usually pretty easy to work with JSON, once we parse it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "json.loads(r.text)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Loading responses as JSON is so common that `requests` has a convenience method for it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "response_json = r.json()\n",
    "response_json"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**What kind of object is this?**\n",
    "\n",
    "A little Python syntax review: **How can we get the snapshot URL?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "snapshot_url = response_json['archived_snapshots']['closest']['url']\n",
    "snapshot_url"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
